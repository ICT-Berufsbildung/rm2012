<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Perl / Perl-Module / Standardmodule von Perl</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Was Standardmodule in Perl sind, und welche Standardmodule es gibt.">
<meta name="keywords"       content="SELFHTML, Perl, Module, Perlmodule, Standardmodule">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-06T18:50:00+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/perl/module/standardmodule.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Perl-Module" href="index.htm">
<link rel="next" title="CPAN-Module" href="cpanmodule.htm">
<link rel="prev" title="Einführung in das Arbeiten mit Modulen" href="intro.htm">
<link rel="first" title="Einführung in das Arbeiten mit Modulen" href="intro.htm">
<link rel="last" title="Modul CGI: Funktionen für die CGI-Programmierung" href="cgi.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Module</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Standardmodule von Perl</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeines">Allgemeines zu Standardmodulen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeine_module">Module mit allgemeinen Aufgaben</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#textverarbeitung">Module für Textverarbeitung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#sprache_codierung">Module für Sprachen und Zeichenkodierungen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#berechnungen">Module für Berechnungen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#dateiverwaltung">Module für Dateiverwaltung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#einausgabe">Module für Ein-/Ausgabe</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#datumzeit">Module für Datum und Zeit</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#datenbankzugriffe">Module für Datenbankzugriffe</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#prozesskommunikation">Module für Prozesskommunikation</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#variablenbindung">Module für Variablenbindung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#module_oop">Module für Modulverwaltung und für objektorientierte Programmierung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#cgi">Module für CGI-Scripts</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#internetfunktionen">Module für Internetfunktionen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#perlerweiterungen">Module zum Verwalten von Perl-Erweiterungen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#pod">Module für POD-Dokumente</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#perlcompiler">Module zum Steuern des Perl-Compilers</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#system">Systemnahe Module</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#pragma_module">Pragma-Module zum Beeinflussen des Perl-Interpreters</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="allgemeines">Allgemeines zu Standardmodulen</a></h2>

<p>Standardmodule sind Module, die zusammen mit dem Perl-Interpreter ausgeliefert werden. Dadurch haben solche Module einen sehr hohen Verbreitungsgrad und sind überall verfügbar, wo der Perl-Interpreter vollständig installiert ist. Bei neuen Versionen des Perl-Interpreters können jedoch auch neue Standardmodule mit ausgeliefert werden. Module, die erst seit der neuesten Interpreterversion mit ausgeliefert werden, stehen bei Installationen älterer Perl-Versionen also nicht automatisch zur Verfügung.</p>

<p>Einige der ausgelieferten Module haben nicht die heute übliche Dateiendung <var>.pm</var>, sondern noch die Endung <var>.pl</var>. Dies sind ältere Module, die schon vor der Version 5 des Perl-Interpreters existierten.</p>

<p>Bei einer typischen Installation des Perl-Interpreters werden die Standardmodule unterhalb des Installationsverzeichnisses im Verzeichnis <var>lib</var> und dessen Unterverzeichnissen abgelegt.</p>

<p>Die folgenden Tabellen listen Standardmodule nach Bedeutung kategorisiert auf. In der jeweils linken Spalte steht das Modul, wie es z.B. mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/module.htm#use">use</a> eingebunden werden kann. In der mittleren Spalte steht eine kurze Bedeutung. Weitere Einzelheiten zum jeweiligen Modul erfahren Sie, wenn Sie die jeweilige <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="intro.htm#perldoc">Moduldokumentation mit perldoc lesen</a>.</p>

<p>Die Tabellen erheben keinen Anspruch auf Vollständigkeit! Module, die nur intern von anderen Modulen verwendet werden oder noch keinen Zweck haben, wurden absichtlich ausgelassen. Eine vollständige Liste der Perl-Standardmodule erhalten Sie, wenn Sie mit <code>perldoc</code> das Dokument <code>perlmodlib</code> aufrufen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die Mehrzahl der Modulnamen beginnt mit einem Großbuchstaben. Es hat sich eingebürgert, Module auf diese Weise zu benennen. Die Unterscheidung von Groß- und Kleinschreibung beim Einbinden ist wichtig!</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="allgemeine_module">Module mit allgemeinen Aufgaben</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Attribute::Handlers</code></td>
<td class="tabxpl">Ermöglicht das Definieren von Handlern für die Parameter von <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/subroutinen.htm">Subroutinen</a>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Benchmark</code></td>
<td class="tabxpl">Misst die Ausführungszeit für Perl-Codes und testet den Code in Wiederholungsschleifen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Carp</code></td>
<td class="tabxpl">Stellt Funktionen zur Fehlerbehandlung bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CPAN</code></td>
<td class="tabxpl">Lädt und installiert Module aus dem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="cpanmodule.htm">CPAN-Verzeichnis</a> bei Bedarf.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CPAN::FirstTime</code></td>
<td class="tabxpl">Ergänzung zu <code>CPAN</code>: unterstützt bei den Initialisierungseinstellungen zum Benutzen des CPAN-Moduls.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CPAN::Nox</code></td>
<td class="tabxpl">Ergänzung zu <code>CPAN</code>: verhindert, dass vorkompilierte Erweiterungen ausgeführt werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Config</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf die einzelnen Konfigurationsdaten von Perl.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Data::Dumper</code></td>
<td class="tabxpl">Stellt die interne Struktur von Variablen dar.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>DB</code></td>
<td class="tabxpl">Ermöglicht den Zugriff auf die Debug-API von Perl.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Devel::DProf</code></td>
<td class="tabxpl">Misst die Ausführungszeit eines Perl-Scripts und der einzelnen enthaltenen Subroutinen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Devel::PPPort</code></td>
<td class="tabxpl">Stellt einige Features der Perl-API aus neuen Versionen des Perl-Interpreters für ältere Perl-Versionen bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Digest</code></td>
<td class="tabxpl">Stellt die Routinen der Module der <code>Digest</code>-Familie bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Digest::MD5</code></td>
<td class="tabxpl">Erlaubt es, MD5-Prüfsummen zu berechnen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Dumpvalue</code></td>
<td class="tabxpl">Stellt Perl-Daten dar. Beispielsweise lässt sich mit diesem Modul der komplette Inhalt eines <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="intro.htm#packages_module">Namensraums</a> darstellen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>English</code></td>
<td class="tabxpl">Definiert Klartextnamen für die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/vordefiniert.htm">vordefinierten Variablen</a> von Perl und macht Quellcode dadurch lesbarer.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Env</code></td>
<td class="tabxpl">Importiert Umgebungsvariablen mit einzelnen Namen und macht dadurch die Verwendung des vordefinierten Hashes <code>%ENV</code> überflüssig.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Fatal</code></td>
<td class="tabxpl">Bewirkt, dass Funktionen, die als Rückgabewert <code>false</code> liefern, mit der <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/kontrolle.htm#die">die</a>-Funktion auf <code>STDERR</code> schreiben und das laufende Script beenden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Filter::Simple</code></td>
<td class="tabxpl">Einfache Variante von <code>Filter::Util::Call</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Filter::Util::Call</code></td>
<td class="tabxpl">Erlaubt das Definieren sog. "Source-Filter", einer Art Mini-Interpreter, der den Quellcode des Scripts zur Laufzeit verändern kann, bevor er vom Interpreter verarbeitet wird. Auf diese Weise lassen sich beispielsweise eigene Sprach-Konstrukte realisieren (wie beim Standardmodul <code>Switch</code>, das auf <code>Filter::Util::Call</code> basiert).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Getopt::Long</code></td>
<td class="tabxpl">Ermöglicht die Interpretation von Kommandozeilenoptionen für das Script mit mehreren Zeichen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Getopt::Std</code></td>
<td class="tabxpl">Ermöglicht die Interpretation von Kommandozeilenoptionen für das Script mit einem Zeichen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Hash::Util</code></td>
<td class="tabxpl">Enthält verschiedene Funktionen zum Arbeiten mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/hashes.htm">Hashes</a>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>List::Util</code></td>
<td class="tabxpl">Enthält verschiedene Funktionen zum Arbeiten mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/listen.htm">Listen</a>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Memoize</code></td>
<td class="tabxpl">Versucht, Subroutinen zu beschleunigen, indem es die Rückgabewerte speichert.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Memoize::Expire</code></td>
<td class="tabxpl">Plugin für das <code>Memoize</code>-Modul, das dafür sorgt, dass die gespeicherten Rückgabewerte irgendwann ungültig werden und neu ausgelesen werden müssen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>POSIX</code></td>
<td class="tabxpl">Stellt eine Bibliothek an Funktionen für alle möglichen Zwecke bereit. Maßgeblich dabei ist der IEEE-Standard 1003.1. Viele aus C bekannte Funktionen, die dem IEEE-Standard entsprechen, finden sich in diesem Modul wieder, z.B. für Zeichenkettenverarbeitung oder Signal-Handling unter Unix.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Scalar::Util</code></td>
<td class="tabxpl">Enthält verschiedene Funktionen zum Arbeiten mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/skalare.htm">Skalaren</a>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Shell</code></td>
<td class="tabxpl">Erlaubt es, die Standardausgabe von Shell-Kommandos abzufangen und in einer Variablen zu speichern, z.B. zur Weiterverarbeitung oder zum formatierten Ausgeben, etwa in HTML-Code an den Browser.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Storable</code></td>
<td class="tabxpl">Erlaubt es, Perl-Datenstrukturen auf der Festplatte zu speichern und später wieder zu laden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Switch</code></td>
<td class="tabxpl">Erlaubt es, die aus anderen Programmiersprachen bekannten <code>switch</code>-Anweisungen in Perl zu benutzen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Symbol</code></td>
<td class="tabxpl">Generiert symbolische Namen und erlaubt dadurch, zur Laufzeit Dateihandles usw. zu erzeugen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Sys::Syslog</code></td>
<td class="tabxpl">Ermöglicht den Zugriff auf Aufrufe des Unix-Programms <code>syslog</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Unicode::Collate</code></td>
<td class="tabxpl">Klasse zum Arbeiten mit Unicode-Strings.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Unicode::Normalize</code></td>
<td class="tabxpl">Funktionen, um Unicode zu normalisieren.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Unicode::UCD</code></td>
<td class="tabxpl">Schnittstelle zur Unicode-Zeichendatenbank.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="textverarbeitung">Module für Textverarbeitung</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>MIME::Base64</code></td>
<td class="tabxpl">Ermöglicht das Umwandeln von Zeichenketten in das Base64-Format und umgekehrt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>MIME::QuotedPrint</code></td>
<td class="tabxpl">Ermöglicht das Umwandeln von Zeichenketten in das Quoted-Printable-Format und umgekehrt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Search::Dict</code></td>
<td class="tabxpl">Durchsucht ein Wörterbuch nach einem Wort und gibt die Dateiposition oder <code>-1</code> zurück, je nachdem, ob das Wort gefunden wurde oder nicht.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Term::ANSIColor</code></td>
<td class="tabxpl">Erlaubt es, Bildschirmausgaben einzufärben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Term::Cap</code></td>
<td class="tabxpl">Ermöglicht den Zugriff auf <var>termcap</var> (Unix).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Term::Complete</code></td>
<td class="tabxpl">Vervollständigt Worteingaben bei Prompt-Aufforderungen automatisch.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Term::ReadLine</code></td>
<td class="tabxpl">Stellt eine Schnittstelle für diverse andere Packages aus der <var>ReadLine</var>-Reihe dar.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::Abbrev</code></td>
<td class="tabxpl">Erzeugt aus einer Liste von Begriffen eine Abkürzungstabelle.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::Balanced</code></td>
<td class="tabxpl">Extrahiert Text aus einer Zeichenkette, der von bestimmten Zeichenketten eingeschlossen ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::ParseWords</code></td>
<td class="tabxpl">Zerlegt einen Text in die einzelnen Wörter und speichert diese in einer Liste. Wörter in Anführungszeichen gelten dabei als ein zusammenhängender Ausdruck.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::Soundex</code></td>
<td class="tabxpl">Erzeugt für ein Wort den Soundex-Code entsprechend dem Soundex-Algorithmus von Knuth. Dieser Code ist ein Schema für die Erzeugung von computergesprochenem Englisch.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::Tabs</code></td>
<td class="tabxpl">Kann in einem Text Tabulatoren durch eine feste Anzahl Leerzeichen ersetzen oder umgekehrt mehrere Leerzeichen zu einem Tabulator-Zeichen zusammenfassen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Text::Wrap</code></td>
<td class="tabxpl">Bricht Text automatisch um entsprechend einer zu definierenden Vorgabe, bei welcher Zeichenspalte umbrochen werden soll.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="sprache_codierung">Module für Sprachen und Zeichenkodierungen</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode</code></td>
<td class="tabxpl">Allgemeine API für die Module der <code>Encode</code>-Familie.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Alias</code></td>
<td class="tabxpl">Erlaubt das Definieren von Aliasnamen für Kodierungen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Byte</code></td>
<td class="tabxpl">Erlaubt das Arbeiten mit Kodierungen, die nur 1 Byte für ein Zeichen verwenden (zum Beispiel die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../inter/zeichenkodierungen.htm">ISO-8859-Kodierungen</a>).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::CN</code></td>
<td class="tabxpl">Erlaubt es, mit chinesischen Zeichenkodierungen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::EBCDIC</code></td>
<td class="tabxpl">Erlaubt es, mit EBCDIC-Zeichenkodierungen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Encoder</code></td>
<td class="tabxpl">Objektorientiertes Tool zum Arbeiten mit Zeichenkodierungen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Encoding</code></td>
<td class="tabxpl">Basisklasse für Zeichenkodierungen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Guess</code></td>
<td class="tabxpl">Versucht, den Codierungstyp von Daten festzustellen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::JP</code></td>
<td class="tabxpl">Erlaubt es, mit japanischen Zeichenkodierungen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::KR</code></td>
<td class="tabxpl">Erlaubt es, mit koreanischen Zeichenkodierungen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::MIME::Header</code></td>
<td class="tabxpl">Erlaubt das Verarbeiten von MIME-kodierten Mailheader-Angaben (derzeit wird nur UTF-8 unterstützt).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Symbol</code></td>
<td class="tabxpl">Erlaubt es, mit Codierungen von verschiedenen Symbolen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::TW</code></td>
<td class="tabxpl">Erlaubt es, mit taiwanesischen Zeichenkodierungen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Unicode</code></td>
<td class="tabxpl">Erlaubt das Arbeiten mit Zeichenkodierungen nach dem Unicode-Standard.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Encode::Unicode::UTF7</code></td>
<td class="tabxpl">Erlaubt das Arbeiten mit Zeichenkodierungen nach UTF-7.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>I18N::Collate</code></td>
<td class="tabxpl">Passt skalare Daten mit 8 Bit Zeichenbreite an das verwendete System an (nur im Zusammenhang mit Perl-Versionen unter 5.003_06 interessant, da seitdem im Perl-Interpreter direkt implementiert).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>I18N::Langinfo</code></td>
<td class="tabxpl">Gibt Informationen über die Spracheinstellungen des Systems zurück.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>I18N::LangTags</code></td>
<td class="tabxpl">Enthält Funktionen, um mit Sprachkürzeln nach RFC 3066 zu arbeiten (z.B. <code>de</code>, <code>en</code> und <code>fr</code>).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>I18N::LangTags::List</code></td>
<td class="tabxpl">Versucht, Sprachkürzel in einen Sprachnamen umzuwandeln.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Constants</code></td>
<td class="tabxpl">Definiert verschiedene Konstanten, die beim Arbeiten mit den Modulen <code>Locale::Country</code>, <code>Locale::Currency</code>, <code>Locale::Language</code> und <code>Locale::Script</code> genutzt werden können.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Country</code></td>
<td class="tabxpl">Enthält Ländernamen und -codes nach ISO&nbsp;3166.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Currency</code></td>
<td class="tabxpl">Enthält Währungsnamen und -codes nach ISO&nbsp;4217.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Language</code></td>
<td class="tabxpl">Enthält Sprachnamen und -codes nach ISO&nbsp;639.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Maketext</code></td>
<td class="tabxpl">Framework um Software mehrsprachig anzubieten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Locale::Script</code></td>
<td class="tabxpl">Enthält Schriftnamen und -codes nach ISO&nbsp;15924.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="berechnungen">Module für Berechnungen</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Math::BigFloat</code></td>
<td class="tabxpl">Erlaubt das Rechnen mit Fließkommazahlen, die größer oder kleiner sind als das, was Perl normalerweise als Fließkommazahl zu interpretieren in der Lage ist. <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/zahlen.htm#beispiel2">Beispiel</a></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Math::BigInt</code></td>
<td class="tabxpl">Erlaubt das Rechnen mit Ganzzahlen, die größer sind als das, was Perl normalerweise als Ganzzahl zu interpretieren in der Lage ist. <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/zahlen.htm#beispiel2">Beispiel</a></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Math::BigRat</code></td>
<td class="tabxpl">Erlaubt das Rechnen mit Zahlen, die größer sind als das, was Perl normalerweise als Zahl zu interpretieren in der Lage ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Math::Complex</code></td>
<td class="tabxpl">Unterstützt das Rechnen mit komplexen Zahlen, wie sie etwa zum Lösen mancher Gleichungen erforderlich sind.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Math::Trig</code></td>
<td class="tabxpl">Stellt die in Perl selber fehlenden trigonometrischen Funktionen für Tangens, Arcus Cosinus, Arcus Sinus sowie Berechnungen mit der Konstanten Pi bereit.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="dateiverwaltung">Module für Dateiverwaltung</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Cwd</code></td>
<td class="tabxpl">Ermittelt das aktuelle Arbeitsverzeichnis</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>DirHandle</code></td>
<td class="tabxpl">Bietet eine objektorientierte Alternative zu den Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#opendir">opendir</a>, <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#readdir">readdir</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#closedir">closedir</a> an. </td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Basename</code></td>
<td class="tabxpl">Zerlegt eine Dateiangabe mit Pfad in den Pfadnamen und den Dateinamen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::CheckTree</code></td>
<td class="tabxpl">Kann mehrere Dateien oder Verzeichnisse auf Existenz überprüfen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Compare</code></td>
<td class="tabxpl">Vergleicht zwei Dateien und überprüft, ob sie inhaltlich identisch sind.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Copy</code></td>
<td class="tabxpl">Ermöglicht das Kopieren von Dateien und gilt als wichtiges Tool, um Dateien mit Perl betriebssystemunabhängig kopieren zu können.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::DosGlob</code></td>
<td class="tabxpl">Erzeugt von einem Verzeichnis eine Dateiliste und erlaubt dabei die Angabe DOS-typischer Wildcards wie <code>*.exe</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Find</code></td>
<td class="tabxpl">Durchsucht Verzeichnisbäume nach Dateien.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Path</code></td>
<td class="tabxpl">Legt mehrere Verzeichnisse auf einmal neu an oder löscht mehrere Verzeichnisse, je nach Wunsch mitsamt allen darin enthaltenen Dateien.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec</code></td>
<td class="tabxpl">Stellt Methoden bereit, um mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten. Da diese betriebssystemspezifisch sind, gibt es für diverse wichtige Betriebssysteme entsprechende Untermodule.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::Cygwin</code></td>
<td class="tabxpl">Stellt Methoden bereit, um unter Cygwin mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::Epoc</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf dem Betriebssystem Epoc mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::Mac</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf dem Betriebssystem Macintosh mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::OS2</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf dem Betriebssystem OS/2 mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::Unix</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf Unix-Derivaten mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::VMS</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf dem Betriebssystem VMS mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Spec::Win32</code></td>
<td class="tabxpl">Stellt Methoden bereit, um auf Windows-Betriebssystemen (ab Windows 95) mit syntaktisch korrekten Dateinamen und Pfaden zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::stat</code></td>
<td class="tabxpl">Ruft einfach die Perl-Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/dateiverwaltung.htm#stat">stat</a> auf und erlaubt es, objektorientiert auf die Daten zuzugreifen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>File::Temp</code></td>
<td class="tabxpl">Stellt Funktionen bereit, um auf sichere Weise mit temporären Dateien mit eindeutigen Namen zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>FileCache</code></td>
<td class="tabxpl">Erlaubt es, mehr Dateien gleichzeitig geöffnet zu halten als das Betriebssystem erlaubt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>FileHandle</code></td>
<td class="tabxpl">Ermöglicht das Arbeiten mit objektorientierten Handles für Dateien und stellt alle wichtigen Funktionen zum Lesen und Schreiben von Dateien und zum Positionieren des Dateizeigers bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>FindBin</code></td>
<td class="tabxpl">Liefert das Verzeichnis, in dem sich das Perl-Script befindet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>SelectSaver</code></td>
<td class="tabxpl">Sichert Handles für Dateien und erlaubt es, gesicherte Handles später wiederzuverwenden.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="einausgabe">Module für Ein-/Ausgabe</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO</code></td>
<td class="tabxpl">lädt die untergeordneten <code>IO</code>-Module.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Dir</code></td>
<td class="tabxpl">Ermöglicht das objektorientierte Arbeiten mit Verzeichnishandles.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::File</code></td>
<td class="tabxpl">Ermöglicht das Arbeiten mit objektorientierten Ein-/Ausgabe-Handles. Erbt dabei Objekte von <code>IO::Handle</code> und <code>IO::Seekable</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Handle</code></td>
<td class="tabxpl">Basisklasse für objektorientierte Ein-/Ausgabe-Handles, die z.B. von <code>IO::File</code> verwendet werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Pipe</code></td>
<td class="tabxpl">Ermöglicht es, mit Hilfe objektorientierter Methoden Pipes zwischen Prozessen (Umlenkung der Ausgabe eines Prozesses in die Eingabe eines nachfolgenden Prozesses) zu erzeugen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Poll</code></td>
<td class="tabxpl">Ermöglicht es, mit Hilfe objektorientierter Methoden mit dem <code>poll</code>-Systembefehl zu arbeiten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Seekable</code></td>
<td class="tabxpl">Stellt objektorientierte Front-Ends für die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#seek">seek</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#tell">tell</a>  bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Select</code></td>
<td class="tabxpl">Bietet eine objektorientierte Verwaltung von Ein-/Ausgabe-Handles an und enthält Funktionen zum Erzeugen, Löschen und Überprüfen von Handles.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IO::Socket</code></td>
<td class="tabxpl">Bietet eine objektorientierte Verwaltung von Ein-/Ausgabe-Sockets für Prozesskommunikation über ein Netzwerk, bevorzugt TCP/IP, an und enthält Funktionen zum Erzeugen, Löschen und Abfragen der Sockets.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>PerlIO</code></td>
<td class="tabxpl">Erlaubt Ein-/Ausgabe-Operationen mit kodierten Daten. Sie können dann mit den Daten arbeiten, als wären sie nicht kodiert.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>PerlIO::encoding</code></td>
<td class="tabxpl">Erlaubt das transparente Arbeiten mit Dateien, deren Inhalt mit einem Verfahren wie UTF-8 kodiert wurde. Sie können dann mit den Daten arbeiten, als wären sie nicht kodiert.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>PerlIO::scalar</code></td>
<td class="tabxpl">Erlaubt es, mit einem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/skalare.htm">Skalar</a> so zu arbeiten, als ob er eine Datei wäre.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>PerlIO::via</code></td>
<td class="tabxpl">Ein Hilfsmodul zum Arbeiten mit Filtern für die Ein-/Ausgabe von Dateien mit kodiertem Inhalt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>PerlIO::via::QuotedPrint</code></td>
<td class="tabxpl">Erlaubt das transparente Arbeiten mit Dateien, deren Inhalt im Quoted-Printable-Format vorliegt. Sie können dann mit den Daten arbeiten, als wären sie nicht kodiert.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="datumzeit">Module für Datum und Zeit</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Time::HiRes</code></td>
<td class="tabxpl">Ersetzt interne Funktionen wie <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#time">time</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/systemaufrufe.htm#sleep">sleep</a> und gibt ihnen die Möglichkeit, mit Millisekunden umzugehen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Time::Local</code></td>
<td class="tabxpl">Stellt Umkehrfunktionen für die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#gmtime">gmtime</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#localtime">localtime</a> zur Verfügung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Time::gmtime</code></td>
<td class="tabxpl">Überschreibt die Perl-Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#gmtime">gmtime</a> und ermöglicht einen objektorientierten Zugriff auf die Daten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Time::localtime</code></td>
<td class="tabxpl">Überschreibt die Perl-Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#localtime">localtime</a> und ermöglicht einen objektorientierten Zugriff auf die Daten.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="datenbankzugriffe">Module für Datenbankzugriffe</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>AnyDBM_File</code></td>
<td class="tabxpl">Basismodul für die übrigen Module dieser Abteilung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>DB_File</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf Datenbankdateien von Berkeley DB Version 1.x.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>GDBM_File</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf GDBM-Dateien über die <code>tie</code>-Funktion, die eine Variable an eine Objektklasse bindet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>NDBM_File</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf NDBM-Dateien über die <code>tie</code>-Funktion, die eine Variable an eine Objektklasse bindet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ODBM_File</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf ODBM-Dateien über die <code>tie</code>-Funktion, die eine Variable an eine Objektklasse bindet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>SDBM_File</code></td>
<td class="tabxpl">Erlaubt den Zugriff auf SDBM-Dateien über die <code>tie</code>-Funktion, die eine Variable an eine Objektklasse bindet.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="prozesskommunikation">Module für Prozesskommunikation</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IPC::Msg</code></td>
<td class="tabxpl">Ermöglicht es, Nachrichtenwarteschlangen (Message Queues) und zugehörige Nachrichten für Unix-System V zu stellen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IPC::Open2</code></td>
<td class="tabxpl">Öffnet einen Unix-Prozess zum Lesen und Schreiben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IPC::Open3</code></td>
<td class="tabxpl">Öffnet einen Unix-Prozess zum Lesen, Schreiben und für Fehlerbehandlung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IPC::Semaphore</code></td>
<td class="tabxpl">Ermöglicht es, die Semaphore-Funktion von Unix-System V zu nutzen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>IPC::SysV</code></td>
<td class="tabxpl">Stellt IPC-Konstanten von Unix-System V bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Thread</code></td>
<td class="tabxpl">Ermöglicht das Arbeiten mit Multithreading (Teile eines Scripts werden separat in eigenen "Threads" ausgeführt, während die "normale" Ausführung des Scripts weiterläuft.)</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Thread::Queue</code></td>
<td class="tabxpl">Stellt eine Warteschlange in Form einer Liste bereit, die Threads erlaubt, Variablen hinzuzufügen oder zu entfernen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Thread::Semaphore</code></td>
<td class="tabxpl">Ermöglicht die Anwendung der Semaphore-Technik zwischen Threads.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Thread::Signal</code></td>
<td class="tabxpl">Startet einen speziellen Signal-Handler-Thread, an den für den laufenden Prozess ankommende Signale weitergeleitet werden, sodass ein Script, das durch Multithreading stark beschäftigt ist, Signale in einem Zwischenspeicher halten kann, bis eine Abarbeitung möglich ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Thread::Specific</code></td>
<td class="tabxpl">Generiert für einen Thread einen eindeutigen Schlüssel.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="variablenbindung">Module für Variablenbindung</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::Array</code></td>
<td class="tabxpl">Bindet eine Liste an eine Objektklasse.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::File</code></td>
<td class="tabxpl">Ermöglicht es, die Zeilen einer Datei über einen Array anzusprechen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::Handle</code></td>
<td class="tabxpl">Bindet ein Handle an eine Objektklasse.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::Hash</code></td>
<td class="tabxpl">Bindet einen Hash an eine Objektklasse</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::Memoize</code></td>
<td class="tabxpl">Fügt die Daten zu einem Hash hinzu, wenn Sie benötigt werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::RefHash</code></td>
<td class="tabxpl">Ermöglicht Referenzen als Schlüssel für Hashes.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::Scalar</code></td>
<td class="tabxpl">Bindet einen Skalar an eine Objektklasse.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Tie::SubstrHash</code></td>
<td class="tabxpl">Ermöglicht einen Hash-artigen Zugriff auf eine Liste fester Länge.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="module_oop">Module für Modulverwaltung und objektorientierte Programmierung</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Class::ISA</code></td>
<td class="tabxpl">Stellt die Werte der <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/vordefiniert.htm#arrays_hashes">@ISA</a>-Listen sämtlicher eingebundener Basisklassen bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Class::Struct</code></td>
<td class="tabxpl">Erzeugt Datenstrukturen nach dem Vorbild von <code>struct</code> in C.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Exporter</code></td>
<td class="tabxpl">Ermöglicht Modulen, genau festzulegen, welche Variablen und Funktionen in den Namensraum eines einbindenden Scripts importiert werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>NEXT</code></td>
<td class="tabxpl">Stellt eine Pseudoklasse namens <code>NEXT</code> bereit, mit der Sie beim Aufruf von Methoden von Klassen Methoden gleichen Namens aus den Basisklassen mit aufrufen können.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>UNIVERSAL</code></td>
<td class="tabxpl">Stellt die Basis-Objektklasse für objektorientiertes Programmieren in Perl dar. Erlaubt das Überprüfen von Referenzen und Methoden bei beliebigen Objekten.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="cgi">Module für CGI-Scripts</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI</code></td>
<td class="tabxpl">Kann Formulardaten parsen und ermöglicht dadurch die bequeme Weiterverarbeitung von Formulardaten. Stellt außerdem verschiedene Mittel bereit, um HTML-Ausgaben an den Browser zu senden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Apache</code></td>
<td class="tabxpl">Variante des <code>CGI</code>-Moduls, die speziell für den Einsatz unter dem Apache Webserver optimiert war. Das Modul ist inzwischen veraltet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Carp</code></td>
<td class="tabxpl">Ermöglicht es, auftretende Fehler und Laufzeitprobleme auch an die Standardausgabe und damit an den auf Ausgabe wartenden Browser zu senden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Cookie</code></td>
<td class="tabxpl">Erlaubt das Setzen und Auslesen von Netscape- bzw. HTTP1.1-kompatiblen Cookies auf dem Rechner des Anwenders. Mit Hilfe von Cookies lassen sich Informationen auf dem Anwenderrechner speichern, die beim nächsten Aufruf wieder ausgelesen werden können (Stichwort "mitdenkende Web-Seiten").</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Fast</code></td>
<td class="tabxpl">Schnittstelle zum Fast-CGI-Standard, durch den CGI-Scripts deutlich schneller werden, weil sie als Prozesse dauerhaft im Arbeitsspeicher des Server-Rechners gehalten werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Push</code></td>
<td class="tabxpl">Schnittstelle zum Server-Push, also dem Senden von Inhalten an den Browser ohne dessen explizite Anfrage. Web-Seiten können auf diese Weise in bestimmten Zeitintervallen automatisch neu gesendet werden, was bei schnell wechselnden Inhalten sinnvoll ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>CGI::Switch</code></td>
<td class="tabxpl">Probiert selbstständig, ein neues CGI-Objekt anzulegen, und zwar wenn möglich mit <code>CGI::Apache</code>, ansonsten mit dem normalen <code>CGI</code>-Modul. Das Modul ist inzwischen veraltet.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="internetfunktionen">Module für Internetfunktionen</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::Cmd</code></td>
<td class="tabxpl">Basisklasse zur Kommunikation mit befehlsbasierten Internet-Protokollen (wie FTP und SMTP).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::Domain</code></td>
<td class="tabxpl">Ermittelt den Host- und Domainnamen des aktuellen Rechners.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::FTP</code></td>
<td class="tabxpl">Klasse zur Kommunikation mit FTP-Servern.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::Netrc</code></td>
<td class="tabxpl">Objektorientierter Zugriff auf die <var>.netrc</var>-Datei des aktuellen Benutzers.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::NNTP</code></td>
<td class="tabxpl">Klasse zur Kommunikation mit NNTP-Servern (News).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::Ping</code></td>
<td class="tabxpl">Überprüft die Erreichbarkeit eines Host-Rechners im Internet mit der dafür üblichen Ping-Funktion.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::POP3</code></td>
<td class="tabxpl">Klasse zur Kommunikation mit POP3-Servern.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::SMTP</code></td>
<td class="tabxpl">Klasse zur Kommunikation mit SMTP-Servern.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::Time</code></td>
<td class="tabxpl">Funktionen zum Zugriff auf Zeit-Server.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::hostent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#gethostbyaddr">gethostbyaddr</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#gethostbyname">gethostbyname</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>netdb.h</var> ähnelt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::netent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getnetent">getnetent</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getnetbyname">getnetbyname</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>netdb.h</var> ähnelt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::protoent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getprotoent">getprotoent</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getprotobyname">getprotobyname</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>netdb.h</var> ähnelt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Net::servent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getservent">getservent</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getservbyname">getservbyname</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>netdb.h</var> ähnelt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Socket</code></td>
<td class="tabxpl">Stellt eine Übersetzung der C-Header-Datei <var>socket.h</var> dar und kann Hostnamen, Portnummern usw. ermitteln.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Sys::Hostname</code></td>
<td class="tabxpl">Ermittelt den Hostnamen des Rechners, auf dem das Script läuft.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>User::grent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getgrent">getgrent</a>, <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getgrgid">getgrgid</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getgrnam">getgrnam</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>grp.h</var> ähnelt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>User::pwent</code></td>
<td class="tabxpl">Ersetzt die Perl-Funktionen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getpwent">getpwent</a>, <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getpwuid">getpwuid</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/konfiguration.htm#getpwnam">getpwnam</a> durch ein Objekt. Das Objekt stellt eine Datenstruktur für den Zugriff auf die Konfigurationsdaten zur Verfügung, die der von C aus dessen Headerdatei <var>pwd.h</var> ähnelt.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="perlerweiterungen">Module zum Verwalten von Perl-Erweiterungen</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>AutoLoader</code></td>
<td class="tabxpl">Lädt Unterprogramme nur wenn erforderlich. Dazu ist die Verwendung von <code>__END__</code> erforderlich.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>AutoSplit</code></td>
<td class="tabxpl">Splittet eine Scriptdatei in mehrere Einzeldateien auf und ermöglicht auf diese Weise, dass das Modul <code>AutoLoader</code> Unterprogramme nur bei Aufruf  lädt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Devel::Peek</code></td>
<td class="tabxpl">Ermöglicht das Prüfen von Daten, die von einem XS-Programm an ein Perl-Script gesendet wurden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Devel::SelfStubber</code></td>
<td class="tabxpl">Regelt Aufrufe von Objektmethoden in einer objektorientierten Hierarchie, die sich über mehrere Module erstreckt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>DynaLoader</code></td>
<td class="tabxpl">Lädt dynamisch Routinen aus den C-Bibliotheken in das laufende Perl-Script.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Command</code></td>
<td class="tabxpl">Ersetzt Unix-Kommandos in Makefiles, beispielsweise für eine Win32-Portierung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Constant</code></td>
<td class="tabxpl">Erzeugt XS-Code, um Konstanten aus C-Header-Dateien zu laden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Embed</code></td>
<td class="tabxpl">Erlaubt das Einbinden von Aufrufen des Perl-Interpreters in C/C++ Programmen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Install</code></td>
<td class="tabxpl">Installiert Dateien von einem Installationsverzeichnis ins Zielverzeichnis.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Installed</code></td>
<td class="tabxpl">Findet heraus, welche Module bereits installiert sind. Sinnvoll beispielsweise, um bei Bedarf nicht installierte Module dynamisch nachzuinstallieren.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Liblist</code></td>
<td class="tabxpl">Liefert eine Liste zu verwendender Erweiterungsbibliotheken.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::MakeMaker</code></td>
<td class="tabxpl">Erzeugt ein Makefile namens <var>Makefile.PL</var>, das die Installation von Dateien erlaubt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Manifest</code></td>
<td class="tabxpl">Stellt Funktionen bereit, um eine Manifest-Datei zu erzeugen und zu überprüfen. In die Manifest-Datei werden alle Dateien eines Verzeichnisbaums unterhalb des aktuellen Verzeichnisses geschrieben. Auf diese Weise lässt sich der Originalzustand eines Verzeichnisbaums sichern, bevor z.B. eine Installationsroutine daraus Dateien kopiert, löscht usw.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Miniperl</code></td>
<td class="tabxpl">Schreibt den C-Code für die Datei <var>perlmain.c</var>, aus der sich der Perl-Interpreter neu linken lässt. Dabei lassen sich Module angeben, die mit gelinkt werden sollen. Auf diese Weise können also Module zu eingebauten Features einer eigenen Variante des Perl-Interpreters werden!</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Mkbootstrap</code></td>
<td class="tabxpl">Erzeugt eine so genannte Bootstrap-Datei, die vom Modul <code>DynaLoader</code> verwendet wird.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Mksymlists</code></td>
<td class="tabxpl">Erzeugt Hilfsdateien, die bei manchen Betriebssystemen benötigt werden, um Bibliotheken zu linken.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::Packlist</code></td>
<td class="tabxpl">Liest und schreibt <var>.packlist</var>-Dateien, die Informationen über zu installierende Pfade, Dateien usw. enthalten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ExtUtils::testlib</code></td>
<td class="tabxpl">Stellt Funktionen bereit, um eine Erweiterungsbibliothek zu testen, bevor sie installiert wird.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>SelfLoader</code></td>
<td class="tabxpl">Bewirkt, dass Unterprogramme, die in einem Script nach <code>__DATA__</code> notiert sind, bei Bedarf kompiliert und ausgeführt werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>XS::APItest</code></td>
<td class="tabxpl">Prüft, ob die C-API von Perl korrekt funktioniert.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>XS::Typemap</code></td>
<td class="tabxpl">Prüft die XS-Typemaps von Perl.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>XSLoader</code></td>
<td class="tabxpl">Lädt dynamisch Routinen aus den C-Bibliotheken in das laufende Perl-Script (ähnlich wie <code>DynaLoader</code>, jedoch weniger komplex).</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="pod">Module für POD-Dokumente</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Checker</code></td>
<td class="tabxpl">Prüft die Syntax von POD-Dokumenten (POD ist das Klartextformat, in dem die Perl-Dokumentation geschrieben ist, das z.B. auch für die interne Moduldokumentation verwendet wird und das mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="intro.htm#perldoc">perldoc</a> lesbar ist - also das Format mit den "<code>=</code>-Kommandos").</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Find</code></td>
<td class="tabxpl">Durchsucht einen Verzeichnisbaum nach POD-Dokumenten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Functions</code></td>
<td class="tabxpl">Erzeugt eine formatierte Liste von Perl-Standardfunktionen, ähnlich dem POD-Dokument <code>perlfunc</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Html</code></td>
<td class="tabxpl">Generiert aus dem POD-Format HTML-Code inklusive Querverweisen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::InputObjects</code></td>
<td class="tabxpl">Stellt Objekte bereit, die beispielsweise die Absätze und Anweisungen in einem POD-Dokument darstellen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::LaTeX</code></td>
<td class="tabxpl">Konvertiert POD-Dokumente ins LaTeX-Format.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Man</code></td>
<td class="tabxpl">Konvertiert POD-Dokumente in ein Format, das vom <code>man</code>-Befehl von UNIX dargestellt werden kann.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::ParseLink</code></td>
<td class="tabxpl">Parst Links in einem POD-Dokument.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Parser</code></td>
<td class="tabxpl">Basisklasse zum Parsen des POD-Formats.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::ParseUtils</code></td>
<td class="tabxpl">Enthält verschiedene Klassen zum Parsen von POD-Dokumenten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Plainer</code></td>
<td class="tabxpl">Wandelt POD-Texte in einem neuen Format in das ältere um.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::PlainText</code></td>
<td class="tabxpl">Generiert aus dem POD-Format reinen formatierten Text ohne Steuerbefehle.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Select</code></td>
<td class="tabxpl">Liest eine bestimmte Stelle aus einem POD-Dokument aus.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Text</code></td>
<td class="tabxpl">Generiert aus dem POD-Format reinen Text ohne Steuerbefehle.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Pod::Usage</code></td>
<td class="tabxpl">Erzeugt aus POD-Dokumenten Hinweise zur Nutzung von Perl-Scripts an der Kommandozeile.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="perlcompiler">Module zum Steuern des Perl-Compilers</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B</code></td>
<td class="tabxpl">Stellt die Basisklassen des Perl-Compilers zur Verfügung. Mit Hilfe des Perl-Compilers lässt sich der Code eines Perl-Scripts in C-Code übersetzen, der dann mit einem C-Compiler zu einer für das Betriebssystem ausführbaren Datei kompiliert und gelinkt werden kann. Das <code>B</code>-Modul stellt einem Perl-Script die Funktionalität des Perl-Compilers zur Verfügung. Das Perl-Script kann auf diese Weise den Perl-Compiler steuern.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Asmdata</code></td>
<td class="tabxpl">Erzeugt automatisch generierte Datenstrukturen für Byte-Code.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Assembler</code></td>
<td class="tabxpl">Assembliert Byte-Code.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Bblock</code></td>
<td class="tabxpl">Durchläuft die Grundblöcke eines Scripts.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Bytecode</code></td>
<td class="tabxpl">Schnittstelle zum perl-internen Byte-Code eines Scripts.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::C</code></td>
<td class="tabxpl">Schnittstelle zum C-Backend des Perl-Compilers.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::CC</code></td>
<td class="tabxpl">Optimierte Schnittstelle zum C-Backend des Perl-Compilers.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Concise</code></td>
<td class="tabxpl">Zeigt die Struktur des OP-Code eines Perl-Scripts.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Debug</code></td>
<td class="tabxpl">Durchläuft den Code des Perl-Scripts und zeigt Debug-Informationen an.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Deparse</code></td>
<td class="tabxpl">Disassembliert den Perl-Byte-Code.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Disassembler</code></td>
<td class="tabxpl">Stellt den Perl-Code eines Perl-Scripts aus Byte-Code wieder her.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Lint</code></td>
<td class="tabxpl">Benutzt beim Kompilieren die Warnstufe, die bei Perl durch den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#aufruf">Aufruf des Perl-Interpreters</a> mit der Option <code>-w</code> erreicht wird.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Showlex</code></td>
<td class="tabxpl">Zeigt die Namen von lexikalischen Variablen in Dateien und Funktionen an.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Stackobj</code></td>
<td class="tabxpl">Hilfsmodul für <code>B::CC</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Stash</code></td>
<td class="tabxpl">Gibt an, welche Stashes geladen sind.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Terse</code></td>
<td class="tabxpl">Parst ein Perl-Script und zeigt dabei nur wenige Informationen an.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>B::Xref</code></td>
<td class="tabxpl">Erzeugt eine Liste aller Kreuzreferenzen und Abhängigkeiten in einem Perl-Script.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>O</code></td>
<td class="tabxpl">Schnittstelle zum Backend des Perl-Compilers, die es erlaubt, die Standardausgabe abzufangen und in einer Variable zu speichern.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="system">Systemnahe Module</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Errno</code></td>
<td class="tabxpl">Importiert die Konstanten aus der Systemdatei <var>errno.h</var> für die Fehlerbehandlung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Fcntl</code></td>
<td class="tabxpl">Stellt eine Übersetzung der C-Headerdatei <var>fcntl.h</var> dar und importiert daraus alle Definitionen. Diese Definitionen unterstützen Sie beim Öffnen von Dateien.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Opcode</code></td>
<td class="tabxpl">Beeinflusst die Perl-interne Kompilation eines Scripts, bevor es ausgeführt wird. Wird in Zusammenhang mit dem Modul <code>Safe</code> verwendet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Safe</code></td>
<td class="tabxpl">Erzeugt geschützte Bereiche mit eigenen Namensräumen, um Perl-Code darin auszuführen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Test</code></td>
<td class="tabxpl">Stellt Test-Typen und Fehlerreaktionen zum Austesten von Perl-Scripts bereit.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Test::Builder</code></td>
<td class="tabxpl">Erlaubt es, eigene Bibliotheken für Tests zu schreiben, die zusammenarbeiten können.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Test::Harness</code></td>
<td class="tabxpl">Führt standardisierte Tests durch und gibt die Ergebnisse aus.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Test::More</code></td>
<td class="tabxpl">Erweiterung von <code>Test::Simple</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Test::Simple</code></td>
<td class="tabxpl">Ermöglicht das einfache Durchführen von Tests.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>Win32</code></td>
<td class="tabxpl">Ermöglicht den Zugriff auf einige interne Funktionen von Windows-Systemen.</td>
</tr>
</table>
&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="pragma_module">Pragma-Module zum Beeinflussen des Perl-Interpreters</a></h2>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Modul (Syntax für Einbindung)</th>
<th>Aufgabe</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>attrs</code></td>
<td class="tabxpl">Setzt und ermittelt Attribute eines Unterprogrammes. Dieses Pragma ist veraltet, stattdessen soll <code>attributes</code> verwendet werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>attributes</code></td>
<td class="tabxpl">Setzt und ermittelt Attribute von Unterprogrammen und Variablen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>autouse</code></td>
<td class="tabxpl">Parst Perl-Code aus eingebundenen Modulen erst dann, wenn Funktionen des Moduls aufgerufen werden. Ein Perl-Script kann dadurch schneller starten, verliert die gewonnene Zeit aber gegebenenfalls während der Ausführung wieder.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>base</code></td>
<td class="tabxpl">Definiert Basisklassen für die aktuelle Klasse.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>bigint</code></td>
<td class="tabxpl">Erlaubt das Rechnen mit Ganzzahlen, die größer sind als das, was Perl normalerweise als Ganzzahl zu interpretieren in der Lage ist. Im Gegensatz zu <code>Math::BigInt</code> werden hierbei die Operatoren mit dieser Funktion ausgestattet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>bignum</code></td>
<td class="tabxpl">Stattet die Operatoren mit der Fähigkeit aus, mit Zahlen zu rechnen, die größer oder kleiner sind als das, was Perl normalerweise als Zahl zu interpretieren in der Lage ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>bigrat</code></td>
<td class="tabxpl">Stattet die Operatoren mit der Fähigkeit aus, mit Zahlen zu rechnen, die größer oder kleiner sind als das, was Perl normalerweise als Zahl zu interpretieren in der Lage ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>blib</code></td>
<td class="tabxpl">Durchsucht nicht installierte Module. Gedacht für die Verwendung im Zusammenhang mit der Option <code>-M</code> beim Aufruf des Perl-Compilers.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>bytes</code></td>
<td class="tabxpl">Behandelt Daten nicht als UTF-8, sondern arbeitet sie byteweise ab.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>constant</code></td>
<td class="tabxpl">Deklariert unveränderliche Konstanten, ähnlich, wie es in C mit <code>#define</code> möglich ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>charnames</code></td>
<td class="tabxpl">Erlaubt es, Zeichen aus anderen Zeichenvorräten mit Hilfe Ihrer Namen zu erzeugen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>diagnostics</code></td>
<td class="tabxpl">Gibt bei Fehlermeldungen, die der Perl-Compiler ausgibt, zugleich deren Erläuterungen mit aus. Dazu werden die Beschreibungen aus <var>perldiag</var> verwendet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>encoding</code></td>
<td class="tabxpl">Ermöglicht das Schreiben von Perl-Quellcode in anderen Kodierungen als der ASCII- oder UTF-8-Kodierung.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>fields</code></td>
<td class="tabxpl">Stellt sicher, dass der vordefinierte Hash <code>%FIELDS</code> zur Kompilierzeit versorgt ist.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>filetest</code></td>
<td class="tabxpl">Verändert das Verhalten einiger <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/dateiverwaltung.htm#dateitest">Dateitestoperatoren</a> und ermöglicht so, die Berechtigungen von Dateien genauer zu ermitteln (beispielsweise falls sog. Access Control Lists verwendet werden).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>if</code></td>
<td class="tabxpl">Erlaubt es, ein Perl-Modul nur unter bestimmten Bedingungen zu laden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>integer</code></td>
<td class="tabxpl">Bewirkt, dass der Perl-Interpreter bei Rechenoperationen nur mit Ganzzahlen rechnet. Eine Operation wie <code>10/3</code> ergibt dann <code>3</code> ohne Nachkommastellen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>lib</code></td>
<td class="tabxpl">Ermöglicht das Erweitern der vordefinierten Liste <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="intro.htm#speicherorte_inc">@INC</a>, bevor das Script ausgeführt wird. Auf diese Weise lassen sich Pfade zu eigenen Modulen in den Suchpfad <code>@INC</code> mit aufnehmen, die vom Script benötigt werden, sich aber nicht in den vordefinierten Suchpfaden befinden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>locale</code></td>
<td class="tabxpl">Schaltet die Verwendung von lokalen Einstellungen, wie sie in <code>POSIX</code> definiert sind, ein oder aus. Solche lokalen Einstellungen betreffen z.B. die zu verwendende Zeichenkodierung bei Zeichenkettenvergleichen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>open</code></td>
<td class="tabxpl">Beeinflusst das Verhalten des Perl-Interpreters bei IO-Operation (Lesen und Schreiben von Daten).</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>ops</code></td>
<td class="tabxpl">Schränkt die Ausführung unsicherer Operationen in einem Perl-Script ein, sofern der Perl-Interpreter zum Ausführen des Scripts mit der Option <code>-M</code> aufgerufen wird.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>overload</code></td>
<td class="tabxpl">Ermöglicht es, Operatoren in Perl-Scripts mit eigenen Funktionen zu verknüpfen. So ist es beispielsweise möglich, eigene Funktionen für Operatoren wie "Division" oder "größer als" zu schreiben und die Funktionalität der entsprechenden Operatoren wie <code>/</code> (Division) oder <code>&gt;</code> (größer als) an die selbst geschriebenen Funktionen zu knüpfen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>re</code></td>
<td class="tabxpl">Beeinflusst die Interpretation <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/regexpr.htm">regulärer Ausdrücke</a> für spezielle Zwecke wie das Behandeln von Variablen innerhalb des regulären Ausdrucks.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>sigtrap</code></td>
<td class="tabxpl">Ermöglicht einem Perl-Script, auf Signale zu reagieren, die es von anderen Prozessen erhält.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>sort</code></td>
<td class="tabxpl">Beeinflusst das Verhalten der <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/listenhashes.htm#sort">sort</a>-Funktion.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>strict</code></td>
<td class="tabxpl">Verhindert, dass unsauberer Code ausgeführt wird. Toleranzen, die der Perl-Interpreter ansonsten erlaubt, werden dadurch ausgeschaltet.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>subs</code></td>
<td class="tabxpl">Ermöglicht das Vorabdeklarieren der Namen aller verwendeten <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/subroutinen.htm">Subroutinen</a>. Im weiteren Code des Scripts können die Namen dann sofort ohne Klammern verwendet werden, also z.B. <code>Speichern</code> statt <code>Speichern()</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>threads</code></td>
<td class="tabxpl">Erlaubt es, Interpreter-basierte Threads in Perl zu nutzen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>threads::shared</code></td>
<td class="tabxpl">Erlaubt es, Datenstrukturen zwischen zwei Threads auszutauschen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>utf8</code></td>
<td class="tabxpl">Ermöglicht das Verwenden von UTF-8-Sonderzeichen im Quellcode.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>vars</code></td>
<td class="tabxpl">Ermöglicht das Vorabdeklarieren der Namen von globalen Variablen. Dieses Modul ist mittlerweile veraltet, stattdessen sollen Deklarationen mit der Funktion <code>our</code> verwendet werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>vmsish</code></td>
<td class="tabxpl">Ermöglicht es, Features zu nutzen, die nur unter dem Betriebssystem VMS verfügbar sind.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>warnings</code></td>
<td class="tabxpl">Mit diesem Modul lassen sich die Warnmeldungen des Perl-Interpreters kontrollieren.</td>
</tr>
</table>

&nbsp;

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="cpanmodule.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="cpanmodule.htm">CPAN-Module</a>
</td></tr>
<tr>
<td class="doc"><a href="intro.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="intro.htm">Einführung in das Arbeiten mit Modulen</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Module</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
