<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Perl / Perl-Sprachelemente / Bedingte Anweisungen</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Wie Sie in Perl das Ausführen von Anweisungen von Bedingungen abhängig machen können.">
<meta name="keywords"       content="SELFHTML, Perl, if, elsif, else, unless, Bedingung">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-09T00:29:27+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/perl/sprache/bedingt.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Perl-Sprachelemente" href="index.htm">
<link rel="next" title="Schleifen" href="schleifen.htm">
<link rel="prev" title="Zahlen" href="zahlen.htm">
<link rel="first" title="CGI-notwendige Anweisungen in Perl" href="cginotwendig.htm">
<link rel="last" title="CGI-typische Aufgaben in Perl" href="cgitypisch.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Bedingte Anweisungen</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#if_else_elsif">Bedingte Anweisungen mit if, else und elsif</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#unless">Bedingte Anweisungen mit unless</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#nachgestellte">Nachgestellte Bedingungen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#entweder_oder">Einfache Entweder-Oder-Abfrage</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="if_else_elsif">Bedingte Anweisungen mit if, else und elsif</a></h2>

<p>Sie können die Ausführung von Anweisungen von Bedingungen abhängig machen.</p>

<h3 class="xmp"><a class="an" name="beispiel1">Beispiel eines vollständigen CGI-Scripts:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt1.pl">Anzeigebeispiel: So sieht's aus</a> - ohne Übergabeparameter<br>
<img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt1.pl?abc">Anzeigebeispiel: So sieht's aus</a> - mit 3 Zeichen (abc) als Übergabeparameter<br>
<img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt1.pl?selfhtml">Anzeigebeispiel: So sieht's aus</a> - mit dem String "selfhtml" als Übergabeparameter<br>
(Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;\n";
print "&lt;/head&gt;&lt;body&gt;\n";

if( $ENV{QUERY_STRING} eq "" ) {
 print "&lt;b&gt;Dem Script wurden keine Daten &amp;uuml;bergeben!&lt;/b&gt;\n";
}
elsif( length($ENV{QUERY_STRING}) &lt; 4 ) {
 print "&lt;b&gt;&amp;Uuml;bergebene Daten enthalten weniger als 4 Zeichen!&lt;/b&gt;\n";
}
elsif( length($ENV{QUERY_STRING}) &gt; 8 ) {
 print "&lt;b&gt;&amp;Uuml;bergebe Daten enthalten mehr als 8 Zeichen!&lt;/b&gt;\n";
}
else {
 print "&lt;p&gt;&lt;b&gt;folgende Daten wurden dem Script &amp;uuml;bergeben:&lt;/b&gt;&lt;br&gt; $ENV{QUERY_STRING}&lt;/p&gt;";
 (my $String, my $Salt) = split(/\+/,$ENV{QUERY_STRING});
 my $CryptString = crypt($String,$Salt);
 print "&lt;p&gt;&lt;b&gt;Verschl&amp;uuml;sselt lauten die Daten:&lt;/b&gt;&lt;br&gt;$CryptString&lt;/p&gt;\n";
}

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel-Script erwartet, dass ihm beim Aufruf eine Zeichenkette mit mindestens 4 bis maximal 8 Zeichen Länge übergeben wird. Diese Daten verschlüsselt es mit der Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#crypt">crypt</a> und gibt den verschlüsselten Wert zur Kontrolle aus. Übergeben können Sie dem Script die Zeichenkette beim Aufruf im Browser etwa als Parameter. Wenn das Script also beispielsweise die Adresse <var>http://localhost/cgi-bin/crypt.pl</var> hat, können Sie es mit <var>http://localhost/cgi-bin/crypt.pl?Mimose</var> aufrufen, und es verschlüsselt die Zeichenkette <code>Mimose</code> nach dem crypt-Standard. Wenn Sie das Script dagegen ohne Parameter aufrufen oder eine zu kurze oder zu lange Zeichenkette übergeben, dann gibt es stattdessen eine Fehlermeldung aus.</p>

<p>Um diese bedingungsabhängigen Aktionen auszuführen, fragt das Script zunächst ab, ob die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../servercgi/cgi/umgebungsvariablen.htm">CGI-Umgebungsvariable</a> <code>QUERY_STRING</code> leer ist. Mit <code>if</code> können Sie eine solche Wenn-Dann-Bedingung einleiten. Dahinter folgt, in Klammern stehend, die Formulierung der Bedingung. Um solche Bedingungen zu formulieren, brauchen Sie entweder zwei Werte, die Sie vergleichen möchten, oder Sie fragen direkt, ob ein in den Klammern stehender Ausdruck wahr oder falsch ist. Im Beispiel werden in der Bedingung zwei Werte verglichen, nämlich <code>$ENV{QUERY_STRING}</code> (die Umgebungsvariable, die übergebene Parameter enthält) mit dem so genannten <strong>Leerstring</strong>, der durch leere Anführungszeichen <code>""</code> markiert wird. Das <code>eq</code> dazwischen ist ein <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="operatoren.htm#vergleich">Vergleichsoperator</a> für Zeichenketten. Vergleichsoperatoren müssen Sie kennen, um Bedingungen formulieren zu können, in denen zwei Werte verglichen werden.</p>

<p>Im Anschluss an die <code>if</code>-Bedingung folgt ein <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#anweisungsbloecke">Anweisungsblock</a>, markiert wie üblich durch <strong>geschweifte</strong> Klammern <code>{</code> und <code>}</code>. Dazwischen können beliebig viele Anweisungen stehen. Diese Anweisungen werden aber nur dann ausgeführt, wenn die <code>if</code>-Bedingung wahr ist. Im Beispiel wird mit der <code>if</code>-Bedingung abgefragt, ob die Umgebungsvariable mit den übergebenen Daten leer ist. Wenn dies der Fall ist, also wenn diese Bedingung wahr ist, dann wird ausgegeben: <code>Dem Script wurden keine Daten übergeben!</code>. Die anschließenden Anweisungsblöcke, die hinter den beiden <code>elsif</code> und <code>else</code> folgen, werden in diesem Fall übersprungen.</p>

<p>Mit <code>elsif</code> können weitere Bedingungen formuliert werden. Abgeprüft werden diese Bedingungen aber erst, wenn alle unmittelbar voranstehenden Bedingungen unwahr waren. Das zweite <code>elsif</code> im Beispiel wird also nur dann überhaupt von Perl bewertet, wenn Daten übergeben wurden, und wenn diese nicht weniger als 4 Zeichen enthalten. Die beiden <code>elsif</code>-Bedingungen im Beispiel vergleichen wieder zwei Werte, nämlich die Länge der übergebenen Daten, ermittelt mit der Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#length">length</a>, mit einer jeweils festen Zahl.</p>

<p>Erst wenn alle <code>if</code>- und <code>elsif</code>-Bedingungen unwahr sind, wird der <code>else</code>-Zweig ausgeführt. Dieser braucht keine Bedingung mehr, sondern bedeutet einfach den "Ansonsten-Fall". Da im obigen Beispiel die zuvor notierten Bedingungen Fehler abfangen, steht dort im <code>else</code>-Zweig der Code für den "Gutfall". Die Daten werden zur Kontrolle ausgegeben, verschlüsselt und dann in verschlüsselter Form nochmals ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die geschweiften Klammern nach einem <code>if</code>, <code>elsif</code> oder <code>else</code> müssen immer notiert werden, auch dann, wenn nur eine einzige Anweisung darin notiert wird. Dies ist in Perl anders als in manchen anderen Sprachen, etwa in <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../javascript/sprache/bedingt.htm">JavaScript</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="unless">Bedingte Anweisungen mit unless</a></h2>

<p>Bedingungen können auch andersherum formuliert werden.</p>

<h3 class="xmp"><a class="an" name="beispiel2">Beispiel eines vollständigen CGI-Scripts:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt2.pl">Anzeigebeispiel: So sieht's aus</a> - ohne Übergabeparameter
<br>
<img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt2.pl?strenggeheim">Anzeigebeispiel: So sieht's aus</a> - mit dem String "strenggeheim" als Übergabeparameter
<br>(Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;\n";
print "&lt;/head&gt;&lt;body&gt;\n";

unless( $ENV{QUERY_STRING} eq "strenggeheim" ) {
 print "&lt;b&gt;Keine Erlaubnis!&lt;/b&gt;\n";
}
else {
 open (FH, "&lt;/usr/bin/apache/conf/httpd.conf");
 my @Dateizeilen = &lt;FH&gt;;
 close(FH);
 print "&lt;h1&gt;Aktuelle Konfiguration des Apache-Servers&lt;/h1&gt;\n";
 print "&lt;pre&gt;@Dateizeilen&lt;/pre&gt;\n";
}
print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Script formuliert mit <code>unless</code> eine "Wenn-nicht"-Bedingung. Innerhalb der Bedingung wird verglichen, ob die Umgebungsvariable <code>QUERY_STRING</code> den Wert <code>strenggeheim</code> hat. Die Bedingung ist also wahr, wenn der Anwender im Browser das Script beispielsweise mit <var>http://localhost/cgi-bin/show_apache.pl?strenggeheim</var> aufgerufen hat. Durch <code>unless</code> wird die Bedingung jedoch als Ganzes verneint. Anweisungen, die in dem Anweisungsblock stehen, der in den geschweiften Klammern abhängig von <code>unless</code> ausgeführt wird, wird im Beispiel nur dann ausgeführt, wenn der Anwender das Script <strong>nicht</strong> mit dem Übergabeparameter <code>strenggeheim</code> aufgerufen hat.</p>

<p>In diesem Fall gibt das Script eine Fehlermeldung aus und überspringt den <code>else</code>-Zweig. Hat der Anwender den richtigen Übergabeparameter eingegeben, gelangt das Script dagegen in den <code>else</code>-Zweig. Dort liest es die zentrale Konfigurationsdatei des Apache-Webservers ein und gibt deren Inhalt im Browser aus. Die dabei verwendeten Perl-Funktionen sind <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#open">open</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/einausgabe.htm#close">close</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="nachgestellte">Nachgestellte Bedingungen</a></h2>

<p>Um eine einzelne Anweisung abhängig von einer Bedingung auszuführen, erlaubt Perl auch eine besondere, etwas kürzere Form von Bedingungen.</p>

<h3 class="xmp"><a class="an" name="beispiel3">Beispiel eines vollständigen CGI-Scripts:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt3.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my @Datumzeit = localtime(time);
my $Stunden = $Datumzeit[2];

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Test-Ausgabe&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n";
print "&lt;h1&gt;Guten Morgen!&lt;/h1&gt;" if ( $Stunden &gt; 5 &amp;&amp; $Stunden &lt; 10 );
print "&lt;h1&gt;Guten Tag!&lt;/h1&gt;" if ( $Stunden &gt; 9 &amp;&amp; $Stunden &lt; 19 );
print "&lt;h1&gt;Guten Abend!&lt;/h1&gt;" if ( $Stunden &gt; 18 );
print "&lt;h1&gt;Hi Nachteule!&lt;/h1&gt;" unless ( $Stunden &gt; 5 );

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Script ermittelt mit der Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/datumzeit.htm#localtime">localtime</a> Datum und Uhrzeit auf dem Server. Aus den Gesamtdaten, die diese Funktion liefert, werden die Stunden extrahiert und im Skalar <code>$Stunden</code> gespeichert. Das Script gibt nun im HTML-Code eine Überschrift mit einem uhrzeitabhängigen Text aus. Dabei steht die <code>print</code>-Anweisung vorne, und die Bedingung ist jeweils nachgestellt. Die jeweilige <code>print</code>-Anweisung wird nur dann ausgeführt, wenn die dahinter notierte Bedingung wahr ist. Wie Sie dem Beispiel entnehmen können, sind nachgestellte Bedingungen sowohl mit <code>if</code> als auch mit <code>unless</code> möglich.</p>

<p>Das Besondere an den nachgestellten Bedingungen ist, dass nur <strong>eine Anweisung</strong> abhängig davon ausgeführt werden kann. Denn der gesamte Ausdruck inklusive der Bedingung stellt eine einzige Anweisung dar. Deshalb gibt es bei solchen Bedingungen auch keine geschweiften Klammern.</p>

<p>Das Beispiel zeigt auch noch einmal einige weitere Bedingungen. In einigen der Fälle sind nämlich auch zwei Bedingungen verknüpft. So wird <code>Guten Morgen</code> nur dann ausgegeben, wenn die Stundenzahl der Server-Uhrzeit größer als 5 und kleiner als 10 ist, also zwischen 6 und 9 beträgt. Verknüpft werden dabei zwei Einzelbedingungen mit dem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="operatoren.htm#logisch">logischen Operator</a> <code>&amp;&amp;</code>. Die gesamte Bedingung ist in dem Fall nur dann wahr, wenn beide Einzelbedingungen wahr sind.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="entweder_oder">Einfache Entweder-Oder-Abfrage</a></h2>

<p>Für einfache Entweder-Oder-Bedingungen gibt es noch eine spezielle Syntax, die Sie alternativ zu <code>if</code> und <code>else</code> verwenden können.</p>

<h3 class="xmp"><a class="an" name="beispiel4">Beispiel eines vollständigen CGI-Scripts:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/bedingt4.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;\n";
print "&lt;/head&gt;&lt;body&gt;\n";

my $Ergebnis = $ENV{'HTTP_USER_AGENT'} =~ /MSIE/ ? "den Internet Explorer" : "nicht den Internet Explorer";
print "&lt;b&gt;Sie benutzen $Ergebnis!&lt;/b&gt;\n";

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Script ermittelt durch Bewerten der Umgebungsvariablen <code>HTTP_USER_AGENT</code> mit Hilfe eines <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="regexpr.htm">regulären Ausdrucks</a>, ob der aufrufende Browser ein Internet Explorer ist oder nicht. Im HTML-Code steht dann entweder: "Sie benutzen den Internet Explorer" oder "Sie benutzen nicht den Internet Explorer".</p>

<p>Eine einfache Entweder-Oder-Abfrage wird mit einer Bedingung eingeleitet, im Beispiel <tt>$ENV{'HTTP_USER_AGENT'} =~ /MSIE/</tt>. Dabei ist <code>/MSIE/</code> ein regulärer Ausdruck, und <code>=~</code> ist ein spezieller Bindungsoperator für solche regulären Ausdrücke. Dahinter wird ein Fragezeichen notiert. Hinter dem Fragezeichen wird eine Anweisung notiert, die dann ausgeführt wird, wenn die Bedingung wahr ist. Dahinter folgt ein Doppelpunkt, und dahinter eine Anweisung für den Fall, dass die Bedingung nicht wahr ist. Im Beispiel bestehen die beiden Anweisungen lediglich in der Notation von Werten, die dem Skalar <code>$Ergebnis</code> ganz links vor der Formulierung der Bedingung zugewiesen werden. Ebenso könnte an der Stelle aber auch stehen:<br>
<code>$ENV{'HTTP_USER_AGENT'} =~ /MSIE/ ? print "Sie benutzen den MS IE" : print "Sie benutzen nicht den MS IE";</code>.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="schleifen.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="schleifen.htm">Schleifen</a>
</td></tr>
<tr>
<td class="doc"><a href="zahlen.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="zahlen.htm">Zahlen</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
