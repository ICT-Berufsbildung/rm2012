<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Perl / Perl-Sprachelemente / Zeichenketten (Strings)</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Welche Besonderheiten es bei Zeichenketten in Perl zu beachten gibt.">
<meta name="keywords"       content="SELFHTML, Perl, Zeichenketten, Strings, Steuerzeichen, Interpolation, Maskierung">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-09T00:29:27+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/perl/sprache/zeichenketten.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Perl-Sprachelemente" href="index.htm">
<link rel="next" title="Zahlen" href="zahlen.htm">
<link rel="prev" title="Vordefinierte Variablen in Perl" href="vordefiniert.htm">
<link rel="first" title="CGI-notwendige Anweisungen in Perl" href="cginotwendig.htm">
<link rel="last" title="CGI-typische Aufgaben in Perl" href="cgitypisch.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Zeichenketten (Strings)</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#eigenschaften">Eigenschaften von Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#regeln">Regeln beim Notieren von Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#steuerzeichen">Steuerzeichen in Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#maskierung">Maskierung von Zeichen in Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#funktionszeichen">Funktionszeichen in Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#numerische_zeichennotation">Numerische Notation von Zeichen in Zeichenketten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#operationen_funktionen">Operationen und Funktionen für Zeichenketten</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="eigenschaften">Eigenschaften von Zeichenketten</a></h2>

<p>Zeichenketten sind in Perl, anders als etwa in C, keine Arrays aus Zeichen, sondern ein einziges "Datum". Jede Zeichenkette ist potentiell unendlich groß und nur durch den verfügbaren Speicher in ihrer Größe begrenzt. Es ist also kein Problem, auch größere Datenmengen in einer Zeichenkette zu speichern.</p>

<p>Eine wichtige Eigenschaft von Zeichenketten in Perl ist auch, dass sie beliebige Zeichen enthalten können. Es gibt also keine reservierten Zeichen wie in C etwa das Zeichen mit dem Wert <code>0</code> zum Anzeigen des Endes der Zeichenkette. Auch andere Steuerzeichen, die andernorts als typische Endekennzeichen verwendet werden, etwa das Steuerzeichen für Zeilenumbruch, können innerhalb von Zeichenketten in Perl beliebig vorkommen. Zeichenketten in Perl können deshalb auch problemlos binäre Daten aufnehmen und verarbeiten.</p>

<p>Als Variablentyp zum Speichern einer einzelnen Zeichenkette sind <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="skalare.htm">Skalare</a> vorgesehen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="regeln">Regeln beim Notieren von Zeichenketten</a></h2>

<p>Beim direkten Notieren von Zeichenketten können Sie die Zeichenkette wahlweise in einfache oder doppelte Anführungszeichen setzen oder die <code>q</code>- bzw. <code>qq</code>-Operatoren dazu nutzen. Für mehrzeilige Zeichenketten bieten sich die so genannten "Hier-Dokumente" an. Es gibt einige semantische Unterschiede zwischen den Notationen:</p>

<h3 class="xmp"><a class="an" name="beispiel1">Beispiel eines vollständigen CGI-Scripts in Perl:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/zeichenketten1.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print &lt;&lt;'KOPF';
Content-type: text/html

&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;
&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
KOPF

my $Name = "Methusalem";
my $Alter = 625;

print "$Name ist ein alter Mann, sehr alt. Er ist $Alter Jahre alt&lt;br&gt;\n";
print '$Name ist ein alter Mann, sehr alt. Er ist $Alter Jahre alt&lt;br&gt;\n';

print qq($Name ist ein alter Mann, sehr alt. Er ist $Alter Jahre alt&lt;br&gt;\n);
print q($Name ist ein alter Mann, sehr alt. Er ist $Alter Jahre alt\n);

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel werden der HTTP-Header sowie die ersten HTML-Zeilen mit Hilfe eines so genannten "Hier-Dokuments" ausgegeben. Hier-Dokumente haben etwa die gleiche Wirkung wie das <code>pre</code>-Element in HTML. Die Zeichenkette wird dabei so formatiert wie sie im Quelltext notiert ist. Ein Hier-Dokument beginnt mit dem einleitenden <code>&lt;&lt;</code> und dem Namen eines Endbegrenzers (im Beispiel: <code>KOPF</code>). Der Name kann in einfache oder doppelte Anführungszeichen eingeschlossen werden, welche den gleichen Effekt haben wie bei "normalen" Zeichenketten auch. Bei doppelten Anführungszeichen werden Variablen innerhalb des Hier-Dokuments interpoliert, bei einfachen nicht. Wenn Sie die Anführungszeichen ganz weglassen, nimmt Perl doppelte Anführungszeichen an. Zwischen dem <code>&lt;&lt;</code> und dem Namen darf kein Leerzeichen stehen. Beendet wird das Hier-Dokument durch den Endbegrenzer (ohne Anführungszeichen), der allein in einer Zeile ohne Leerzeichen davor oder dahinter stehen muss. Die Zeile muss unbedingt mit einem Zeilenumbruch abgeschlossen werden.</p>

<p>Im obigen Beispiel werden anschließend zwei Skalare <code>$Name</code> und <code>$Alter</code> deklariert und mit einem Anfangswert versehen. Dann wird mit <code>print</code>-Anweisungen mehrmals die gleiche Zeichenkette ausgegeben - zunächst einmal in doppelten Anführungszeichen, dann in einfachen Anführungszeichen. Beide Male enthält die Zeichenkette im Satz eingebettet die Skalare <code>$Name</code> und <code>$Alter</code>. Bei der Ausgabe wird sichtbar, dass bei Verwendung doppelter Anführungszeichen die Skalare <code>$Name</code> und <code>$Alter</code> durch ihren gespeicherten Wert ersetzt werden (Fachjargon: <strong>Interpolation</strong>), während bei Verwendung einfacher Anführungszeichen an den entsprechenden Stellen einfach die Zeichenfolgen <code>$Name</code> und <code>$Alter</code> ausgegeben werden. Ferner wird bei der Version mit den einfachen Anführungszeichen das abschließend notierte <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#steuerzeichen">Steuerzeichen</a> <code>\n</code> ebenfalls so ausgegeben wie es als Zeichenfolge da steht, während das Steuerzeichen bei Verwendung doppelter Anführungszeichen interpretiert wird, also im ausgegebenen Text tatsächlich einen Zeilenumbruch erzeugt.</p>

<p>Das bedeutet also: verwenden Sie doppelte Anführungszeichen, wenn in einer Zeichenkette angegebene Variablen und Steuerzeichen interpretiert werden sollen, und verwenden Sie einfache Anführungszeichen, wenn genau das nicht geschehen soll.</p>

<p>Die beiden Operatoren <code>qq</code> und <code>q</code> entsprechen den doppelten bzw. einfachen Anführungszeichen. Bei <code>qq</code> werden Variablen und Steuerzeichen interpretiert, bei <code>q</code> dagegen nicht. Die Verwendung von <code>qq</code> und <code>q</code> ist nicht so gebräuchlich wie diejenige mit Anführungszeichen, doch sie kann Quelltext durchaus lesbarer machen. Im obigen Beispiel wurden runde Klammern gewählt, um den Inhalt von <code>qq</code> und <code>q</code> einzuschließen. Sie können jedoch auch andere Zeichen dazu verwenden. Bei Zeichen, die ein Gegenstück besitzen, etwa <code>&lt;</code> und <code>&gt;</code>, <code>{</code> und <code>}</code> oder <code>[</code> und <code>]</code>, wird dieses als Endbegrenzer erwartet. Perl achtet dann auf Verschachtelungen innerhalb der Zeichenkette. Derartige Klammern eignen sich somit hervorragend dafür, um beispielsweise Perl-Code innerhalb einer Zeichenkette darzustellen. Wenn Sie andere Zeichen als Begrenzer verwenden, achten Sie darauf, dass das Zeichen in der Zeichenkette nicht vorkommt.</p>

<p>Neben diesen Formen gibt es auch noch <code>qx</code> oder als Alternative dazu die so genannten <i>Backticks</i>. Damit erzeugen Sie Zeichenketten, die von Perl als Systemaufruf umgesetzt werden. Einzelheiten dazu im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/systemaufrufe.htm#qx">qx(...) - Andere Programme/Scripts ausführen und STDOUT auffangen</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="steuerzeichen">Steuerzeichen in Zeichenketten</a></h2>

<p>Für die Notation einiger wichtiger Steuerzeichen stellt Perl eine spezielle Notationssyntax zur Verfügung, die sich an die Sprache C anlehnt. Solche Zeichen werden durch einen Backslash <code>\</code> eingeleitet. Dahinter folgt ein Buchstabe, der das Steuerzeichen bezeichnet. Diese Steuerzeichen werden nur innerhalb von Zeichenketten interpretiert, die in doppelten Anführungszeichen <code>"..."</code> oder in <code>qq(...)</code> stehen, und auch nur dann, wenn der Ausgabekanal entsprechende Möglichkeiten bietet. Folgende Steuerzeichen gibt es:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Notation</th>
<th nowrap="nowrap">Bedeutung</th>
<th nowrap="nowrap">Beispiel</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\a</code></td>
<td class="tabxpl">Alarmton (Beep)</td>
<td class="code" nowrap="nowrap"><code>print "\a"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\b</code></td>
<td class="tabxpl">Backspace-Zeichen</td>
<td class="code" nowrap="nowrap"><code>print "meine\b"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\e</code></td>
<td class="tabxpl">Escape-Zeichen zur Einleitung von Escape-Sequenzen</td>
<td class="code" nowrap="nowrap"><code>print "\e[A"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\f</code></td>
<td class="tabxpl">Steuerzeichen für Seitenvorschub</td>
<td class="code" nowrap="nowrap"><code>print "Seitenende\fSeitenanfang"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\n</code></td>
<td class="tabxpl">Steuerzeichen für Zeilenvorschub. Der genaue Zeichencode dafür ist betriebssystemabhängig. Unter Unix ist es beispielsweise der ASCII-Code <code>10</code>, während es auf Apple-Macintosh der ASCII-Code <code>13</code> und unter DOS eine Zeichenfolge aus ASCII <code>13</code> und <code>10</code> ist.</td>
<td class="code" nowrap="nowrap"><code>print "Zeilenende\nZeilenanfang"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\r</code></td>
<td class="tabxpl">Steuerzeichen für Wagenrücklauf. Der genaue Zeichencode dafür ist betriebssystemabhängig. Unter Unix und DOS ist es beispielsweise der ASCII-Code <code>13</code>, während es auf Apple-Macintosh der ASCII-Code <code>10</code> ist.</td>
<td class="code" nowrap="nowrap"><code>print "Wagen\rWagenrücklauf"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\t</code></td>
<td class="tabxpl">Steuerzeichen für Tabulator</td>
<td class="code" nowrap="nowrap"><code>print "Alter:\t32"</code></td>
</tr>
</table>
<br>&nbsp;





<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="maskierung">Maskierung von Zeichen in Zeichenketten</a></h2>

<p>Jene Zeichen, die eine Zeichenkette einschließen, müssen Sie, falls das entsprechende Zeichen innerhalb der Zeichenkette vorkommt, maskieren. Dazu wird der Backslash <code>\</code> als Maskierungszeichen verwendet. Da nun dadurch auch der Backslash besondere Bedeutung erhält, muss er selber ebenfalls maskiert werden, falls er in einer Zeichenkette als Zeichen vorkommt.</p>

<h3 class="xmp"><a class="an" name="beispiel2">Beispiel eines vollständigen CGI-Scripts in Perl:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/zeichenketten2.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print "Content-type: text/plain\n\n";

print "Eine typische print-Ausgabe ist \"Hallo Welt\\n\";\n";
print "Eine typische print-Ausgabe ist 'Hallo Welt\\n';\n";

print 'Eine typische print-Ausgabe ist "Hallo Welt\n";',"\n";
print 'Eine typische print-Ausgabe ist \'Hallo Welt\n\';';
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel sendet reinen Text und gibt dabei mit <code>print</code>-Anweisungen viermal den gleichen Satz aus. Bei den ersten beiden Anweisungen werden doppelte Anführungszeichen verwendet. Wie im Beispiel ersichtlich, muss dabei das Zeichen <code>"</code> durch <code>\"</code> maskiert werden. Ebenfalls maskiert werden muss der Backslash <code>\</code>, und zwar durch <code>\\</code>.<br>
Die beiden unteren Anweisungen verwenden dagegen einfache Anführungszeichen. Dabei muss nur eben dieses Zeichen maskiert werden, wenn es vorkommt, und zwar durch <code>\'</code> - das ist in der letzten der Anweisungen der Fall.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="funktionszeichen">Funktionszeichen in Zeichenketten</a></h2>

<p>Perl stellt bestimmte eigene Steuerzeichen zur Verfügung, die funktionale Auswirkungen auf nachfolgend notierte Zeichen haben. Solche Zeichen werden durch einen Backslash <code>\</code> eingeleitet. Dahinter folgt ein Buchstabe, der das Funktionszeichen bezeichnet. Diese Funktionszeichen werden nur innerhalb von Zeichenketten interpretiert, die in doppelten Anführungszeichen <code>"..."</code> oder in <code>qq(...)</code> stehen. Folgende Funktionszeichen gibt es:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th nowrap="nowrap">Notation</th>
<th nowrap="nowrap">Bedeutung</th>
<th nowrap="nowrap">Beispiel</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\U</code></td>
<td class="tabxpl">Großschreibung (<i>upper case</i>). Funktionsgleich mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#uc">uc</a>.</td>
<td class="code" nowrap="nowrap"><code>print "\UGroßes Geschrei"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\L</code></td>
<td class="tabxpl">Kleinschreibung (<i>lower case</i>). Funktionsgleich mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#lc">lc</a>.</td>
<td class="code" nowrap="nowrap"><code>print "\LCp Dat1.TXT Dat2.TXT"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\u</code></td>
<td class="tabxpl">Großschreibung des ersten Zeichens. Funktionsgleich mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#ucfirst">ucfirst</a>.</td>
<td class="code" nowrap="nowrap"><code>print "\ugroß und klein"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\l</code></td>
<td class="tabxpl">Kleinschreibung des ersten Zeichens. Funktionsgleich mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#lcfirst">lcfirst</a>.</td>
<td class="code" nowrap="nowrap"><code>print "\lGroß und klein"</code></td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>\E</code></td>
<td class="tabxpl">Endezeichen für <code>\U</code> und <code>\L</code>.</td>
<td class="code" nowrap="nowrap"><code>print "\UAlles groß? \ENein, nicht alles"</code></td>
</tr>
</table>
<br>&nbsp;





<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="numerische_zeichennotation">Numerische Notation von Zeichen in Zeichenketten</a></h2>

<p>Sie können beliebige Zeichen einer Zeichenkette auch mit ihrem numerischen Zeichenwert notieren. Erlaubt sind allerdings nur oktale und hexadezimale Angaben.</p>

<h3 class="xmp"><a class="an" name="beispiel3">Beispiel eines vollständigen CGI-Scripts in Perl:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/zeichenketten3.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print "Content-type: text/plain\n\n";

print "\123\164\145\146\141\156 oktal\n";
print "\x53\x74\x65\x66\x61\x6E hexadezimal\n";
print "Stefan normal\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel sendet reinen Text und gibt dabei mit <code>print</code>-Anweisungen dreimal das Wort <code>Stefan</code> und ein Zeilenumbruch-Zeichen aus. Bei der ersten Anweisung werden die Buchstaben des Namens in oktaler Schreibweise notiert, bei der zweiten Anweisung in hexadezimaler Schreibweise. Bei der oktalen Schreibweise beginnen so dargestellte Zeichen mit einem Backslash, gefolgt von der Zahl (erlaubt sind bei oktaler Schreibweise die Ziffern <code>0</code> bis <code>7</code>). Bei hexadezimaler Schreibweise beginnen Zeichen ebenfalls mit Backslash, gefolgt jedoch von einem <code>x</code> und dahinter der Zahl (erlaubt sind bei hexadezimaler Schreibweise die Ziffern <code>0</code> bis <code>9</code> und <code>A</code> bis <code>F</code>).</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="operationen_funktionen">Operationen und Funktionen für Zeichenketten</a></h2>

<p>Eine der Stärken von Perl ist das Manipulieren von Zeichenketten. Perl stellt daher etliche Operationen und Funktionen zur Zeichenkettenbearbeitung bereit.</p>

<p><strong>Zeichenketten aneinanderhängen:</strong><br>
Ein wichtiger Operator für Zeichenketten ist der Punkt-Operator, der es erlaubt, eine Zeichenkette an eine andere anzuhängen. Siehe dazu <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="operatoren.htm#zeichenkettenverknuepfung">Operator für Zeichenkettenverknüpfung</a></p>

<p><strong>Teile aus Zeichenketten extrahieren:</strong>
Oft ist es wichtig, aus einer Zeichenkette einen ganz bestimmten Teil zu extrahieren, so etwa aus einem URI den reinen Domainnamen. Perl bietet dazu folgende Funktionen an: <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#index">index</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#substr">substr</a>.</p>

<p><strong>Suchen und Ersetzen in Zeichenketten:</strong><br>
Perl ermöglicht gezieltes Durchsuchen von Zeichenketten. Ebenfalls möglich ist Suchen und Ersetzen. Der Schlüssel dazu sind <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="regexpr.htm">reguläre Ausdrücke</a>.</p>

<p><strong>Länge einer Zeichenkettenkette ermitteln:</strong><br>
Dazu gibt es in Perl die Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#length">length</a>.</p>

<p><strong>Zeichenketten in mehrere aufsplitten:</strong><br>
Viele Zeichenketten enthalten so genannte Trennzeichen, etwa bei eingelesenen Zeilen einer kommaseparierten Datei. In solchen Fällen macht es Sinn, aus der Zeichenkette eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="listen.htm">Liste</a> mit Einzelwerten zu machen. Dazu gibt es die Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#split">split</a>.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="zahlen.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="zahlen.htm">Zahlen</a>
</td></tr>
<tr>
<td class="doc"><a href="vordefiniert.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="vordefiniert.htm">Vordefinierte Variablen in Perl</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
