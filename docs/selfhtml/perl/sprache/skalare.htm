<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Perl / Perl-Sprachelemente / Skalare (Variablen)</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Was Skalare in Perl sind, wie sie deklariert werden und wie sie sich verwenden lassen.">
<meta name="keywords"       content="SELFHTML, Perl, Skalare">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-09T00:29:27+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/perl/sprache/skalare.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Perl-Sprachelemente" href="index.htm">
<link rel="next" title="Listen bzw. Arrays (Variablen)" href="listen.htm">
<link rel="prev" title="CGI-notwendige Anweisungen in Perl" href="cginotwendig.htm">
<link rel="first" title="CGI-notwendige Anweisungen in Perl" href="cginotwendig.htm">
<link rel="last" title="CGI-typische Aufgaben in Perl" href="cgitypisch.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Skalare (Variablen)</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#definieren">Skalare deklarieren und Werte zuweisen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#typumwandlung">Typ-Umwandlung von Skalaren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#funktionen_operationen">Funktionen und Operationen zum Manipulieren von Skalaren</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="definieren">Skalare deklarieren und Werte zuweisen</a></h2>

<p>In Perl wird eine einfache Variable, die eine Zahl oder eine Zeichenkette speichern kann, als Skalar bezeichnet.</p>

<h3 class="xmp"><a class="an" name="beispiel1">Beispiel eines vollständigen CGI-Scripts in Perl:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/skalare1.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my $Name = "Methusalem";
my $Alter = 625;
my $Name_2 = "Junger Hansel";
my $JungAlter = sqrt($Alter);

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;\n";
print "&lt;/head&gt;&lt;body&gt;\n";

print "$Name ist ein alter Mann, sehr alt. Er ist $Alter Jahre alt&lt;br&gt;\n";
print "$Name_2 ist dagegen ein Jungspund. Er ist $JungAlter.&lt;br&gt;\n";

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel werden vier Skalare <strong>deklariert</strong> (erstmals im Script genannt und eingeführt): <code>$Name</code>, <code>$Alter</code>, <code>$Name_2</code> und <code>$JungAlter</code>. Alle vier Variablen werden hier mit <code>my</code> definiert. Die Deklaration ist erforderlich, weil weiter oben im Script die Anweisung <code>use strict;</code> notiert ist. Würde sie fehlen, dann wäre es erlaubt, die Variablen auch ohne Deklaration zu benutzen. Besonders bei größeren Scripts ist es jedoch besser, sich gleich einen sauberen Stil anzugewöhnen und alle Variablen zu deklarieren. Dieses Vorgehen kann die Fehlersuche im Script oftmals bedeutend erleichtern.</p>

<p>Ein Skalar beginnt stets mit einem Dollarzeichen <code>$</code>. Das Dollarzeichen muss immer angegeben werden, wenn die Variable verwendet wird. Hinter dem Dollarzeichen folgt ein frei wählbarer Name, der jedoch den Regeln zur <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#namensvergabe">Namensvergabe</a> genügen muss.</p>

<p>Skalare speichern Werte. Die Werte bekommen sie zugewiesen. Die Deklarationen der vier Skalare im Beispiel-Script sind typische Zuweisungen. Die Zuweisung geschieht durch das Gleichheitszeichen <code>=</code>. Links davon steht der Name des Skalars, rechts davon der Wert, der zugewiesen wird. Das kann ein direkt notierter Wert sein, also etwa <code>Methusalem</code> oder <code>625</code>. Es kann aber auch ein Ausdruck sein, der den Wert erst errechnet. Bei der Deklaration von <code>$JungAlter</code> wird im Beispiel eine Perl-Funktion aufgerufen, die zu einer Zahl die Quadratwurzel berechnet und den errechneten Wert zurückgibt (<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/berechnungen.htm#sqrt">sqrt</a>). Erst dieser Rückgabewert wird dem Skalar <code>$JungAlter</code> zugewiesen.</p>

<p>Bei der Deklaration eines Skalars können Sie - wie in den obigen Beispielen - einen Initialisierungswert (Anfangswert) zuweisen. Es ist aber auch möglich, einen Skalar ohne Wertzuweisung zu deklarieren. Dann lassen Sie die Wertzuweisung einfach weg und notieren eine Anweisung, die einfach aus dem Namen des Skalars und dem die Anweisung abschließenden Semikolon besteht (z.B. <code>my&nbsp;$Name;</code>). Wenn ein Skalar auf diese Weise deklariert wird, ist sein Wert undefiniert (<i>undef</i>). Wenn Sie die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#aufruf">w-Option</a> benutzen, gibt der Perl-Interpreter Ihnen eine Warnung aus, sofern Sie mit einem solchen undefinierten Wert weiterarbeiten wollen.</p>

<p>Sie können Skalaren numerische Werte, Zeichenketten (Strings) und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="referenzen.htm">Referenzen</a> zuweisen. Ob ein Skalar numerisch oder eine Zeichenkette ist, entscheiden Sie, indem Sie dem Skalar einen Wert zuweisen oder indem Sie ihn in einer Anweisung verwenden. Eine Zeichenkette muss dabei in Anführungszeichen stehen. Das können sowohl doppelte Anführungszeichen als auch einfache Anführungszeichen sein (zum Unterschied siehe <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="zeichenketten.htm#regeln">Regeln beim Notieren von Zeichenketten</a>). Im obigen Beispiel speichern die Skalare <code>$Name</code> und <code>$Name_2</code> Zeichenketten, während die Skalare <code>$Alter</code> und <code>$JungAlter</code> Zahlen speichern.</p>

<p>Das obige Beispiel-Script gibt als CGI-Script den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="cginotwendig.htm">HTTP-Header und HTML-Code</a> aus. Dabei verwendet es die Skalare in den <code>print</code>-Anweisungen an den nötigen Stellen. Im HTML-Code, der beim Browser ankommt, erscheint dann an der entsprechenden Stelle der aktuelle Wert des Skalars.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="typumwandlung">Typ-Umwandlung von Skalaren</a></h2>

<p>Skalare können sowohl Zahlen als auch Zeichenketten speichern. Auch ein und derselbe Skalar kann im Laufe eines Scripts mal eine Zahl, mal eine Zeichenkette speichern. Die so genannte Typumwandlung, die in klassischen Programmiersprachen entweder gar nicht möglich ist oder mit einer eigenen Anweisung durchgeführt werden muss, erfolgt bei Perl automatisch.</p>

<h3 class="xmp"><a class="an" name="beispiel2">Beispiel eines vollständigen CGI-Scripts in Perl:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="http://de.selfhtml.org/cgi-bin/812/skalare2.pl">Anzeigebeispiel: So sieht's aus</a> (Zum Aufruf des Scripts ist eine Internet-Verbindung erforderlich)</p>

<pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my $Wert = 123456;
my $Teilwert = substr($Wert,1,3);
$Wert = $Teilwert;

print "Content-type: text/html\n\n";
print '&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;', "\n";
print "&lt;html&gt;&lt;head&gt;&lt;title&gt;Testausgabe&lt;/title&gt;\n";
print "&lt;/head&gt;&lt;body&gt;\n";

print "&lt;var&gt;Teilwert&lt;/var&gt; lautet: &lt;b&gt;$Teilwert&lt;/b&gt;&lt;br&gt;\n";
print "Und &lt;var&gt;Wert&lt;/var&gt; lautet: &lt;b&gt;$Wert&lt;/b&gt;&lt;br&gt;\n";

print "&lt;/body&gt;&lt;/html&gt;\n";
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird ein Skalar <code>$Wert</code> deklariert und bekommt dabei eine Zahl zugewiesen. Anschließend wird ein weiterer Skalar <code>$Teilwert</code> deklariert. Diesem Skalar wird der Rückgabewert einer Perl-Funktion zugewiesen, nämlich der Funktion <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm#substr">substr</a>. Dies ist eine typische Zeichenketten-Funktion. Sie extrahiert aus einer Zeichenkette einen Teil davon. Nun werden Zahlen im Computer aber anders gespeichert als Zeichenketten. In den meisten anderen Programmiersprachen wäre es deshalb ein schwerer Fehler, zu versuchen, einer solchen Zeichenketten-Funktion eine Zahl zu übergeben. In Perl ist das jedoch kein Problem. Im Beispiel wird der Funktion einfach <code>$Wert</code> übergeben, also der Skalar, in dem zu diesem Zeitpunkt eine Zahl gespeichert ist. Perl bewertet die Zahl bei dem Wunsch, eine Zeichenketten-Funktion darauf anzuwenden, automatisch als Zeichenkette, sprich, als Abfolge von Ziffern, Dezimalzeichen usw.</p>

<p>Im Beispiel extrahiert die Funktion <code>substr</code> die Zeichen 2 bis 4 der Zeichenkette (übergeben werden Startposition und Länge, aber in Perl wird bei solchen Dingen immer bei 0 zu zählen begonnen, nicht bei 1, daher werden <code>1</code> und <code>3</code> übergeben). Wenn man die Zahl <code>123456</code> als Zeichenkette interpretiert, wird
also einfach <code>234</code> extrahiert. Diesen Wert gibt die Funktion <code>substr</code> im obigen Aufruf auch zurück - aber als Zeichenkette. Denn <code>substr</code> gibt immer und in jedem Fall eine Zeichenkette zurück. In der darauffolgenden Beispielanweisung <code>$Wert = $Teilwert</code> wird nochmals die Fähigkeit von Perl zur automatischen Typumwandlung auf die Probe gestellt. Denn mit dieser Anweisung bekommt <code>$Wert</code>, worin ja bis dahin eine Zahl gespeichert ist, plötzlich eine Zeichenkette zugewiesen, nämlich den Wert von <code>$Teilwert</code>, der ja aus dem Rückgabewert von <code>substr</code> ermittelt wurde und eine Zeichenkette ist. Wenn Sie andere Programmiersprachen kennen, werden Sie hieran ermessen können, welche Freiheiten Sie in Perl beim Umgang mit Variablen haben.</p>

<p>Das obige Beispiel sendet HTML-Code an den aufrufenden Browser und gibt die aktuellen Werte der Skalare aus.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Der Perl-Interpreter versucht sein Bestes, die Werte Ihrer Variablen zu verarbeiten. Das heißt, wenn Sie beispielsweise mit einer Zeichenkette numerische Operationen durchführen (z.B. <code>3 + "Text"</code>), wird diese Zeichenkette in einen numerischen Wert konvertiert, und zwar in 0. Genauso können Sie auch eine Zeichenkette und eine Referenz miteinander verketten. Die Anweisung <code>print "Text".$ref;</code> (wobei <code>$ref</code> eine Referenz enthält) könnte also beispielsweise die Ausgabe <code>TextSCALAR(0x1765158)</code> erzeugen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="funktionen_operationen">Funktionen und Operationen zum Manipulieren von Skalaren</a></h2>

<p>Skalare sind Variablen. Man benutzt sie, um Werte zu speichern, die sich im Verlauf des Scripts ändern können. Skalare ändern ihren gespeicherten Wert, indem ihnen ein neuer Wert zugewiesen wird. Solche zugewiesenen Werte sind jedoch oft keine direkten Werte, sondern Rückgabewerte von Funktionen, die irgendetwas berechnen oder leisten. In den Beispielen weiter oben kamen bereits zwei solcher Funktionen zum Einsatz: die Funktion <code>sqrt</code> zum Errechnen einer Quadratwurzel, und die Funktion <code>substr</code> zum Ermitteln einer Teilzeichenkette. Perl bietet viele solcher Funktionen an. Typische Funktionen, mit denen Sie den Wert von Skalaren beeinflussen können, sind beispielsweise die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/zeichenketten.htm">Funktionen für Zeichenketten</a> oder die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../funktionen/berechnungen.htm">Funktionen für Berechnungen</a>. Darüber hinaus werden Skalare oft auch im Zusammenhang mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="schleifen.htm">Schleifen</a> benötigt und verändert. Zeichenketten können Sie beispielsweise auch miteinander verknüpfen, und mit Zahlen können Sie rechnen. Dazu benötigen Sie <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="operatoren.htm">Operatoren</a>.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="listen.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="listen.htm">Listen bzw. Arrays (Variablen)</a>
</td></tr>
<tr>
<td class="doc"><a href="cginotwendig.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="cginotwendig.htm">CGI-notwendige Anweisungen in Perl</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Perl</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Perl-Sprachelemente</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
