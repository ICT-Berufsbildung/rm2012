<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Stylesheets / CSS-Formate definieren / Zentrale Formate definieren</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Wie Sie für bestimmte HTML-Elemente oder eine bestimmte Auswahl von Elementen Formate definieren.">
<meta name="keywords"       content="SELFHTML, CSS, Stylesheets, Cascading Stylesheets, zentrale Formate, Selektoren, attributbedingte Formate, Formate für Klassen, CSS-Klassen, Individualformate, Pseudoformate, Pseudoelemente, Pseudoklassen">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-08-22T21:21:39+02:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/css/formate/zentrale.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="CSS-Formate definieren" href="index.htm">
<link rel="next" title="HTML-Elemente direktformatieren" href="direkt.htm">
<link rel="prev" title="Stylesheets in HTML einbinden" href="einbinden.htm">
<link rel="first" title="Stylesheets in HTML einbinden" href="einbinden.htm">
<link rel="last" title="Das Box-Modell" href="box_modell.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Stylesheets</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">CSS-Formate definieren</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Zentrale Formate definieren</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#aufbau">Aufbau zentraler Formate</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#elemente">Formate für HTML-Elemente definieren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#verschachtelte_elemente">Formate für verschachtelte HTML-Elemente definieren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#attributbedingte">Attributbedingte Formate definieren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#klassen">Formate für Klassen definieren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#div_span">Klassen in Verbindung mit den Elementen div und span</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#individualformate">Individualformate definieren</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#pseudoformate">Pseudoelemente und Pseudoklassen definieren</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="aufbau">Aufbau zentraler Formate</a></h2>

<p>Die hier beschriebenen Möglichkeiten gelten, wenn Sie:<br>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="einbinden.htm#zentral">Formate zentral für eine HTML-Datei definieren</a> oder<br>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="einbinden.htm#separat">Formate zentral in separater CSS-Datei definieren</a></p>

<p>Zentrale Formate folgen einem bestimmten Grundmuster:</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Zentrale Formate&lt;/title&gt;
&lt;style type="text/css"&gt;
h1 { color:red; font-size:48px; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;48 Pixel und Rot!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält in einem <code>style</code>-Bereich eine Formatdefinition für <code>h1</code>-Elemente der Datei, also für Überschriften 1. Ordnung. Solche Formatdefinitionen haben immer den gleichen Aufbau und bestehen aus folgenden Teilen:</p>

<h4>Selektor:</h4>

<p>Als "Selektoren" wird das bezeichnet, was vor den geschweiften Klammern steht. Ein Selektor wählt aus, wofür die folgenden Definitionen gelten sollen. Im obigen Beispiel gelten die Formate für alle Überschriften 1. Ordnung (<code>h1</code>-Elemente). Es sind jedoch auch komplexere Selektoren möglich sowie mehrere, durch Komma getrennte Selektoren.</p>

<h4>Definitionen:</h4>

<p>Die eigentlichen Definitionen zum Format stehen stets in geschweiften Klammern <code>{</code> und <code>}</code>. Sie bestehen darin, dass eine oder mehrere CSS-Eigenschaften notiert werden und einen Wert erhalten. Im obigen Beispiel werden etwa die CSS-Eigenschaften <code>color</code> (Schriftfarbe) und <code>font-size</code> (Schriftgröße) verwendet. Der Eigenschaft <code>color</code> wird der Wert <code>red</code> zugewiesen, und der Eigenschaft <code>font-size</code> der Wert <code>48px</code>. Zwischen Eigenschaft und Wertzuweisung muss stets ein Doppelpunkt stehen. Abgeschlossen wird eine Definition mit einem Strichpunkt (<code>;</code>). Nur bei der letzten Definition vor der schließenden geschweiften Klammer darf der Strichpunkt auch entfallen.</p>

<p>Zu den einzelnen Eigenschaften und ihren möglichen Werten siehe <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../eigenschaften/index.htm">CSS-Eigenschaften</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="elemente">Formate für HTML-Elemente definieren</a></h2>

<p>In einem <code>style</code>-Bereich oder in einer externen CSS-Datei können Sie für HTML-Elementtypen, zum Beispiel zu <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../html/text/index.htm">Absatztypen und Textgestaltung</a> oder für <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../html/tabellen/index.htm">Tabellen</a>-Elementtypen, CSS-Formate definieren. Wenn Sie entsprechende HTML-Elemente dann in der HTML-Datei verwenden, werden alle Formate angewendet, die Sie für den Elementtyp definiert haben. So können Sie beispielsweise für Überschriften 1. Ordnung definieren, dass diese in der Schriftart Helvetica, 26 Pixel, rot, fett und kursiv mit einem Absatznachabstand von 20 Pixel angezeigt werden. Wenn Sie dann im Text der HTML-Datei eine Überschrift 1. Ordnung wie gewohnt definieren, werden diese Formateigenschaften dabei berücksichtigt.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/elemente.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Element-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
body { background-color:#FFFFCC;
       margin-left:100px; }
* { color:blue; }
h1 { font-size:300%;
     color:#FF0000;
     font-style:italic;
     border-bottom:solid thin black; }
p,li  { font-size:110%;
        line-height:140%;
        font-family:Helvetica,Arial,sans-serif;
        letter-spacing:0.1em;
        word-spacing:0.3em; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;&amp;Uuml;berschrift 1. Ordnung&lt;/h1&gt;
&lt;p&gt;ein normaler Textabsatz&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ein Listenpunkt&lt;/li&gt;
&lt;li&gt;Ein anderer Listenpunkt&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Um ein zentrales Format für alle HTML-Elemente eines bestimmten Typs zu definieren, notieren Sie als Selektor den Namen des HTML-Elementtyps, und zwar ohne spitze Klammern. Im obigen Beispiel werden <code>body</code> (Dokument), <code>h1</code> (Überschriften 1. Ordnung), <code>p</code> (Textabsätze) und <code>li</code> (Listeneinträge) auf diese Weise notiert. Über den <strong>Universalselektor</strong> <code>*</code> haben Sie die Möglichkeit, Eigenschaften für <em>alle</em> Elemente zu definieren, wobei jedem Element natürlich nur die jeweils zulässigen Eigenschaften zugewiesen werden.<br>
Wenn Sie ein Format für mehrere HTML-Elementtypen definieren wollen, geben Sie alle gewünschten Elementtypen an und trennen Sie diese durch Kommata, so wie im obigen Beispiel <code>p,li</code>.</p>

<p>Es bedeutet also das gleiche, wenn Sie notieren:<br>
<code>h1 { font-family:Helvetica,sans-serif; }</code><br>
<code>h2 { font-family:Helvetica,sans-serif; }</code><br>
oder wenn Sie notieren:<br>
<code>h1, h2 { font-family:Helvetica,sans-serif; }</code></p>

<p>Dahinter folgen die gewünschten Definitionen. Im obigen Beispiel wird dem <code>body</code>-Element eine hellgelbe Hintergrundfarbe (<code>background-color:#FFFFCC;</code>) und ein linker Randabstand von 100 Pixeln (<code>margin-left:100px;</code>) zugewiesen. Über den Universalselektor wird für alle Elemente zunächst blaue Schriftfarbe (<code>color:blue;</code>) definiert. Überschriften 1. Ordnung (<code>h1</code>) erhalten eine Schriftgröße von 300 Prozent (<code>font-size:300%;</code>), die abweichende Schriftfarbe rot (<code>color:#FF0000;</code>) und den Schriftstil kursiv (<code>font-style:italic;</code>). Textabsätze (<code>p</code>) und Listenpunkte (<code>li</code>) sollen in 110 Prozent Schriftgröße (<code>font-size:110%;</code>) mit einer Zeilenhöhe von 140 Prozent (<code>line-height:140%;</code>) in Schriftart Helvetica, oder wenn nicht verfügbar, dann in Arial, und wenn ebenfalls nicht verfügbar, in irgendeiner Sans-Serif-Schrift dargestellt werden (<code>font-family:Helvetica,Arial,sans-serif;</code>). Außerdem werden auch noch Angaben zum Zeichenabstand (<code>letter-spacing</code>), Wortabstand (<code>word-spacing</code>) und zur Textfarbe gemacht.</p>

<p>Zu den einzelnen Eigenschaften und ihren möglichen Werten siehe <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../eigenschaften/index.htm">CSS-Eigenschaften</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="verschachtelte_elemente">Formate für verschachtelte HTML-Elemente definieren</a></h2>

<p>Wenn Sie nichts anderes angeben, übernimmt ein HTML-Element, das innerhalb eines anderen HTML-Elements vorkommt, dessen Eigenschaften und fügt seine eigenen Eigenschaften nur hinzu. Wenn Sie beispielsweise für Überschriften 1. Ordnung die Schriftart Times und die Farbe rot definieren, erscheint Text, der innerhalb einer solchen Überschrift mit <code>&lt;i&gt;...&lt;/i&gt;</code> formatiert wird, ebenfalls rot und in Times, aber zusätzlich kursiv.</p>

<p>Sie können mit Hilfe von Stylesheets jedoch bestimmen, dass ein HTML-Element bestimmte Eigenschaften nur dann hat, wenn es innerhalb eines bestimmten anderen HTML-Elements vorkommt. So können Sie etwa bestimmen, dass <code>&lt;i&gt;...&lt;/i&gt;</code> innerhalb von Überschriften nicht kursiv, stattdessen aber in blauer Farbe dargestellt wird, während das gleiche Element innerhalb anderer HTML-Tags nach wie vor nichts anderes als eine kursive Darstellung bewirkt.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/verschachtelt1.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Nachfahren-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
h1 { color:red; }
h1 i { color:blue; font-style:normal; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Wir lernen &lt;i&gt;Stylesheets&lt;/i&gt;&lt;/h1&gt;
&lt;p&gt;Wir lernen &lt;i&gt;Stylesheets&lt;/i&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird festgelegt, dass Textabschnitte, die mit <code>&lt;i&gt;</code> ... <code>&lt;/i&gt;</code> ausgezeichnet sind, nicht wie sonst üblich kursiv, sondern normal (<code>font-style:normal;</code>), stattdessen aber mit blauer Farbe (<code>color:blue;</code>) dargestellt werden. Aber nur dann, wenn das <code>i</code>-Element <b>innerhalb</b> einer Überschrift 1. Ordnung (<code>h1</code>) vorkommt. Dazu notieren Sie zuerst den Namen des übergeordneten Elementtyps, im Beispiel <code>h1</code>, und dahinter, durch Leerraum getrennt, den Namen des inneren Elementtyps, im Beispiel <code>i</code>.</p>

<p>In der ersten Zeile innerhalb des <code>&lt;body&gt;</code>-Bereichs im obigen Beispiel kommt diese spezielle Definition zum Tragen. In der zweiten Zeile dagegen, wo <code>&lt;i&gt;...&lt;/i&gt;</code> innerhalb eines Textabsatzes vorkommt, hat es die übliche Wirkung.</p>

<p>Bei mehreren, durch Komma getrennten Selektoren wird häufig übersehen, dass eine für den ersten Selektor angegebene Verschachtelung die folgenden Selektoren nicht betrifft; über <code>h1 i, b</code> würden <em>alle</em> <code>b</code>-Elemente selektiert.</p>

<h3><img src="../../src/css20.gif" width="30" height="30" alt="CSS 2.0" title="CSS 2.0"><img src="../../src/netsc6.gif" width="30" height="30" alt="Netscape 6.0" title="Netscape 6.0"><img src="../../src/msie5.gif" width="30" height="30" alt="MS IE 5.0" title="MS IE 5.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="elemente_weitere">Weitere Möglichkeiten für verschachtelte HTML-Elemente bei CSS2</a></h3>

<p>Ab CSS2 gibt es weitere Möglichkeiten für Selektoren-Angaben zu verschachtelten Elementen:</p>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/verschachtelt2.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Nachfahren-Selektor, Kind-Selektor, Nachbar-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
div i { color:red; }
div * b { color:violet; }
div &gt; p { color:blue; }
div + p { margin-top:5em; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div&gt;

Text in einem div-Bereich mit &lt;b&gt;nur fettem Text&lt;/b&gt; und &lt;i&gt;kursivem und &lt;b&gt;dazu fettem&lt;/b&gt; Text&lt;/i&gt;.

&lt;p&gt;Textabsatz in einem div-Bereich mit &lt;b&gt;nur fettem Text&lt;/b&gt; und &lt;i&gt;kursivem und &lt;b&gt;dazu fettem&lt;/b&gt; Text&lt;/i&gt;.&lt;/p&gt;

&lt;table border="1"&gt;
 &lt;tr&gt;
  &lt;td&gt;&lt;p&gt;Textabsatz in einer Tabellenzelle.&lt;/p&gt;&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;

&lt;/div&gt;

&lt;p&gt;Textabsatz au&szlig;erhalb eines div-Bereichs mit &lt;b&gt;nur fettem Text&lt;/b&gt; und &lt;i&gt;kursivem und &lt;b&gt;dazu fettem&lt;/b&gt; Text&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;Noch ein Textabsatz.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Die Selektoren im Beispiel haben folgende Bedeutung:</p>

<h4 id="nachfahren-selektor">Nachfahren-Selektoren</h4>

<p><code>div i { color:red; }</code></p>

<p>Damit wird wie nach CSS-1.0-Syntax bekannt festgelegt, dass <code>i</code>-Elemente, sofern sie innerhalb eines <code>div</code>-Bereichs vorkommen, rote Textfarbe (<code>color:red;</code>) erhalten. Dabei wird das <code>i</code>-Element auch dann rot formatiert, wenn es z.B. in dieser Form vorkommt:
<code><strong>&lt;div&gt;</strong>&lt;ul&gt;&lt;li&gt;<strong>&lt;i&gt;&lt;/i&gt;</strong>&lt;/li&gt;&lt;/ul&gt;<strong>&lt;/div&gt;</strong></code>. Deshalb gibt es ab CSS2 die Möglichkeit, genauer festzulegen, für welche Verschachtelung die Formatdefinition gelten soll.</p>

<p><code>div * b { color:violet; }</code></p>

<p>Der Universalselektor <code>*</code> wird hier als Platzhalter für ein beliebiges Element und damit für eine weitere Verschachtelungsebene verwendet. Im obigen Beispiel wird festgelegt, dass <code>b</code>-Elemente, die innerhalb eines <code>div</code>-Bereichs vorkommen, nur dann violette Textfarbe (<code>color:violet;</code>) erhalten, wenn das <code>b</code>-Element in dieser oder einer vergleichbaren Form vorkommt:
<code><strong>&lt;div&gt;</strong>&lt;p&gt;<strong>&lt;b&gt;&lt;/b&gt;</strong>&lt;/p&gt;<strong>&lt;/div&gt;</strong></code>, also mindestens zwei Ebenen unterhalb des <code>div</code>-Elements. Im obigen Beispiel sind verschiedene Textstellen an verschiedenen Stellen mit <code>&lt;b&gt;...&lt;/b&gt;</code> ausgezeichnet. Das erste <code>b</code>-Element in dem Text, der zuerst und direkt innerhalb des <code>div</code>-Bereichs notiert ist, erhält noch keine violette Farbe, wohl aber das nächste <code>b</code>-Element im gleichen Satz, da dieses Element bereits zwei Ebenen unterhalb des <code>div</code>-Elements liegt (das <code>i</code>-Element liegt dazwischen).</p>

<h4 id="kind-selektor">Kind-Selektor</h4>

<p><code>div &gt; p { color:blue; }</code></p>

<p>Mit dem Zeichen <code>&gt;</code> wird in diesem Selektor festgelegt, dass <code>p</code>-Elemente, sofern sie innerhalb eines <code>div</code>-Bereichs vorkommen, nur dann blaue Textfarbe (<code>color:blue;</code>) erhalten, wenn das <code>p</code>-Element in dieser Form vorkommt:
<code>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</code>, also eine Ebene unterhalb des <code>div</code>-Elements. Im obigen Beispiel ist innerhalb des <code>div</code>-Bereichs unter anderem auch eine Tabelle notiert, in der noch mal ein <code>p</code>-Element vorkommt. Dort greift die Formatierung der blauen Farbe nicht, weil das <code>p</code>-Element mehr als eine Verschachtelungsebene unterhalb des <code>div</code>-Elements liegt (die Tabellenelemente sind dazwischen).</p>

<h4 id="nachbar-selektor">Nachbar-Selektor</h4>

<p><code>div + p { margin-top:100px; }</code></p>

<p>Mit dem Zeichen <code>+</code> wird in diesem Selektor festgelegt, dass <code>p</code>-Elemente, die unmittelbar auf ein <code>div</code>-Element hin folgen, einen Abstand von 100 Pixeln nach oben hin erhalten (<code>margin-top:100px;</code>). Im obigen Beispiel ist das bei dem vorletzten <code>p</code>-Element der Fall. Dieses folgt unmittelbar hinter dem <code>div</code>-Bereich.</p>

<p>Zu den einzelnen Eigenschaften und ihren möglichen Werten siehe <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../eigenschaften/index.htm">CSS-Eigenschaften</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Der Internet Explorer 6.0 interpretiert die Selektoren <code>&gt;</code> und <code>+</code> noch nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css20.gif" width="30" height="30" alt="CSS 2.0" title="CSS 2.0"><img src="../../src/netsc6.gif" width="30" height="30" alt="Netscape 6.0" title="Netscape 6.0"><img src="../../src/msie7.gif" width="30" height="30" alt="MS IE 7.0" title="MS IE 7.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="attributbedingte">Attributbedingte Formate definieren</a></h2>

<p>Mit Hilfe attributbedingter Formate können Sie in Selektoren angeben, dass Formatdefinitionen nur für Elemente mit bestimmten Attributen oder sogar nur für Elemente mit bestimmten Wertzuweisungen an Attribute gelten sollen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/attributbedingt.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Attribut-Selektoren&lt;/title&gt;
&lt;style type="text/css"&gt;
p { font-weight:bold; font-family:Tahoma,sans-serif; font-size:1.2em; }
p[align] { color:red; }
p[align=center] { color:blue; text-align:left; }
td[abbr~=Berlin] { background-color:#FFFF00 }
*[lang|=en] { background-color:#FF0000; color:#FFFFFF; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;Das ist ein Textabsatz, ein stinknormaler.&lt;/p&gt;
&lt;p align="right"&gt;Das ist ein Textabsatz, rechts ausgerichtet.&lt;/p&gt;
&lt;p align="center"&gt;Das ist ein Textabsatz, zentriert? Wirklich zentriert?&lt;/p&gt;
&lt;table border="1"&gt;&lt;tr&gt;
  &lt;th&gt;Berlin&lt;/th&gt;
  &lt;th&gt;Hamburg&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;
  &lt;td abbr="Es folgen Infos zu Berlin"&gt;Eine Menge Inhalt zu Berlin&lt;/td&gt;
  &lt;td abbr="Es folgen Infos zu Hamburg"&gt;Eine Menge Inhalt zu Hamburg&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Ein Textabsatz &lt;span lang="fr"&gt;avec&lt;/span&gt; Text &lt;span lang="en"&gt;about&lt;/span&gt;
einen &lt;span lang="en-US"&gt;English man in New York&lt;/span&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>In dem Beispiel ist zunächst eine Formatdefinition für alle <code>p</code>-Elemente notiert. Dann folgen jedoch zwei weitere Formatdefinitionen - ebenfalls für <code>p</code>-Elemente, aber nur für solche, die ein Attribut <code>align</code> haben. Mit der Syntax <code>p[align]</code> werden alle <code>p</code>-Elemente erfasst, die ein <code>align</code>-Attribut haben. Mit <code>p[align=center]</code> werden alle <code>p</code>-Elemente erfasst, die ein <code>align="center"</code> im einleitenden Tag haben. Mit <code>td[abbr~=Berlin]</code> werden alle Tabellenzellen des Typs <code>td</code> erfasst, die ein Attribut <code>abbr</code> besitzen und bei denen in der Wertzuweisung an dieses Attribut das Wort Berlin vorkommt. Diese Syntax findet eines von mehreren, durch Leerzeichen getrennten Wörtern in Wertzuweisungen an Attribute. Mit <code>*[lang|=en]</code> schließlich werden alle Elemente erfasst, die ein Universalattribut <code>lang</code> mit einem Wert, der mit <code>en</code> beginnt aufweisen und danach eventuell einen Bindestrich enthalten (wie <code>en</code> oder <code>en-US</code>).</p>




<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="klassen">Formate für Klassen definieren</a></h2>

<p>Sie können Formate für Klassen definieren. Anwenden können Sie solche Klassen in HTML mit dem <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../html/attribute/index.htm">Universalattribut</a> <code>class</code>. So können Sie beispielsweise für Überschriften 1. Ordnung zwei Varianten erzeugen. Dazu vergeben Sie Namen für die Klassen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/klassen.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Klassen-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
h1 { font-family:Arial,sans-serif; font-size:2em; font-weight:normal; }
h1.hinterlegt { background-color:#FFFF00 }
*.hinterlegt { background-color:#00FFFF }
.extra { background-color:#FF99FF }
.extra.hinterlegt { background-color:#FF0000 }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;H1 ganz normal nur etwas formatiert&lt;/h1&gt;
&lt;h1 class="hinterlegt"&gt;H1 knallgelb hinterlegt&lt;/h1&gt;
&lt;h2&gt;H2 ganz normal, &lt;span class="hinterlegt"&gt; türkis &lt;b class="extra"&gt;lila&lt;/b&gt; hinterlegt&lt;/span&gt;&lt;/h2&gt;
&lt;h3 class="extra hinterlegt"&gt;H3, rot hinterlegt&lt;/h3&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Es gibt zwei Möglichkeiten, Klassen für HTML-Elemente zu notieren: entweder für einen bestimmten HTML-Elementtyp, oder für keinen bestimmten. In jedem Fall bestimmen Sie eine Formatdefinition für eine Klasse, indem Sie im Selektor einen Punkt notieren und unmittelbar dahinter einen Namen für die Klasse angeben. Im obigen Beispiel wird mit <code>h1.hinterlegt</code> eine Klasse namens <code>hinterlegt</code> angesprochen, die aber nur für HTML-Elemente vom Typ <code>h1</code> gilt: also z.B. auf HTML-Elemente wie <code>&lt;h1&nbsp;class="hinterlegt"&gt;</code> anwendbar ist. Mit <code>*.hinterlegt</code> wird im Beispiel demonstriert, dass Sie durchaus den gleichen Klassennamen nochmal allgemein oder für andere Elemente verwenden können. Der Stern gilt als Universalselektor und bedeutet so viel wie "für alle Elemente". Er kann auch ganz entfallen. Im Beispiel <code>.extra</code> können Sie das sehen. Ein <code>h1</code>-Element erhält im Beispiel also die Formatierungen, die mit dem Selektor <code>h1.hinterlegt</code> bestimmt werden. Ein <code>p</code>-Element mit <code>&lt;p&nbsp;class="hinterlegt"&gt;</code> erhält dagegen die Formatierungen, die mit <code>*.hinterlegt</code> bestimmt werden. Es ist auch möglich, ausschließlich Elemente zu selektieren, die mehrere Klassennamen aufweisen. Notieren Sie in diesem Fall beide Klassenselektoren direkt hintereinander.</p>

<p>Die Namen hinter dem Punkt können Sie frei vergeben, Sie dürfen jedoch </p>

<ul>
 <li>keine Leerzeichen und deutsche Umlaute enthalten,</li>
 <li>nicht mit einer Ziffer oder einem Bindestrich beginnen</li>
 <li>und sollten keinen Unterstrich enthalten und nicht zu lang sein.</li>
</ul>

<h3 class="inf">Beachten Sie:</h3>

<p>Der Internet Explorer bis Version 6 versagt leider bei der Definition von <code>.extra.hinterlegt</code> und wendet diese Definition auf alle Elemente an, die der Klasse <var>hinterlegt</var> zugewiesen wurden, nicht nur dem Abschnitt, der mit <code>class="extra hinterlegt"</code> explizit beiden Klassen zugewiesen wurde.</p>

<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="div_span">Klassen in Verbindung mit den Elementen div und span</a></h2>

<p>Die beiden HTML-Elemente <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/text/bereiche.htm#block">div</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/text/bereiche.htm#inline">span</a> haben besondere Bedeutung für Stylesheets. Der Grund dafür ist, dass sie selber relativ eigenschaftslos sind. Der einzige Unterschied besteht darin, dass das <code>div</code>-Element eine neue Zeile im Textfluss erzwingt, während <code>span</code> innerhalb eines Textes verwendet werden kann und keinen neuen Absatz erzeugt. Die Darstellung, nicht jedoch die mögliche Verschachtelung, lässt sich mit der Eigenschaft <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../eigenschaften/positionierung.htm#display">display</a> beeinflussen. Das <code>div</code>-Element eignet sich vor allem dafür, mehrere Elemente zu gruppieren und in ihrer Gesamtheit zu formatieren. Mit dem <code>span</code>-Element hingegen lassen sich kleinere Teilbereiche definieren, deren Darstellung mit CSS gestaltet werden kann.</p>

<p>Das folgende Beispiel zeigt, wie Sie mit <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code> und Klassen Bereiche formatieren können, für die keine speziell dafür vorgesehenen HTML-Elemente existieren.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/divspan.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Klassen-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
.beitrag { border:1px outset gray; margin:.5em; padding:.5em; background-color:#efd;}
.uebersetzung { border-bottom:1px dotted #900; }
.autor { font-style:italic; }
.datum { font-size:80%; color:#444; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class="beitrag"&gt;
  &lt;p&gt;Wo finde ich weitere Information über HTML?
  &lt;p class="autor"&gt;Moritz Ratlos, &lt;span class="datum"&gt;21.05.2006&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class="beitrag"&gt;
  &lt;p&gt;Beispielsweise in der
    &lt;a href="http://www.w3.org/TR/REC-html40/"&gt;HTML 4.01-
    &lt;span lang="en" title="Empfehlung" class="uebersetzung"&gt;Recommendation&lt;/span&gt;&lt;/a&gt;.
  &lt;/p&gt;
  &lt;p class="autor"&gt;Max Hilfreich, &lt;span class="datum"&gt;22.05.2006&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class="beitrag"&gt;
  &lt;p&gt;Vielen Dank für den &lt;span lang="en" title="Verweis" class="uebersetzung"&gt;Link!&lt;/span&gt;&lt;/p&gt;
  &lt;p class="autor"&gt;Moritz Ratlos, &lt;span class="datum"&gt;22.05.2006&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im <code>style</code>-Bereich des Beispiels werden Klassen für beliebige Elemente definiert, die diese Klassen mit <code>class="beitrag"</code>, <code>class="datum"</code> usw. verwenden können und damit die entsprechenden Formate annehmen.</p>

<p>Im sichtbaren Bereich der Datei, also zwischen <code>&lt;body&gt;</code> und <code>&lt;/body&gt;</code>, wurden Elemente der Typen <code>div</code>, <code>p</code> und <code>span</code> um <code>class</code>-Attribute erweitert. Die einzelnen Beiträge wurden mittels <code>&lt;div&nbsp;class="beitrag"&gt;&hellip;&lt;/div&gt;</code> gruppiert und im Stylesheet mit Rahmen, Abständen und einer Hintergrundfarbe versehen. Die Namen der Verfasser sowie das jeweilige Datum befinden sich in einem mit <code>&lt;p&nbsp;class="autor"&gt;&hellip;&lt;/p&gt;</code> ausgezeichneten Bereich, welcher zur Gänze kursiv angezeigt wird. Das Datum selbst wird aufgrund von <code>class="datum"</code> zusätzlich kleiner und heller dargestellt. Im Verweis des zweiten und im Text des dritten Abschnitts wurden fremdsprachige Bestandteile um die Attribute <code>lang="en"</code>, <code>title="&hellip;"</code> und <code>class="uebersetzung"</code> ergänzt. Der über die Klasse <code>.uebersetzung</code> zugewiesene untere Rahmen verdeutlicht, dass zusätzliche Information, in diesem Fall die Übersetzung eines Begriffes im <code>title</code>-Attribut, verfügbar ist &ndash; grafische Browser stellen dessen Inhalt im Allgemeinen per Tooltip bereit.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="individualformate">Individualformate definieren</a></h2>

<p>So wie Sie Formate für Klassen definieren können, die in HTML mit dem <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../html/attribute/allgemeine.htm#uebersicht">Universalattribut</a> <code>class</code> angesprochen werden, können Sie auch Formate definieren, die über das Universalattribut <code>id</code> angesprochen werden. Da die Wertzuweisung an ein solches Attribut ein dokumentweit eindeutiger Name sein sollte, handelt es sich also einfach um eine zentrale Formatdefinition für das eine Element mit diesem id-Namen. In CSS werden die id-Namen allerdings nicht nur wie beispielsweise in JavaScript als dokumentweit eindeutige Bezeichner betrachtet, sondern auch als elementtypweit eindeutige Bezeichner.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/individual.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;ID-Selektor&lt;/title&gt;
&lt;style type="text/css"&gt;
#roterBereich {
   position:absolute;
   top:130px;
   left:30px;
   width:320px;
   padding:10px;
   margin:0px;
   border:4px solid #EE0000;
}
#blauerBereich {
   position:absolute;
   top:130px;
   left:400px;
   width:320px;
   padding:10px;
   margin:0px;
   border:4px solid #0000EE;
}
h1#Titel {
   font-family:Arial,sans-serif;
   font-size:2em;
   font-weight:normal;
   color:green;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1 id="Titel"&gt;Diese &amp;Uuml;berschrift und zwei positionierte Bereiche&lt;/h1&gt;
&lt;div id="roterBereich"&gt;&lt;h1&gt;Der rote Bereich&lt;/h1&gt;&lt;/div&gt;
&lt;div id="blauerBereich"&gt;&lt;h1&gt;Der blaue Bereich&lt;/h1&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>In dem Beispiel werden drei Individualformate definiert: zunächst einmal zwei Individualformate mit den Namen <code>#roterBereich</code> und <code>#blauerBereich</code>. Solche Formate beginnen also mit dem Gatterzeichen <code>#</code>, gefolgt von dem Namen. Ein HTML-Element, das diesen Namen als Wertzuweisung an das <code>id</code>-Attribut benutzt, bekommt dann die entsprechenden Formate zugewiesen. Das obige Beispiel zeigt einen typischen Anwendungsfall für Individualformate, nämlich das Definieren von Formaten für absolut positionierte Bereiche (<code>position:absolute;</code>).</p>

<p>Weiterhin wird ein Individualformat mit dem Selektor <code>h1#Titel</code> definiert. Das ist eine Syntax, die erst seit CSS2 zur Verfügung steht. Dabei wird vor dem Gatterzeichen, das ein Individualformat kennzeichnet, ein HTML-Elementtyp notiert, im Beispiel also <code>h1</code> für Überschriften erster Ordnung. Hinter dem Gatterzeichen dann wieder der Name des Individualformats. Im Beispiel wird die Formatdefinition nur dann angewendet, wenn es in der HTML-Datei ein <code>h1</code>-Element mit dem Attribut <code>id="Titel"</code> gibt. Wenn es dagegen etwa ein Element <code>div</code> mit <code>id="Titel"</code> gäbe, würde die Formatdefinition dort ignoriert.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Individualformate mit vorangestelltem Elementtyp werden von Internet Explorer 5.x und Netscape 6.0 erkannt, nicht aber von älteren Versionen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/css10.gif" width="30" height="30" alt="CSS 1.0" title="CSS 1.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="pseudoformate">Pseudoelemente und Pseudoklassen definieren</a></h2>

<p>Mittels Pseudoklassen und Pseudoelementen können Sie Deklarationen für HTML-Bestandteile definieren, die sich nicht durch ein eindeutiges HTML-Element ausdrücken lassen, z.B. ein "noch nicht besuchter Verweis" oder der "erste Buchstabe eines Absatzes". Zum Definieren solcher Pseudoelemente und Pseudoklassen gibt es eine spezielle Syntax.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/pseudo.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Pseudoklassen für Verweise&lt;/title&gt;
&lt;style type="text/css"&gt;
 body { font-family:Arial,sans-serif; }
 a:link { color:#EE0000; text-decoration:none; font-weight:bold; }
 a:visited { color:#EEAAAA; text-decoration:none; font-weight:bold; }
 a:focus { color:#00AA00; background-color:#FFFF77; font-weight:bold; }
 a:hover { color:#EE0000; text-decoration:none; background-color:#FFFF99; font-weight:bold; }
 a:active { color:#0000EE; background-color:#FFFF99; font-weight:bold; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;
Vermutlich kennen Sie die &lt;a href="../../index.htm"&gt;Kapiteleinstiegsseite zu CSS&lt;/a&gt;&lt;br&gt;
Und wohl auch die &lt;a href="../../../index.htm"&gt;Einstiegsseite zu SELFHTML&lt;/a&gt;&lt;br&gt;
Aber kennen Sie auch die &lt;a href="../../../intro/hypertext/geschichte.htm"&gt;Geschichte von Hypertext&lt;/a&gt;?&lt;br&gt;
Oder die &lt;a href="../../../xml/regeln/baumstruktur.htm"&gt;Baumstruktur einer XML-Datei&lt;/a&gt;?
&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Bei Pseudoelementen und Pseudoklassen notieren Sie zuerst das betroffene HTML-Element, im Beispiel das <code>a</code>-Element für Verweise. Dahinter folgt ein Doppelpunkt und dahinter eine erlaubte Angabe, im Beispiel etwa <code>link</code> (für noch nicht besuchte Verweisziele), <code>visited</code> (für bereits besuchte Verweisziele), <code>focus</code> (für z.B. mit der Tastatur ausgewählte Verweise), <code>hover</code> (für Verweise, während der Anwender mit der Maus darüber fährt) und <code>active</code> (für angeklickte Verweise). Beachten Sie, dass dies keine frei wählbaren Namen sind, sondern feste Schlüsselwörter, und dass auch die Reihenfolge von Bedeutung ist, da später notierte Angaben die zuvor notierten überschreiben und sich z.B. <code>a:hover</code> für einen mit der Tastatur ausgewählten Verweis nicht auswirken könnte, wenn <code>a:focus</code> später notiert wird.</p>

<p>Es gibt eine Reihe fester, erlaubter Pseudoelemente und Pseudoklassen. Diese werden werden im Zusammenhang mit den CSS-Eigenschaften im Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../eigenschaften/pseudoformate.htm">Pseudoelemente und Pseudoklassen</a> beschrieben.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="direkt.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="direkt.htm">HTML-Elemente direktformatieren</a>
</td></tr>
<tr>
<td class="doc"><a href="einbinden.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="einbinden.htm">Stylesheets in HTML einbinden</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Stylesheets</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">CSS-Formate definieren</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>