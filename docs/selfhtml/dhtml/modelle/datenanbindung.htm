<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Dynamisches HTML / DHTML-Modelle / Datenanbindung (nur Microsoft)</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Wie man mit einer allerdings Microsoft-proprietären und Technik mit Hilfe von JavaScript eine einfache Anbindung an eine externe Datenquelle realisiert">
<meta name="keywords"       content="SELFHTML, Dynamisches HTML, Dynamic HTML, DHTML, Microsoft, Internet Explorer, Datenanbindung, Datenbank, TDC, RDS, JDBC, XML, MSHTML">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-08-22T21:21:39+02:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/dhtml/modelle/datenanbindung.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="DHTML-Modelle" href="index.htm">
<link rel="next" title="Dynamische Filter (nur Microsoft)" href="dynamische_filter.htm">
<link rel="prev" title="Das ältere DHTML-Modell von Netscape" href="netscape.htm">
<link rel="first" title="Das Document Object Model (DOM)" href="dom.htm">
<link rel="last" title="Dynamische Filter (nur Microsoft)" href="dynamische_filter.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Dynamisches HTML</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">DHTML-Modelle</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Datenanbindung (nur Microsoft)</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeines">Allgemeines zur Datenanbindung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#durchsuchbar">Beispiel: Daten durchsuchbar machen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#html_elemente">HTML-Elemente für die Anzeige von externen Daten</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tdc">Datenmodell: Tabular Data Control (TDC)</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#rds">Datenmodell: Remote Data Service (RDS)</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#jdbc">Datenmodell: JDBC DataSource Applet</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#xml">Datenmodell: XML Data Source</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#mshtml">Datenmodell: MSHTML Data Source</a>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="allgemeines">Allgemeines zur Datenanbindung</a></h2>

<p>Der Internet Explorer ab Version 4.x erlaubt es, in kontrollierter Form Daten aus einer externen Datenquelle zu holen und in HTML-Elementen dynamisch anzuzeigen. So ist beispielsweise eine Tabelle denkbar, in der sich der Anwender bei jedem Klick auf einen entsprechenden Button die Bundesliga-Endtabellen der Spielsaisons von 1960 bis heute anzeigen lassen kann. Bei jedem Klick werden aus einer externen Datei eine Reihe von Daten ausgelesen und dynamisch in die Anzeigetabelle übernommen.</p>

<p>Microsoft hat das Konzept der Datenanbindung sehr flexibel ausgelegt. Es gibt diverse Möglichkeiten, auf externe Datenquellen zuzugreifen. Der Zugriff auf eine einfache Textdatei ist nur eine davon. Es besteht ebenso die Möglichkeit, etwa über die Datenbankabfragesprache SQL auf eine Datenbank zuzugreifen, die SQL-Befehle verarbeiten kann. Für die verschiedenen Möglichkeiten der Datenanbindung gibt es verschiedene <b>Datenmodelle</b>. Für jedes der Datenmodelle gibt es ein bestimmtes ActiveX-Control oder ein Java-Applet, das Sie in Ihrer HTML-Datei ansprechen müssen, um die Datenanbindung damit zu realisieren. Die Datenmodelle und deren Einbindung in HTML werden auf dieser Seite vorgestellt.</p>

<p>Die Vorteile der Datenanbindung liegen auf der Hand: Daten können mit einer dafür geeigneten Anwendung gepflegt und gespeichert werden. Eine HTML-Datei kann auf immer aktuelle Daten zugreifen, ohne selbst geändert werden zu müssen. Für das "Holen" der Daten gibt es kein vorgeschriebenes Protokoll. Die Datenanbindung funktioniert also auf allen Umgebungen, ob auf einem WWW-Server, lokal auf einer PC-Festplatte oder auf einer CD-ROM (zumindest auf das einfachste Datenmodell trifft dies zu). Es ist kein zusätzliches CGI-Script erforderlich, das als Vermittler zwischen HTML-Datei und Datenbestand für jede Interaktion zwischen Anwender und Datenbank immer wieder aufgerufen werden muss. Das Know How hat der Browser, und die Steuerung der Datenanbindung wird direkt in der HTML-Datei notiert. Durch dynamisches Austauschen der Inhalte von HTML-Elementen, in denen die Daten angezeigt werden, ist kein neuer Aufbau der WWW-Seite erforderlich.</p>

<p>Aus heutiger Sicht muss das Modell der client-seitigen Datenanbindung, das Microsoft mit dem Internet Explorer 4.0 eingeführt hat, jedoch kritisch betrachtet werden. Der Grund ist einerseits, dass es auf extrem proprietären Konzepten beruht, vor allem was die Einbindung der allgemein unbeliebten ActiveX-Controls betrifft. Und andererseits haben sich Web-Server mittlerweile so stark durchgesetzt, dass es in in den meisten Fällen - auch lokal - sinnvoller ist, server-seitige <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../servercgi/cgi/cgihtml.htm">CGI-Scripts</a> zum Handling der Datenverarbeitung einzusetzen.</p>
<h3 class="rem">Hinweis:</h3>

<p>Die Erläuterungen zu den Datenmodellen weiter unten auf dieser Seite sind zum Teil sehr technisch. Das ist leider nicht zu ändern, da die Materie ziemlich komplex ist. Die Erläuterungen zu den Datenmodellen richten sich auch nur an Spezialisten, die wissen, was mit den entsprechenden Begriffen anzufangen ist.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a></h2>

<p>Die hier beschriebene Vorgehensweise erläutert, wie Sie in einer Tabelle einzelne Datensätze aus einer externen Textdatei anzeigen können. Dabei wird das <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tdc">Datenmodell: Tabular Data Control (TDC)</a> verwendet. Mit Hilfe von Buttons kann der Anwender den nächsten oder vorhergehenden Datensatz in die Tabelle laden.</p>

<h3 class="xmp">Beispiel Teil 1 - externe Datei <var>adressen.txt</var> mit Daten:</h3>

<pre>
Name|Vorname|Strasse|PLZ|Ort|Tel|EMail
Berger|Hans|Pfisterstr.11|38487|Grubenhausen|04987-4445631|berger@example.org
Heidenfroh|Martina|Mittelweg 123|43985|Hatzenau|04583-2398474|mh@example.org
Rauhbein|Eberhard|Traumstr.13|56097|Höllenbachhausen|068347-582374|-
Truthahn|Gerlinde|Aufplatz 1|93722|Sündenstadt|032987-385750|gerlinde@example.org
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Die externe Datei ist in diesem Beispiel eine einfache Textdatei, z.B. eine Datei mit dem Namen <code>adressen.txt</code>. Die Datei ist so aufgebaut, dass jede Zeile einen Datensatz darstellt. Die einzelnen Felder eines Datensatzes werden in diesem Beispiel durch das Zeichen "<code>|</code>" getrennt. Es könnte auch ein anderes Zeichen sein. Das Zeichen "<code>|</code>" wurde hier gewählt, weil es sehr selten ist und in den Daten selbst nicht vorkommt. In der ersten Zeile der Datei stehen keine Daten, sondern Feldnamen. Der dritte Feldname lautet beispielsweise <code>Strasse</code>. In den eigentlichen Datenzeilen darunter stehen dann in entsprechender Reihenfolge die Daten. So hat das dritte Feld der ersten Datenzeile den Wert <code>Pfisterstr.11</code>. Dies ist also ein Wert für den in der ersten Zeile an dritter Stelle vergebenen Feldnamen <code>Strasse</code>.</p>

<p>Textdateien dieser Art sind nicht besonders komfortabel, wenn man sie selbst in einem Texteditor bearbeiten will. Doch solche Textdateien lassen sich mit fast allen Tabellenkalkulations- und Datenbankprogrammen erzeugen. Meist ist dafür der Datentyp "kommabegrenzt" ("comma delimited") mit der Standard-Dateiendung <code>.csv</code> vorgesehen. Bessere Programme erlauben es dabei auch, ein selbst definierbares Feldbegrenzerzeichen zu vergeben.</p>

<h3 class="xmp"><a class="an" name="tabelle2">Beispiel Teil 2 - HTML-Datei mit Datenzugriff:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/adressen.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;object id="Adressen" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;
 &lt;param name="DataURL" value="adressen.txt"&gt;
 &lt;param name="UseHeader" value="true"&gt;
 &lt;param name="FieldDelim" value="|"&gt;
&lt;/object&gt;
&lt;form action=""&gt;
&lt;table id="Anzeigetabelle" datasrc="#Adressen" datapagesize="1" width="100%" border="1"&gt;
&lt;colgroup&gt;&lt;col width="200"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tr&gt;
&lt;td bgcolor="#EEEEEE"&gt;&lt;b&gt;Adressen&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#EEEEEE" align="right"&gt;
&lt;input type="button" value=" &amp;lt; " onclick="document.all.Anzeigetabelle.previousPage();"&gt;
&lt;input type="button" value=" &amp;gt; " onclick="document.all.Anzeigetabelle.nextPage();"&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Name:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="Name"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Vorname:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="Vorname"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Straße:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="Strasse"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Postleitzahl:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="PLZ"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Wohnort:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="Ort"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;Telefon:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="Tel"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top"&gt;&lt;b&gt;E-Mail:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top"&gt;&lt;span datafld="EMail"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Um eine externe Datenquelle in einer HTML-Datei nutzen zu können, müssen Sie zunächst die Quelle und diverse Angaben zu deren Aufbau notieren. Dazu brauchen Sie das <code>&lt;object&gt;</code>-Tag. In dem einleitenden <code>&lt;object&gt;</code>-Tag sind zwei Attribute erforderlich: Mit dem <code>id</code>-Attribut vergeben Sie einen Namen, unter dem Sie später auf die Daten zugreifen können. Der Name sollte passend sein, im obigen Beispiel etwa <code>"Adressen"</code>. Als zweiten Parameter müssen Sie das ActiveX-Control referenzieren, dass den gesamten Zugriff auf die externe Datei abwickelt. Bei einfachen Textdateien mit zeilenweisen Datensätzen müssen Sie dabei immer die Angabe <code>classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"</code> notieren. Das ActiveX-Control mit dieser Identifikationsnummer ist im Lieferumfang des Internet Explorers ab Version 4.x enthalten - Sie brauchen sich um nichts weiter zu kümmern. Genau dabei liegt allerdings der Knackpunkt des gesamten Konzepts: ohne solche ActiveX-Controls läuft nichts.</p>

<p>Innerhalb des <code>&lt;object&gt;</code>-Tags notieren Sie Angaben zu Ort und Beschaffenheit der externen Datei.<br>
Mit <code>&lt;param name="DataURL"</code> können Sie die gewünschte Datei ansprechen. Im <code>value</code>-Attribut notieren Sie den Dateinamen. Wenn sich die Datei im gleichen Verzeichnis befindet, genügt der einfache Dateiname. Ansonsten gelten die gleichen Regeln wie bei <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../html/verweise/index.htm">Verweisen in HTML</a>.<br>
Mit <code>&lt;param name="UseHeader" value="true"&gt;</code> weisen Sie den Browser an, die erste Zeile der externen Datei nicht als Datenzeile zu interpretieren, sondern als Zeile für die Definition der Feldnamen.<br>
Mit <code>&lt;param name="FieldDelim"</code> geben Sie an, welches das Feldtrennzeichen sein soll. Im Beispiel ist dies das Zeichen <code>"|"</code>.</p>

<p>Damit sind alle Voraussetzungen geschaffen, um die Daten aus der externen Datei dynamisch in HTML anzuzeigen. Die Anzeige der Daten erfolgt in einer Tabelle. Das einleitende <code>&lt;table&gt;</code>-Tag schafft die nötigen Voraussetzungen, um die Daten in kontrollierter Form anzuzeigen. Zunächst wird in der Tabelle mit dem <code>id</code>-Attribut ein Name vergeben (im Beispiel: <code>Anzeigetabelle</code>). Dieser Name wird bei den Buttons benötigt, die innerhalb der Tabelle das Blättern innerhalb der Datensätze ermöglichen.</p>

<p>Die nächste Angabe im <code>&lt;table&gt;</code>-Tag ist das <code>datasrc</code>-Attribut (<i>data source, Datenquelle</i>). Damit nehmen Sie Bezug auf die externe Datendatei. An dieser Stelle dürfen Sie jedoch nicht die Datendatei selbst angeben, sondern Sie müssen denjenigen Namen angeben, den Sie zuvor im <code>&lt;object&gt;</code>-Tag im <code>id</code>-Attribut vergeben haben. Und zwar mit einem vorangestellten Gatterzeichen <code>#</code>. Dadurch stellen Sie den Bezug zwischen Tabelle und Datenquelle her. Es werden dann alle Parameter berücksichtigt, die Sie innerhalb des <code>&lt;object&gt;</code>-Tags angegeben haben.</p>

<p>Ebenfalls wichtig das Attribut <code>datapagesize</code> (<i>Datenseitengröße</i>) im <code>&lt;table&gt;</code>-Tag. Damit geben Sie an, wie viele Datensätze aus der externen Datei gleichzeitig angezeigt werden sollen. Wenn Sie diese Angabe weglassen, macht der Internet Explorer die Tabelle automatisch so lang, dass alle Datensätze auf einmal darin dargestellt werden. Im obigen Beispiel wird <code>datapagesize="1"</code> angegeben. Dadurch wird immer genau ein Datensatz angezeigt.</p>

<p>Innerhalb der Tabelle können Sie erkennen, wie ein Datensatz aus der externen Datenquelle darin angezeigt wird. Die Tabelle selbst können Sie nach Ihren Wünschen frei gestalten. Wichtig ist nur zu wissen, wie der Bezug zu einem Datensatz der externen Datei hergestellt wird. Im obigen Beispiel geschieht dies innerhalb entsprechender Tabellenzellen mit Hilfe des <code>&lt;span&gt;</code>-Tags. Mit einem, Befehl wie <code>&lt;span datafld="PLZ"&gt;&lt;/span&gt;</code> weisen Sie den Browser an, in der betreffenden Tabellenzelle den aktuellen Inhalt des Feldes <code>"PLZ"</code> aus der externen Datenquelle anzuzeigen (<i>datafld = data field = Datenfeld</i>). Dabei muss der Wert des Attributs <code>datafld</code> mit dem Feldnamen übereinstimmen, den Sie in der ersten Zeile der externen Datendatei vergeben haben. Beachten Sie dabei auch die exakte Schreibweise.</p>

<p>Neben dem Attribut <code>datafld</code> können Sie in so einem Datenanzeigebereich auch noch das Attribut <code>dataformatas</code> (<i>formatiere Daten als</i>) notieren. Im obigen Beispiel wird davon kein Gebrauch gemacht. Benutzen Sie <code>dataformatas</code>, wenn die Daten in der externen Datei selbst HTML-Elemente enthalten. Mit <code>dataformatas="html"</code> erzwingen Sie dann, dass die Elemente aus der externen Datei als HTML-Elemente interpretiert werden.</p>

<p>Da im obigen Beispiel mit <code>datapagesize="1"</code> festgelegt wurde, dass immer nur ein Datensatz angezeigt wird, erscheint in der Tabelle zunächst der Inhalt der ersten Datenzeile der externen Datei. Natürlich soll der Anwender nun in den Datensätzen blättern können. Dazu werden Buttons zum Vor- und Zurückblättern definiert. Im Beispiel befinden sich diese Buttons in der ersten Tabellenzeile. Sie könnten aber auch an einer anderen Stelle stehen.</p>

<p>Mit <code>&lt;input type=button value=" &amp;lt; "
onclick="document.all.Anzeigetabelle.previousPage();"&gt;</code> wird ein Button definiert, bei dessen Anklicken der vorhergehende Datensatz aufgerufen wird. Mit <code>document.all.Anzeigetabelle</code> greifen Sie dabei auf die Tabelle zu, in der die Daten angezeigt werden (<code>Anzeigetabelle</code> ist dabei der Name, der in der Tabelle mit dem <code>id</code>-Attribut vergeben wurde). Mit <code>&lt;input type="button" value=" &amp;gt; " onclick="document.all.Anzeigetabelle.nextPage();"&gt;</code> wird der Button definiert, der zum nächsten Datensatz springt. Beachten Sie, dass Sie nicht kontrollieren müssen, ob der Anwender gerade den ersten oder letzten Datensatz anzeigt. Es gibt keine Fehlermeldungen, wenn der Anwender versucht, einen nicht vorhandenen Datensatz aufzurufen. Der Button hat dann einfach keine Wirkung.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="durchsuchbar">Beispiel: Daten durchsuchbar machen</a></h2>

<p>In diesem Beispiel wird gezeigt, wie Sie dem Anwender ermöglichen können, mit Hilfe eines Suchbegriffes nur diejenigen Datensätze anzuzeigen, in denen der gesuchte Begriff vorkommt. Das Beispiel zeigt auch, wie Sie mit Hilfe von Scripts auf die HTML-Elemente zur Datenanbindung zugreifen können.</p>

<h3 class="xmp">Beispiel Teil 1 - externe Datei <var>woerterbuch.txt</var> mit Daten:</h3>
<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/woerterbuch.txt">Anzeigebeispiel: So sieht's aus</a> (62 KByte)</p>

<pre>
Deutsch;Englisch;Franzoesisch;Italienisch;Spanisch
Rechner;computer;ordinateur;computer, calcolatore;ordenador
Maschine;machine (s);machine;macchina;máquina
Personalcomputer;personal computer;ordinateur personnel (m);computer personale;ordenador personal
arbeitender Rechner;active computer;ordinateur active;computer attivo;ordenador activado
... usw. ...
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Die Datendatei dieses Beispiels zeigt ein mehrsprachiges Fachwörterbuch. In der ersten Zeile werden die Sprachen definiert. Unterhalb davon stehen die Wörter in den jeweiligen Sprachen. Die Einträge zu den Sprachen sind durch Semikola (<code>;</code>) getrennt. Wenn in einer Sprache mehrere Wörter in Frage kommen, werden diese durch Kommata getrennt, so wie in der zweiten Zeile beim italienischen Wort für <code>Rechner</code>: <code>computer, calcolatore</code>.</p>

<h3 class="xmp"><a class="an" name="durchsuchbar2">Beispiel Teil 2 - HTML-Datei mit Datenzugriff:</a></h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/woerterbuch.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script language="JScript" type="text/jscript"&gt;
function Suchen () {
  var Datensaetze = 1000;
  document.all.Anzeigetabelle.style.display = "none";
  var Suchausdruck = "";
  var Suchbegriffe = 0;
  if (document.Eingabe.SuchDeu.value != "") {
    Suchausdruck = Suchausdruck + "Deutsch = " + document.Eingabe.SuchDeu.value;
    Suchbegriffe++;
  }
  if (document.Eingabe.SuchEng.value != "") {
    if (Suchbegriffe &gt; 0) {
      Suchausdruck = Suchausdruck + " &amp; Englisch = " + document.Eingabe.SuchEng.value;
    } else {
      Suchausdruck = Suchausdruck + "Englisch = " + document.Eingabe.SuchEng.value;
    }
    Suchbegriffe++;
  }
  if (document.Eingabe.SuchFra.value != "") {
    if (Suchbegriffe &gt; 0) {
      Suchausdruck = Suchausdruck + " &amp; Franzoesisch = " + document.Eingabe.SuchFra.value;
    } else {
      Suchausdruck = Suchausdruck + "Franzoesisch = " + document.Eingabe.SuchFra.value;
    }
    Suchbegriffe++;
  }
  if (document.Eingabe.SuchIta.value != "") {
    if (Suchbegriffe &gt; 0) {
      Suchausdruck = Suchausdruck + " &amp; Italienisch = " + document.Eingabe.SuchIta.value;
    } else {
      Suchausdruck = Suchausdruck + "Italienisch = " + document.Eingabe.SuchIta.value;
    }
    Suchbegriffe++;
  }
  if (document.Eingabe.SuchSpa.value != "") {
    if (Suchbegriffe &gt; 0) {
      Suchausdruck = Suchausdruck + " &amp; Spanisch = " + document.Eingabe.SuchSpa.value;
    } else {
      Suchausdruck = Suchausdruck + "Spanisch = " + document.Eingabe.SuchSpa.value;
    }
    Suchbegriffe++;
  }
  document.all.Begriffe.object.Filter = Suchausdruck;
  document.all.Begriffe.Reset();
  document.all.Anzeigetabelle.dataSrc = "#Begriffe";
  if (document.all.Begriffe.recordset.recordCount &lt; Datensaetze) {
    document.all.Anzeigetabelle.dataPageSize = Begriffe.recordset.recordCount;
    document.all.Treffer.innerText = Begriffe.recordset.recordCount + " Suchtreffer!";
    document.all.Anzeigetabelle.style.display = "block";
  } else {
    document.all.Treffer.innerText = "0 Suchtreffer!";
  }
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;object id="Begriffe" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;
 &lt;param name="DataURL" value="woerterbuch.txt"&gt;
 &lt;param name="UseHeader" value="true"&gt;
 &lt;param name="Filter" value=""&gt;
 &lt;param name="FieldDelim" value=";"&gt;
&lt;/object&gt;

&lt;p&gt;Die durchsuchbare Datenbank enthält 1000 Einträge. Suchen Sie nach
Begriffen in einer oder mehreren Sprachen. Bei der Suche in mehreren Sprachen
werden die Eingaben logisch durch UND verknüpft. Sie dürfen auch das
Wildcard-Zeichen &lt;b&gt;*&lt;/b&gt; für Teilausdrücke verwenden. Suchen Sie z.B. mal im Feld
(Deutsch) nach &lt;b&gt;Arbeits*&lt;/b&gt; oder im Feld (Italienisch) nach
&lt;b&gt;*ore&lt;/b&gt; oder im Feld (Englisch) nach &lt;b&gt;*computer&lt;/b&gt;.&lt;/p&gt;

&lt;form name="Eingabe" action=""&gt;
Suche nach:&lt;br&gt;
&lt;input name="SuchDeu" type="text" width="40"&gt; (Deutsch)&lt;br&gt;
&lt;input name="SuchEng" type="text" width="40"&gt; (Englisch)&lt;br&gt;
&lt;input name="SuchFra" type="text" width="40"&gt; (Franzoesisch)&lt;br&gt;
&lt;input name="SuchIta" type="text" width="40"&gt; (Italienisch)&lt;br&gt;
&lt;input name="SuchSpa" type="text" width="40"&gt; (Spanisch)&lt;br&gt;
&lt;input type="button" style="width:150px; height:25px;" value="Suche starten" onclick="Suchen()"&gt;
&lt;/form&gt;

&lt;table border="1" cellpadding="1" cellspacing="0"&gt;&lt;tr&gt;&lt;td&gt;
&lt;table width="100%"&gt;
&lt;tr&gt;
&lt;td valign="top" colspan="5"&gt;
&lt;span id="Treffer" style="color:#0000CC; font-weight:bold;"&gt;&nbsp;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td bgcolor="#EEEEEE" valign="top" width="20%"&gt;&lt;b&gt;Deutsch:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#EEEEEE" valign="top" width="20%"&gt;&lt;b&gt;Englisch:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#EEEEEE" valign="top" width="20%"&gt;&lt;b&gt;Französisch:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#EEEEEE" valign="top" width="20%"&gt;&lt;b&gt;Italienisch:&lt;/b&gt;&lt;/td&gt;
&lt;td bgcolor="#EEEEEE" valign="top" width="20%"&gt;&lt;b&gt;Spanisch:&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;table id="Anzeigetabelle" style="display:none" width="100%"&gt;
&lt;tr&gt;
&lt;td bgcolor="#FFFFE0" valign="top" width="20%"&gt;&lt;span datafld="Deutsch"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top" width="20%"&gt;&lt;span datafld="Englisch"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top" width="20%"&gt;&lt;span datafld="Franzoesisch"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top" width="20%"&gt;&lt;span datafld="Italienisch"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td bgcolor="#FFFFE0" valign="top" width="20%"&gt;&lt;span datafld="Spanisch"&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel zeigt die vollständige HTML-Datei zur Realisierung einer durchsuchbaren Datenbank. Innerhalb der HTML-Datei wird wie im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a> wieder das <code>&lt;object&gt;</code>-Tag notiert, um die Verbindung zu der externen Datendatei herzustellen. Es wird jedoch ein neuer Parameter angegeben:<br>
<code>&lt;param name="Filter" value=""&gt;</code><br>
Mit dem Parameter <code>Filter</code> können Sie die Datensätze, die aus der Datendatei "geholt" werden, begrenzen. Dazu können Sie im <code>value</code>-Attribut Einschränkungskriterien angeben. Bei der Objektdefinition im obigen Beispiel wird <code>value=""</code> notiert. Das bedeutet, es gibt keine Einschränkungen. Alle Datensätze werden gefunden.</p>

<p>In dem längeren Script, das im Kopf der HTML-Datei steht, wird der Wert für <code>Filter</code> dynamisch verändert. Dadurch wird die Anzeige auf bestimmte Datensätze eingeschränkt, nämlich solche, die den Filterkriterien entsprechen.</p>

<p>Die Kriterien für den Filter soll der Anwender durch seine Suchanfrage selbst bestimmen können. Im obigen Beispiel wird dazu unterhalb des <code>&lt;object&gt;</code>-Tags ein Formular definiert (<code>&lt;form name="Eingabe" action=""&gt;</code>). Das Formular hat fünf Eingabefelder, eines für jede der fünf Sprachen des mehrsprachigen Wörterbuchs. Mit einem anklickbaren Button kann der Anwender die Suche abschicken. Beim Anklicken des Buttons wird die Funktion <code>Suchen()</code>  aufgerufen, die in dem JScript-Bereich im Dateikopf definiert ist (<code>onclick="Suchen()"</code>). </p>

<p>Innerhalb der Funktion <code>Suchen()</code> wird zunächst eine Variable <code>Datensaetze</code> mit einem Wert vorbelegt (1000). Das empfiehlt sich bei größeren Datenbeständen. Denn per Voreinstellung liefert der Internet Explorer, wenn er keine Datensätze findet, die dem Suchkriterium entsprechen, alle Datensätze zurück. Angenommen, Sie haben 5000 Datensätze. Dann würde eine Tabelle mit 5000 Zeilen angezeigt. Da dies im Aufbau ziemlich lange dauert, ist eine Begrenzung sinnvoll.</p>

<p>Die Variable <code>Suchausdruck</code> soll die Anwenderkriterien zum Durchsuchen des Datenbestandes aufnehmen. Dabei ist es erforderlich, die Angaben aus den Formularfeldern in eine Zeichenkette zu konvertieren, die den Regeln für den Parameter <code>Filter</code> entsprechen.</p>

<p>Folgende wichtige Regeln gelten für Werte, die bei <code>Filter</code> erlaubt sind (diese Regeln gelten sowohl bei Wertzuweisungen innerhalb des <code>&lt;object&gt;</code>-Tags als auch bei dynamischen Wertzuweisungen innerhalb von Scripts):<br>
Mit <code>Feldname = Wert</code> werden nur Datensätze gefunden, bei denen das Feld <code>Feldname</code> exakt den Wert <code>Wert</code> enthält und nicht mehr und nicht weniger. Bei <code>Name = Meyer</code> werden also nur Meyer's gefunden, keine Meyerbohm's.<br>
Mit <code>Feldname &lt;&gt; Wert</code> werden Datensätze gefunden, bei denen der Wert <code>Wert</code> im Feld <code>Feldname</code> vorkommt - er kann auch exakt damit übereinstimmen. Bei <code>Name &lt;&gt; Meyer</code> werden also Meyer's und Meyerbohm's gefunden.<br>
Mit <code>Feldname &gt; Wert</code> werden Datensätze gefunden, bei denen der Wert von <code>Feldname</code> größer ist als <code>Wert</code>. Bei <code>Name &gt; Y</code> werden also nur Namen gefunden, die mit Z anfangen.<br>
Mit <code>Feldname &gt;= Wert</code> werden Datensätze gefunden, bei denen der Wert von <code>Feldname</code> größer oder gleich ist im Vergleich zu  <code>Wert</code>.  Bei <code>Name &gt;= Y</code> werden also nur Namen gefunden, die mit Y oder Z anfangen.<br>
Mit <code>Feldname &lt; Wert</code> werden Datensätze gefunden, bei denen der Wert von <code>Feldname</code> kleiner ist als <code>Wert</code>. Bei <code>Name &lt; D</code> werden also nur Namen gefunden, die mit A,B oder C anfangen.<br>
Mit <code>Feldname &lt;= Wert</code> werden Datensätze gefunden, bei denen der Wert von <code>Feldname</code> kleiner oder gleich ist im Vergleich zu  <code>Wert</code>.  Bei <code>Name &lt;= D</code> werden also Namen gefunden, die mit A,B,C oder D anfangen.<br>
An jeder Stelle ist ein Platzhalterzeichen erlaubt. Dies ist ein Sternzeichen (<code>*</code>). Es steht für kein, eines oder beliebig viele Zeichen.<br>
Sie können auch zwei oder mehrere solcher einfachen Ausdrücke mit den Zeichen <code>&amp;</code> (für UND) oder <code>|</code> (für inklusives ODER) logisch verknüpfen. Wenn Sie mehrere Ausdrücke verknüpfen und dabei sowohl UND also auch ODER verwenden, müssen Sie Klammern verwenden, um eine eindeutige Bewertung des gesamten Kriteriums sicherzustellen. Ein komplexer Ausdruck dieser Art ist etwa <code>Name &gt; M &amp; PLZ = 8*</code>.
</p>

<p>Im obigen Script wird mit diversen if-Abfragen aus den Eingabefeldern des Formulars ein gültiger Zuweisungswert für <code>Filter</code> konstruiert. Dabei wird nur die einfachste Bedingung mit dem Istgleichzeiten eingesetzt. Da der Anwender auch selbst das Sternzeichen als Platzhalterzeichen in einem Eingabefeld eingeben kann, genügt diese einfache Suche für viele Fälle. Wenn Sie dem Anwender komplexere Suchabfragen ermöglichen wollen, müssen Sie diesen Teil des Scripts entsprechend aufwendiger gestalten.</p>

<p>Im unteren Teil der Funktion Suchen() steht dann der Befehl:<br>
<code>document.all.Begriffe.object.Filter = Suchausdruck;</code><br>
Damit wird dem Parameter <code>Filter</code> des <code>&lt;object&gt;</code>-Tags der Suchausdruck zugewiesen, der zuvor ermittelt und in der Variablen <code>Suchausdruck</code> gespeichert wurde.</p>

<p>Der nächste Befehl ist ebenfalls von entscheidender Bedeutung:<br>
<code>document.all.Begriffe.Reset();</code><br>
Damit veranlassen Sie den Browser, die Anzahl der anzuzeigenden Datensätze neu zu ermitteln. Da mittlerweile ein Filter bestimmt wurde, findet der Browser nun nur noch Datensätze, die den Bedingungen des Filters entsprechen.</p>

<p>Auf die übrigen Anweisungen des Scripts und die Elemente in der HTML-Datei wird hier nicht näher eingegangen. Es handelt sich dabei um einfaches dynamisches HTML nach den Regeln des Internet Explorers 4.x.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="html_elemente">HTML-Elemente für die Anzeige von externen Daten</a></h2>

<p>Im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a> werden die externen Daten jeweils in einem <code>span</code>-Element angezeigt. Es gibt eine Reihe weiterer HTML-Elemente, in denen Sie Daten aus Datenfeldern externer Datenquellen anzeigen können. In anderen als diesen Elementen ist die Anzeige externer Daten nicht möglich. Folgende HTML-Elemente sind erlaubt:</p>

<h3 class="xmp">Verweise mit <code>&lt;a&gt;...&lt;/a&gt;</code>:</h3>

<p>Angenommen, Sie haben eine externe Textdatei <code>verweis.txt</code> mit folgenden Zeilen:<br>
<code>URL,Verweistext</code><br>
<code>http://de.yahoo.com/,Yahoo Suchdienst</code><br>
Diese Datei können Sie mit dem <code>object</code>-Element in HTML wie folgt einbinden:<br>
<code>&lt;object id="Verweis" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;</code><br>
 <code>&lt;param name="DataURL" value="verweis.txt"&gt;</code><br>
 <code>&lt;param name="UseHeader" value="true"&gt;</code><br>
 <code>&lt;param name="FieldDelim" value=","&gt;</code><br>
<code>&lt;/object&gt;</code><br>
Danach können Sie folgenden Verweis konstruieren:<br>
<code>&lt;a datasrc="#Verweis" datafld="URL"&gt;&lt;span datafld="Verweistext" datasrc="#Verweis"&gt;&lt;/span&gt;&lt;/a&gt;</code><br>
Indem Sie <code>&lt;a datafld="..."&gt;</code> notieren, wird der Inhalt, den das Datenfeld liefert, als Wert für das Attribut <code>href</code> bewertet (im Beispiel liefert das Feld <code>"URL"</code> diese Angaben). Innerhalb des Verweises wird dann mit Hilfe des <code>span</code>-Elements das andere Feld "geholt", nämlich der Verweistext. Solche Verweise machen beispielsweise Sinn, wenn Sie den gleichen Verweis an vielen verschiedenen Stellen auf Ihren Web-Seiten nutzen. Verweisziel und Verweistext sind dann zentral gespeichert und brauchen bei Änderungen nur in der kleinen Textdatei einmal geändert werden. Alle entsprechenden HTML-Verweise sind damit automatisch aktualisiert.</p>

<h3 class="xmp">Buttons mit <code>&lt;button&gt;...&lt;/button&gt;</code>:</h3>

<p>Angenommen, Sie haben eine externe Textdatei <code>daten.txt</code> mit folgendem Aufbau und Beispieleinträgen:<br>
<code>Zeile,Text</code><br>
<code>1,Das ist ein Test</code><br>
<code>2,mit einem Button</code><br>
<code>3,spannend - was?</code><br>
Diese Datei können Sie mit dem <code>object</code>-Element in HTML wie folgt einbinden:<br>
<code>&lt;object id="Daten" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;</code><br>
 <code>&lt;param name="DataURL" value="daten.txt"&gt;</code><br>
 <code>&lt;param name="UseHeader" value="true"&gt;</code><br>
 <code>&lt;param name="FieldDelim" value=","&gt;</code><br>
<code>&lt;/object&gt;</code><br>
Danach können Sie beispielsweise folgende Tabelle konstruieren:<br>
<code>&lt;table id="Anzeige" datasrc="#Daten" datapagesize="1"&gt;&lt;tr&gt;&lt;td&gt;</code><br>
<code>&lt;form action=""&gt;&lt;button datafld="Text" onclick="document.all.Anzeige.nextPage()"&gt;&lt;/button&gt;&lt;/form&gt;</code><br>
<code>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code><br>
Damit springt der Anwender bei jedem Klick auf den Button einen Datensatz weiter, und die Button-Beschriftung nimmt den aktuellen Wert des Datenfeldes <code>Text</code> an.</p>

<h3 class="xmp">Bereiche mit <code>&lt;div&gt;...&lt;/div&gt;</code>:</h3>

<p>Mit diesem HTML-Tag können Sie beispielsweise innerhalb einer Tabelle externe Daten ausgeben, genau so wie es im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a> mit dem <code>span</code>-Element gemacht wird. Der Unterschied zwischen <code>&lt;div&gt;...&lt;/div&gt;</code> und <code>&lt;span&gt;...&lt;/span&gt;</code> ist, dass das <code>div</code>-Element einen eigenen Anzeigeblock erzeugt, das <code>span</code>-Element dagegen nicht.</p>

<h3 class="xmp"><a class="an" name="a41">Grafiken mit <code>&lt;img&gt;</code>:</a></h3>

<p>Angenommen, Sie wollen eine kleine Dia-Show programmieren. Dazu können Sie eine Textdatei <code>daten.txt</code> anlegen, die etwa folgenden Aufbau hat:<br>
<code>Nummer,Bild</code><br>
<code>1,meinhaus.gif</code><br>
<code>2,meinboot.gif</code><br>
<code>3,meinauto.gif</code><br>
<code>4,undich.gif</code><br>
Diese Datei können Sie mit dem <code>object</code>-Element in HTML wie folgt einbinden:<br>
<code>&lt;object id="Daten" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;</code><br>
 <code>&lt;param name="DataURL" value="daten.txt"&gt;</code><br>
 <code>&lt;param name="UseHeader" value="true"&gt;</code><br>
 <code>&lt;param name="FieldDelim" value=","&gt;</code><br>
<code>&lt;/object&gt;</code><br>
Danach können Sie beispielsweise folgende Tabelle konstruieren:<br>
<code>&lt;table "id=Anzeige" datasrc="#Daten" datapagesize="1"&gt;&lt;tr&gt;</code><br>
<code>&lt;td&gt;</code><br>
<code>Bild &lt;span datafld="Nummer"&gt;&lt;/span&gt;&lt;br&gt;
&lt;input type=button value=" &amp;lt; "
onclick="document.all.Anzeige.previousPage();"&gt;</code><br>
<code>&lt;input type=button value=" &amp;gt; "
onclick="document.all.Anzeige.nextPage();"&gt;</code><br>
<code>&lt;/td&gt;&lt;td&gt;</code><br>
<code>&lt;img datafld="Bild"&gt;</code><br>
<code>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code><br>
Damit kann der Anwender mit den Blätterbuttons die Bilder durchblättern.
</p>

<h3 class="xmp">Frames mit <code>&lt;frame&gt;</code>:</h3>

<p>Angenommen, Sie haben eine externe Textdatei <code>besteseite.txt</code> mit folgenden Zeilen:<br>
<code>BesteSeite</code><br>
<code>http://de.selfhtml.org/</code><br>
Nun können Sie folgende HTML-Datei mit einem Frameset konstruieren:<br>
<code>&lt;html&gt;&lt;head&gt;</code><br>
<code>&lt;object id="UrlDerWoche" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;</code><br>
 <code>&lt;param name="DataURL" value="besteseite.txt"&gt;</code><br>
 <code>&lt;param name="UseHeader" value="true"&gt;</code><br>
<code>&lt;/object&gt;&lt;/head&gt;</code><br>
<code>&lt;frameset rows="100,*"&gt;</code><br>
<code>&nbsp;&lt;frame src="meine.htm"&gt;</code><br>
<code>&nbsp;&lt;frame datasrc="#UrlDerWoche" datafld="BesteSeite"&gt;</code><br>
<code>&lt;/frameset&gt;</code><br>
<code>&lt;/html&gt;</code><br>
Auf diese Weise können Sie in einem Frame-Fenster eine Seite anzeigen, deren Zieladresse Sie in der separaten Textdatei pflegen. Wichtig ist, dass Sie das <code>object</code>-Element genau an der Stelle platzieren wie im Beispiel.</p>

<h3 class="xmp">Eingebettete Frames mit <code>&lt;iframe&gt;</code>:</h3>

<p>Siehe das Beispiel bei Frames. Der Unterschied ist, dass Sie das <code>object</code>-Element in einer normalen HTML-Datei platzieren. Mit einem Befehl wie:<br>
<code>&nbsp;&lt;iframe datasrc="#UrlDerWoche" datafld="BesteSeite"&gt;&lt;/iframe&gt;</code><br>
können Sie dann in der gleichen HTML-Datei in einer eingebetteten Fensterbox den Inhalt der Seite anzeigen, die in der Textdatei angegeben ist.</p>

<h3 class="xmp">Labels mit <code>&lt;label&gt;...&lt;/label&gt;</code>:</h3>

<p>Das <code>label</code>-Element, das neu ist in HTML 4.0, erlaubt die Beschriftung eines Formularfeldes. Im Rahmen der Datenanbindung können Sie dieses HTML-Tag benutzen, wenn Sie die externen Daten in Formularfeldern ausgeben. Sie können dann dem <code>label</code>-Element, das Sie etwa einem Eingabefeld zuordnen, dynamisch den Feldnamen zuweisen, der in der externen Datendatei für dieses Feld definiert ist. Wenn sich der Feldname in der Datendatei dann ändert, wird er bei der Anzeige in der HTML-Datei automatisch aktualisiert. Beispiel:<br>
<code>&lt;label for="Vorname" datafld="prename"&gt;&lt;/label&gt;</code><br>
Dadurch wird dem Inhalt des <code>label</code>-Elements eines Formularfeldes der Feldname <code>prename</code> zugewiesen, der in der Datenbank definiert ist.</p>

<h3 class="xmp">Lauftexte mit <code>&lt;marquee&gt;...&lt;/marquee&gt;</code>:</h3>

<p>Mit diesem HTML-Element, das mittlerweile allerdings als Musterbeispiel proprietärer HTML-Erweiterungen verschrieen ist, können Sie beispielsweise innerhalb einer Tabelle externe Daten ausgeben, genau so wie es im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a> mit dem <code>span</code>-Element gemacht wird. Der Unterschied zwischen <code>&lt;marquee&gt;...&lt;/marquee&gt;</code> und <code>&lt;span&gt;...&lt;/span&gt;</code> ist, dass das <code>marquee</code>-Element einen Lauftext erzeugt, das <code>span</code>-Element dagegen nicht.</p>

<h3 class="xmp">Bereiche mit <code>&lt;span&gt;...&lt;/span&gt;</code>:</h3>

<p>Mit diesem HTML-Tag können Sie beispielsweise innerhalb einer Tabelle externe Daten ausgeben, genau so wie es im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a>.</p>

<h3 class="xmp">Formularfelder mit <code>&lt;input&gt;</code>:</h3>

<p>Mit diesem HTML-Element können Sie beispielsweise innerhalb einer Tabelle externe Daten in editierbaren Formularfeldern ausgeben. Das ist besonders dann interessant, wenn geänderte Daten auch tatsächlich in die Datenquelle zurückgeschrieben werden können. Bei einfachen Textdateien ist das derzeit nicht möglich, wohl aber beim <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#rds">Datenmodell: Remote Data Service (RDS)</a> und beim
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#jdbc">Datenmodell: JDBC DataSource Applet</a>.<br>
Die Einbindung in HTML erfolgt ähnlich wie im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a>, mit dem Unterschied, dass Sie die Regeln zum Einbinden des gewünschten Datenmodells beachten müssen. Notieren Sie im einleitenden <code>&lt;table&gt;</code>-Tag der Tabelle, in der Sie die Datensätze anzeigen, möglichst die Angabe <code>datapagesize="1"</code>. Innerhalb der Tabellenzelle, in der Sie externe Daten auf diese Weise anzeigen wollen, können Sie dann notieren (angenommene Beispiele):<br>
<code>&lt;input type="text" datafld="Vorname"&gt;</code><br>
oder:<br>
<code>&lt;input type="radio" name="Kunde" value="Bereits Kunde" datafld="BereitsKunde"&gt;</code><br>
oder:<br>
<code>&lt;input type="checkbox" name="Zahlweise" value="Mastercard" datafld="Zahlungsweise"&gt;</code><br>
Datenfelder, die in Eingabefeldern vom Typ <code>&lt;input type="text"&gt;</code> angezeigt werden, können normale Texte sein, wie etwa ein Name. Radio-Buttons und Checkboxen stellen dagegen andere Anforderungen. Ein Radio-Button wird bei der Anzeige dann aktiviert, wenn der aktuelle Feldinhalt in der Datenbank mit dem Wert des Attributs <code>value</code> übereinstimmt. Eine Checkbox wird dann markiert, wenn der betreffende Feldinhalt in der Datenbank 1, true oder einen beliebigen Inhalt mit mehr als einem Zeichen enthält. Wenn der Inhalt 0, false oder leer ist, wird die Checkbox nicht markiert.</p>

<h3 class="xmp">Formularfelder mit <code>&lt;select&gt;</code>:</h3>

<p>Dabei gelten die gleichen Bedingungen wie bei Formularfeldern vom Typ <code>input</code>. Wenn der Wert eines aktuellen Eintrags in der Datenbank mit einem der Werte übereinstimmt, die in der <code>value</code>-Angabe bei einem <code>option</code>-Element innerhalb der Auswahlliste definiert sind, ist diese Auswahl selektiert. Interessant ist diese Ausgabemöglichkeit von externen Daten wie bei anderen Formularfeldern nur, wenn auch ein Zurückschreiben geänderter Daten möglich ist. Bei Auswahllisten etwa kann ein neuer ausgewählter Wert als neuer Feldinhalt gespeichert werden. Der Internet Explorer unterstützt dabei nur die einfache Auswahl, Mehrfachauswahl nicht.</p>

<h3 class="xmp">Andere Objekte mit <code>&lt;object&gt;...&lt;/object&gt;</code>:</h3>

<p>Mit dem <code>object</code>-Element können Sie genau so arbeiten wie mit dem <code>img</code>-Element. Der Unterschied ist, dass Sie beim <code>img</code>-Element auf Grafiken beschränkt sind, während Sie mit dem <code>object</code>-Element beliebige Multimedia-Dateien oder ActiveX-Controls einbinden können. So können Sie, analog zu dem Beispiel beim <code>img</code>-Element, anstelle einer "Dia-Show" eine "Musik-Show" programmieren, die zum Beispiel aus MIDI-Dateien besteht.<br>
In der externen Textdatei notieren Sie die gewünschten MIDI-Dateien, und bei der Einbindung in HTML können Sie dann anstelle der Datenanbindung mit <code>img</code> so etwas notieren wie:<br>
<code>&lt;object datafld="Musik" width="0" height="0"&gt;&lt;/object&gt;</code><br>
(wobei "Musik" in der Textdatei mit den Daten als Feldüberschrift notiert sein muss).</p>

<h3 class="xmp">Java-Applets mit <code>&lt;applet&gt;...&lt;/applet&gt;</code>:</h3>

<p>Sie können das Feature der Datenanbindung nutzen, um einen Parameter eines Java-Applets aus einer externen Datenquelle zu versorgen. Beispiel:<br>
<code>&lt;applet code="verzerr.class"&gt;</code><br>
<code>&nbsp;&lt;param name="bild" datasrc="#aktuell" datafld="b_gates_bild"&gt;</code><br>
<code>&lt;/applet&gt;</code></p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="tdc">Datenmodell: Tabular Data Control (TDC)</a></h2>

<p>Dies ist das Datenmodell, wenn die externe Datenquelle eine einfache Textdatei ist, die in jeder Zeile einen Datensatz enthält, und bei der die einzelnen Datenfelder der Datensätze durch ein Begrenzerzeichen, zum Beispiel ein Komma, markiert sind. Geeignet ist dieses Datenmodell für kleinere Datenbestände mit bis zu ein paar tausend Datensätzen. Ein vollständiges Beispiel dafür finden Sie weiter oben im Abschnitt <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a>. Um eine solche Datenquelle an eine HTML-Datei anzubinden, müssen Sie folgendes Objekt in der HTML-Datei notieren:</p>

<h3 class="xmp">Schema zur Einbindung in HTML:</h3>

<pre>
&lt;object id="Objektname" classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"&gt;
 &lt;param name= value=&gt;
 &lt;!-- usw. weitere Parameter --&gt;
&lt;/object&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Um solche Daten einzubinden, verwenden Sie das im Internet Explorer 4.x eingebaute ActiveX-Control mit der ID 333C7BC4-460F-11D0-BC04-0080C7055A83. Innerhalb des <code>&lt;object&gt;</code>-Tags notieren Sie verschiedene Parameter, die für die Datenpräsentation wichtig sind. Folgende Parameter sind erlaubt:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th>Notation</th>
<th>Bedeutung</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="AppendData" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie angeben, ob in der Ausgabetabelle beim Blättern für jedes neue Datensatz-Set (entsprechend der Größe von <code>datapagesize</code> die vorhandenen Tabellenzellen überschrieben werden sollen, oder ob neue Tabellenzellen angehängt werden sollen. Mit <code>value=true</code> erzwingen Sie das Anhängen von Daten. Per Voreinstellung werden die vorhandenen Tabellenzellen überschrieben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="CaseSensitive" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie angeben, ob bei Vergleichen von Anwendereingaben mit Daten aus der Datenquelle Groß-/Kleinschreibung unterschieden werden soll. Nur interessant bei der Weiterverarbeitung von Daten mit Scripts. Per Voreinstellung wird Groß-/Kleinschreibung unterschieden. Mit <code>value="false"</code> können Sie die Fallunterscheidung ausschalten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="CharSet" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie die Kodierung angeben, die für die Daten in der Datendatei maßgeblich ist. Per Voreinstellung ist das die Kodierung ISO-8859-1. Verwenden Sie diesen Parameter nur, wenn die Daten anders kodiert sind, z.B. ISO-8859-5 für Kyrillisch verewnden. Im <code>value</code>-Attribut können Sie den Namen der Kodierung angeben. Nähere Informationen im Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../inter/zeichenkodierungen.htm">Zeichenkodierungen</a>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="DataURL" value=&gt;</code></td>
<td class="tabxpl">Dieser Parameter ist unbedingt erforderlich. Im <code>value</code>-Attribut geben Sie die Datei an, in der sich die Daten befinden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="EscapeChar" value=&gt;</code></td>
<td class="tabxpl">Diesen Parameter sollten Sie angeben, wenn in Ihrer Datendatei ein Zeichen als Maskierungszeichen verwendet wird. Das ist z.B. der Fall, wenn Sie in einer kommabegrenzten Datei Kommata innerhalb von Feldern mit einem vorangestellten Backslash \ maskieren. Geben Sie in diesem Fall im <code>value</code>-Attribut das Maskierungszeichen an.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="FieldDelim" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie an, welches Zeichen als Trennzeichen für Datenfelder innerhalb einer Zeile der externen Textdatei interpretiert werden soll. Im <code>value</code>-Attribut können Sie das Zeichen angeben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="Filter" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie die Datenauswahl einschränken. Per Voreinstellung werden alle Daten aus der externen Datei angezeigt. Interessant ist dieser Parameter vor allem, wenn der Anwender in einem Eingabeformular die Suche selbst definieren kann, und die Eingaben dann mit Hilfe eines Scripts dynamisch diesem Parameter des <code>&lt;object&gt;</code>-Tags zugewiesen werden. Im <code>value</code>-Attribut können Sie den Filter angeben. Beispiele:<br>
<code>value="Telefon &lt;&gt; '089*'"</code> findet in einem Feld "Telefon" nur Nummern, die mit 089 beginnen.<br>
<code>value="PLZ &gt; '50000'"</code> findet in einem Feld "PLZ" für Postleitzahlen nur Werte, die größer als 50000 sind.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="Language" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie die Sprache angeben, in der die Daten der externen Datendatei vorliegen. Maßgeblich sind dafür die Sprachennamen, wie sie in ISO 369 definiert sind. Im <code>value</code>-Attribut können Sie die Sprache angeben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="RowDelim" value=&gt;</code></td>
<td class="tabxpl">Wenn Ihre externe Datendatei so aufgebaut ist, dass am Ende eines Datensatzes ein Datensatzbegrenzerzeichen steht, müssen Sie dieses Zeichen mit diesem Parameter angeben. Notieren Sie im Attribut <code>value</code> das Zeichen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="Sort" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie veranlassen, dass bei gleichzeitiger Ausgabe mehrerer Datensätze (also bei <code>datapagesize</code> größer 1) die angezeigten Datensätze nach einem bestimmten Feld sortiert werden. Beispiele:<br>
<code>value="PLZ"</code> sortiert auszugebende Daten nach einem Feld namens "PLZ".<br>
<code>value="-PLZ"</code> sortiert auszugebende Daten nach einem Feld namens "PLZ", und zwar absteigend (Minuszeichen davor).<br><code>value="Name; PLZ"</code> sortiert auszugebende Daten erstens nach Name und zweitens nach Postleitzahlen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="TextQualifier" value=&gt;</code></td>
<td class="tabxpl">Wenn Ihre externe Datendatei so aufgebaut ist, dass alle Datenfelder in bestimmte Zeichen eingeschlossen sind, zum Beispiel in Anführungszeichen, dann sollten Sie mit diesem Parameter das betreffende Zeichen angeben. Mit <code>value="'"'"</code> etwa bestimmen Sie das Anführungszeichen als Zeichen für Feldanfang und Feldende.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="UseHeader" value=&gt;</code></td>
<td class="tabxpl">Diesen Parameter müssen Sie dann angeben, wenn die erste Zeile der externen Datendatei keine Daten enthält, sondern die zugehörigen Feldnamen. Mit <code>value="true"</code> wird die Datendatei so interpretiert, dass die erste Zeile Feldnamen enthält. Mit <code>value="false"</code> wird sie so interpretiert, dass gleich in der ersten Zeile die Daten beginnen.</td>
</tr>
</table>
<br>&nbsp;



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="rds">Datenmodell: Remote Data Service (RDS)</a></h2>

<p>Über das Datenmodell Remote Data Service (RDS) können Sie die Anbindung einer HTML-Datei an Daten aus einer Datenbank realisieren. Geeignet ist dieses Modell für Datenbanken, die über die Datenbank-Schnittstellen OLE-DB oder ODBC (DBMS) verfügen. Das sind beispielsweise MS Access, Oracle oder SQL-Server wie msql. Über die entsprechenden Produkte und den Aufbau von Datenbanken damit informieren Sie sich bitte bei den betreffenden Herstellern. Um eine solche Datenanbindung im WWW zu realisieren, muss die Datenbankanwendung auf dem Server-Rechner installiert sein. Fragen Sie dazu gegebenenfalls Ihren Provider.</p>

<p>Um eine solche Datenquelle an eine HTML-Datei anzubinden, müssen Sie folgendes Objekt in der HTML-Datei notieren:</p>

<h3 class="xmp">Schema zur Einbindung in HTML:</h3>

<pre>
&lt;object id="Objektname" classid="clsid:BD96C556-65A3-11D0-983A-00C04FC29E33"&gt;
 &lt;param name= value=&gt;
 &lt;!-- usw. weitere Parameter --&gt;
&lt;/object&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Um solche Daten einzubinden, verwenden Sie das im Internet Explorer 4.x eingebaute ActiveX-Control mit der ID BD96C556-65A3-11D0-983A-00C04FC29E33. Innerhalb des <code>&lt;object&gt;</code>-Tags notieren Sie verschiedene Parameter, die für die Datenpräsentation wichtig sind. Folgende Parameter sind möglich:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th>Notation</th>
<th>Bedeutung</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="AppendData" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie angeben, ob in der Ausgabetabelle beim Blättern für jedes neue Datensatz-Set (entsprechend der Größe von <code>datapagesize</code>) die vorhandenen Tabellenzellen überschrieben werden sollen, oder ob neue Tabellenzellen angehängt werden sollen. Mit <code>value="true"</code> erzwingen Sie das Anhängen von Daten. Per Voreinstellung werden die vorhandenen Tabellenzellen überschrieben.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="CaseSensitive" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie angeben, ob bei Vergleichen von Anwendereingaben mit Daten aus der Datenquelle Groß-/Kleinschreibung unterschieden werden soll. Nur interessant bei der Weiterverarbeitung von Daten mit Scripts. Per Voreinstellung wird Groß-/Kleinschreibung unterschieden. Mit <code>value=false</code> können Sie die Fallunterscheidung ausschalten.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="CharSet" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie die Kodierung angeben, die für die Daten in der Datendatei maßgeblich ist. Per Voreinstellung ist das die Kodierung ISO-8859-1. Verwenden Sie diesen Parameter nur, wenn die Daten anders kodiert sind, z.B. ISO-8859-5 für Kyrillisch verewnden. Im <code>value</code>-Attribut können Sie den Namen der Kodierung angeben. Nähere Informationen im Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../inter/zeichenkodierungen.htm">Zeichenkodierungen</a>.</td>
</tr>
</table>

<h3 class="inf"><a class="an" name="rds_hinweis">Beachten Sie:</a></h3>

<p>Solche Datenanbindungen sind nur sinnvoll, wenn Sie dem Anwender ein HTML-Formular zur Verfügung stellen, in dem er seine Angaben zum Durchsuchen der Datenbank machen kann. Mit Hilfe eines JavaScripts können Sie dann die Anwendereingaben in einen gültigen SQL-Befehl umwandeln, den Sie im Script dem Parameter <code>SQL</code> des <code>object</code>-Tags zuweisen. So können Sie beispielsweise mit der JavaScript-Anweisung:<br>
<code>document.all.Datenbank.SQL = Abfrage;</code><br>
eine SQL-Abfrage zuordnen. In diesem Beispiel ist <code>"Datenbank"</code> der Name, der beim <code>object</code>-Tag mit dem <code>id</code>-Attribut vergeben wird, und <code>Abfrage</code> ist eine Variable, die zuvor aus Formulareingaben des Anwenders einen SQL-Befehl kreiert hat. Bei solchen Datenbanken ist es auch möglich, SQL-Befehle zum Schreiben von geänderten Datensätzen in die Datenbank  zurückzuschreiben. Voraussetzung ist, dass die Daten in der HTML-Datei in editierbaren HTML-Eingabefeldern (z.B. <code>&lt;input...&gt;</code>) angezeigt werden.</p>
<p>Ausführliche Informationen zum Einrichten und Realisieren einer Datenbank mit Scripts finden Sie auf den <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://msdn.microsoft.com/">Entwicklerseiten von Microsoft</a>. Suchen Sie dort nach <var>Microsoft Internet Client SDK</var>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="jdbc">Datenmodell: JDBC DataSource Applet</a></h2>

<p>Das Datenmodell JDBC DataSource Applet greift ebenso wie das Datenmodell <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#rds">Datenmodell: Remote Data Service (RDS)</a> auf Datenbanken zu, die über die Datenbank-Schnittstellen OLE-DB oder ODBC (DBMS) verfügen, zum Beispiel MS Access, Oracle oder SQL-Server wie msql. Der Unterschied zwischen dem JDBC DataSource Applet und dem Remote Data Service (RDS) ist, dass letzterer in der HTML-Datei als ActiveX-Control eingebunden wird, während das JDBC DataSource Applet ein Java-Applet ist. Damit will Microsoft seine Datenanbindungs-Technologie anderen Browsern zur Verfügung stellen, die kein ActiveX unterstützen, wohl aber Java. Das tun zwar Netscape und einige andere Browser, doch solange diese das Konzept der Datenanbindung mit Dynamischem HTML nicht unterstützen, hat das Ganze eigentlich wenig Sinn.</p>

<p>Das Java-Applet, das diese Form der Datenanbindung steuert, gehört nicht zum Lieferumfang des Internet Explorers. Auf den <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://www.microsoft.com/">Web-Seiten von Microsoft</a> können Sie das JDBC DataSource Applet downloaden. Suchen Sie dort auf den Seiten nach <var>JDBC DataSource Applet</var>.</p>

<p>Um eine solche Datenanbindung im WWW zu realisieren, muss die Datenbankanwendung auf dem Server-Rechner installiert sein. Fragen Sie dazu gegebenenfalls Ihren Provider.</p>

<p>Um eine solche Datenquelle an eine HTML-Datei anzubinden, müssen Sie das JDBC DataSource Java-Applet in der HTML-Datei notieren.</p>

<h3 class="xmp">Schema zur Einbindung in HTML:</h3>

<pre>
&lt;applet code="JDC.class" name="DSA1" id="DSA1" width="0" height="0"&gt;
 &lt;param name= value=&gt;
 &lt;!-- usw. weitere Parameter --&gt;
&lt;/applet&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Java-Applet wird wie in HTML üblich mit dem <code>&lt;applet&gt;</code>-Tag eingebunden. Mit dem Attribut <code>code</code> geben Sie die ausführbare Java-Datei an. Dies ist die Datei <code>JDC.class</code>, die Sie mit dem Download des JDBC DataSource Java-Applets erhalten. Innerhalb des Applets notieren Sie verschiedene Parameter, die das Applet benötigt, um korrekt zu arbeiten. Weiterführende Infos zu den Parametern entnehmen Sie der Original-Dokumentation zu dem Applet. Folgende Parameter erwartet das Applet:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th>Notation</th>
<th>Bedeutung</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="cabbase" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie die Datei an, in der der Quellcode des Applets steht. Es handelt sich um eine CAB-Datei. Relative Pfadnamen oder auch absolute Adressen sind dabei erlaubt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="dbURL" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie im <code>value</code>-Attribut die Datei an, in der die Datenbank gespeichert ist. Relative Pfadnamen oder auch absolute Adressen sind dabei erlaubt.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="showUI" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie an, ob das Applet innerhalb der HTML-Datei seine eigene Benutzeroberfläche anzeigen soll oder nicht. Mit <code>value="true"</code> wird das Applet angezeigt, mit <code>value="false"</code> nicht. Der Parameter ist optional.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="sqlStatement" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter müssen Sie einen Befehl angeben, den Sie zum Ansprechen der Datenbank absetzen wollen. Dies kann ein beliebiger gültiger SQL-Befehl sein. SQL (Structured Query Language) ist eine standardisierte Datenbankabfragesprache. Diese Sprache und ihre Befehle müssen Sie kennen, um den Parameter mit korrekten Werten zu versorgen.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="allowInsert" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie an, ob der Anwender Datensätze durch Ausfüllen entsprechender Eingabefelder neue Datensätze in die Datenbank schreiben darf. Mit <code>value="true"</code> erlauben Sie das Hinzufügen von Daten, mit <code>value="false"</code> verbieten Sie es.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="allowDelete" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie an, ob der Anwender angezeigte Datensätze mit Hilfe entsprechender Befehlsbuttons aus der Datenbank löschen darf. Mit <code>value="true"</code> erlauben Sie das Löschen von Daten, mit <code>value="false"</code> verbieten Sie es.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="allowUpdate" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter geben Sie an, ob der Anwender angezeigte Datensätze in entsprechenden Eingabefeldern editieren und geänderte Daten mit Hilfe entsprechender Befehlsbuttons in die Datenbank zurückschreiben darf. Mit <code>value="true"</code> erlauben Sie das Ändern von Daten, mit <code>value="false"</code> verbieten Sie es.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="user" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie der Datenbank im <code>value</code>-Attribut den Namen eines angemeldeten Users übergeben, sofern die Datenbank dies verlangt. Der Parameter ist optional.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>&lt;param name="password" value=&gt;</code></td>
<td class="tabxpl">Mit diesem Parameter können Sie der Datenbank im <code>value</code>-Attribut das Passwort des Users übergeben, sofern die Datenbank dies verlangt. Der Parameter ist optional.</td>
</tr>
</table>

<h3 class="inf">Beachten Sie:</h3>

<p>Beim Datenmodell JDBC DataSource Applet gelten die <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#rds">Anmerkungen zum Datenmodell Remote Data Service (RDS)</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="xml">Datenmodell: XML Data Source</a></h2>

<p>Das Datenmodell XML Data Source könnte in Zukunft sehr  interessant werden, da es die vom W3-Konsortium standardisierte Sprache XML zur Definition von Daten benutzt. Bei diesem Datenmodell werden die Daten in einer XML-Datei gespeichert. Für Datensätze und Datenfelder können Sie innerhalb der XML-Datei eigene Tags und deren Verschachtelung erfinden. Ein denkbares Schema für eine Adressendatei wäre etwa:<br> <code>&lt;adresse&gt;</code><br>
<code>&nbsp;&lt;name&gt;Meyer&lt;/name&gt;</code><br>
<code>&nbsp;&lt;vorname&gt;Hubert&lt;/vorname&gt;</code><br>
<code>&nbsp;&lt;ort&gt;Hamburg&lt;/ort&gt;</code><br>
<code>&nbsp;&lt;telefon&gt;040-598487374&lt;/telefon&gt;</code><br>
<code>&lt;/adresse&gt;</code><br>
Die Datei muss den Konventionen zum Aufbau einer XML-Datei entsprechen. Lesen Sie dazu das Kapitel über <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../xml/index.htm">XML/DTDs</a>.</p>

<p>Im Lieferumfang des Internet Explorers 4.x ist ein Java-Applet enthalten, das solche Tag-Strukturen aus XML-Dateien interpretiert und die Datenstruktur daraus ermittelt.</p>

<p>Um diese Art von Datenquelle an eine HTML-Datei anzubinden, müssen Sie das zugehörige Java-Applet in der HTML-Datei notieren.</p>

<h3 class="xmp">Schema zur Einbindung in HTML:</h3>

<pre>
&lt;applet code="com.ms.xml.dso.xmldso.class" id="xmldso" width="0" height="0" mayscript="true"&gt;
 &lt;param name="url" value="datei.xml"&gt;
&lt;/applet&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Java-Applet wird wie in HTML üblich mit dem <code>&lt;applet&gt;</code>-Tag eingebunden. Notieren Sie das einleitende <code>&lt;applet&gt;</code>-Tag genau so wie im obigen Schema. Der Grund für den ungewöhnlichen Wert des Attributs <code>code</code> ist, dass dieses Java-Applet eine interne Ressource des Internet Explorers ist und keine separat vorliegende Datei.</p>

<p>Das Applet erwartet genau einen Parameter:<br>
Mit <code>&lt;param name="url" value="datei.xml"&gt;</code> geben Sie im Attribut <code>value</code> den Dateinamen der XML-Datei an. Dabei sind natürlich auch relative Pfadangaben oder absolute Adressen erlaubt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0">&nbsp;<a class="an" name="mshtml">Datenmodell: MSHTML Data Source</a></h2>

<p>Was Sie mit XML besonders elegant lösen können, geht etwas weniger elegant auch mit HTML selbst: hinter dem Datenmodell MSHTML Data Source verbirgt sich nichts anderes als eine Konvention, nach der die Daten in einer HTML-Datei gehalten werden - diese HTML-Datei dient dann als externe Quelle für eine andere HTML-Datei, in der die Daten angezeigt werden. Ein Schema für den Datensatz einer Adressendatei wäre etwa:<br>
<code>&lt;div id="Adresse"&gt;</code><br>
<code>&nbsp;&lt;span id="Name"&gt;Meyer&lt;/span&gt;&lt;br&gt;</code><br>
<code>&nbsp;&lt;span id="Vorname"&gt;Hubert&lt;/span&gt;&lt;br&gt;</code><br>
<code>&nbsp;&lt;span id="Ort"&gt;Hamburg&lt;/span&gt;&lt;br&gt;</code><br>
<code>&nbsp;&lt;span id="Telefon"&gt;040-598487374&lt;/span&gt;&lt;br&gt;</code><br>
<code>&lt;/div&gt;</code><br></p>

<p>Um diese Art von Datenquelle an eine HTML-Datei anzubinden, müssen Sie ein einfaches Objekt dafür notieren.</p>

<h3 class="xmp">Schema zur Einbindung in HTML:</h3>

<pre>
&lt;object id="Daten" data="daten.htm" width="0" height="0"&gt;
&lt;/object&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Innerhalb des <code>&lt;object&gt;</code>-Tags vergeben Sie mit dem <code>id</code>-Attribut wie üblich einen Namen, unter dem Sie das Objekt ansprechen und die Daten aus der anderen Datei in einer Tabelle dynamisch anzeigen können. Das Zugreifen auf die Datensätze funktioniert dabei genau so wie im <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#tabelle">Beispiel: Datei dynamisch in Tabelle einbinden</a>. Im Attribut <code>datafld</code> geben Sie den Namen an, den Sie in der externen HTML-Datei im <code>id</code>-Attribut für jedes gleiche Feld eines Datensatzes vergeben haben, z.B. <code>"Vorname"</code>.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="dynamische_filter.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="dynamische_filter.htm">Dynamische Filter (nur Microsoft)</a>
</td></tr>
<tr>
<td class="doc"><a href="netscape.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="netscape.htm">Das ältere DHTML-Modell von Netscape</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Dynamisches HTML</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">DHTML-Modelle</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
