<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: JavaScript / Objektreferenz / window</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Welche Aufgaben, Eigenschaften und Methoden das window-Objekt in JavaScript hat.">
<meta name="keywords"       content="SELFHTML, JavaScript, Objekte, window, closed, defaultStatus, innerHeight, innerWidth, locationbar, menubar, name, outerHeight, outerWidth, pageXOffset, pageYOffset, personalbar, scrollbars, statusbar, status, toolbar, alert, back, blur, captureEvents, clearInterval, clearTimeout, close, confirm, disableExternalCapture, enableExternalCapture, find, focus, forward, handleEvent, home, moveBy, moveTo, open, print, prompt, releaseEvents, resizeBy, resizeTo, routeEvent, scrollBy, scrollTo, setInterval, setTimeout, stop">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-13T19:14:10+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/javascript/objekte/window.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Objektreferenz" href="index.htm">
<link rel="next" title="frames" href="frames.htm">
<link rel="prev" title="Hinweise zur JavaScript-Objektreferenz" href="hinweise.htm">
<link rel="first" title="Hinweise zur JavaScript-Objektreferenz" href="hinweise.htm">
<link rel="last" title="Objektunabhängige Funktionen" href="unabhaengig.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">JavaScript/DOM</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Objektreferenz</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">window</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeines">window: Allgemeines zur Verwendung</a>
</p>

<h3>Eigenschaften:</h3>

<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#closed">closed</a> (geschlossenes Fenster)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#default_status">defaultStatus</a> (Normalanzeige in der Statuszeile)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#inner_height">innerHeight</a> (Höhe des Anzeigebereichs)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#inner_width">innerWidth</a> (Breite des Anzeigebereichs)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#locationbar">locationbar</a> (Adresszeile)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#menubar">menubar</a> (Menüleiste)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#name">name</a> (Fenstername)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_height">outerHeight</a> (Höhe des gesamten Fensters)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_width">outerWidth</a> (Breite des gesamten Fensters)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#page_x_offset">pageXOffset</a> (Fensterstartposition von links)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#page_y_offset">pageYOffset</a> (Fensterstartposition von oben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#personalbar">personalbar</a> (Zeile für Lieblingsadressen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scrollbars">scrollbars</a> (Scroll-Leisten)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#statusbar">statusbar</a> (Statuszeile)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#status">status</a> (Inhalt der Statuszeile)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#toolbar">toolbar</a> (Werkzeugleiste)<br>
</p>

<h3>Methoden:</h3>

<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> (Dialogfenster mit Infos)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#back">back()</a> (zurück in History)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#blur">blur()</a> (Fenster verlassen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#capture_events">captureEvents()</a> (Ereignisse überwachen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#clear_interval">clearInterval()</a> (zeitliche Anweisungsfolge abbrechen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#clear_timeout">clearTimeout()</a> (Timeout abbrechen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#close">close()</a> (Fenster schließen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#confirm">confirm()</a> (Dialogfenster zum Bestätigen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#disable_external_capture">disableExternalCapture()</a> (Fremdüberwachung verhindern)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#enable_external_capture">enableExternalCapture()</a> (Fremdüberwachung erlauben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#find">find()</a> (Text suchen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#focus">focus()</a> (Fenster aktiv machen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#forward">forward()</a> (vorwärts in History)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#handle_event">handleEvent()</a> (Ereignis übergeben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#home">home()</a> (Startseite aufrufen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#move_by">moveBy()</a> (bewegen mit relativen Angaben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#move_to">moveTo()</a> (bewegen mit absoluten Angaben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">open()</a> (neues Fenster öffnen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#print">print()</a> (ausdrucken)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#prompt">prompt()</a> (Dialogfenster für Werteingabe)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#release_events">releaseEvents()</a> (Ereignisse abschließen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#resize_by">resizeBy()</a> (Größe verändern mit relativen Angaben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#resize_to">resizeTo()</a> (Größe verändern mit absoluten Angaben)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#route_event">routeEvent()</a> (Event-Handler-Hierarchie durchlaufen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_by">scrollBy()</a> (Scrollen um Anzahl Pixel)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_to">scrollTo()</a> (Scrollen zu Position)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_interval">setInterval()</a> (zeitliche Anweisungsfolge setzen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_timeout">setTimeout()</a> (Timeout setzen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#stop">stop()</a> (abbrechen)<br>
</p>

<h3>Unterobjekte:</h3>

<p>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a><br>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="event.htm">event</a><br>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="history.htm">history</a><br>
<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="location.htm">location</a><br>
</p>

</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="allgemeines">window: Allgemeines zur Verwendung</a></h2>

<p>Das Objekt <code>window</code> (<i>Fenster</i>) ist das oberste Objekt der Objektfamilie für alles, was im Browser-Fenster angezeigt wird. Über das Objekt <code>window</code> können Sie das Dokumentfenster abfragen und kontrollieren. Ferner können Sie neue Fenster definieren. Dabei können Sie auch die Fenstereigenschaften frei bestimmen.</p>

<p>Das aktuelle Fenster des Web-Browsers können Sie über die Objekte <code>window</code> oder <code>self</code> ansprechen. Auf die Objekte <code>window</code> und <code>self</code> lassen sich alle Eigenschaften und Methoden des window-Objekts anwenden.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
window.defaultStatus = "Meine Homepage";
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel belegt die ständige Anzeige der Statuszeile des aktuellen Anzeigefensters mit dem Wert <code>"Meine Homepage"</code>. Dazu wird die Fenstereigenschaft <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#default_status">defaultStatus</a> aufgerufen.</p>

<p><code>window</code> oder <code>self</code> können auch weggelassen werden. So hat <code>window.moveTo(200,100)</code> die gleiche Wirkung wie <code>moveTo(200,100)</code>. Der Übersichtlichkeit halber ist es jedoch besser, den vordefinierten Objektnamen mit anzugeben.</p>

<p>Auch Frame-Fenster innerhalb eines Frame-Sets stellen aus Sicht von JavaScript eigene Fenster dar. Lesen Sie dazu jedoch den Abschnitt über das Objekt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="frames.htm">frames</a>.</p>

<p>Sie können mit Hilfe von JavaScript nicht nur vorhandene Fenster ansprechen, sondern auch neue Fenster erzeugen und diese mit Hilfe von Variablen ansprechen.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function FensterOeffnen (Adresse) {
  MeinFenster = window.open(Adresse, "Zweitfenster", "width=300,height=200,scrollbars=yes");
  MeinFenster.focus();
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="datei2.htm" onclick="FensterOeffnen(this.href); return false"&gt;Neues Fenster&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Die Beispieldatei enthält einen Verweis. Beim Anklicken dieses Verweises wird die JavaScript-Funktion <code>FensterOeffnen()</code> aufgerufen. Diese Funktion öffnet ein neues, kleines Browser-Fenster und zeigt darin die Datei <var>datei2.htm</var> an. Eine genauere Erklärung sowie weitere Einzelheiten zum Öffnen neuer Fenster werden bei der Methode <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">open()</a> beschrieben. Ein solches Fenster ist nach dem Erzeugen mit der Variablen ansprechbar, in der die Fensterinstanz gespeichert ist. Im Beispiel ist das die Variable <code>MeinFenster</code>. Über diesen Instanznamen können Sie alle Eigenschaften und Methoden des erzeugten Fensters ansprechen.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;a href="javascript:MeinFenster.close()"&gt;Fenster zumachen&lt;/a&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird das zuvor geöffnete Fenster beim Klicken auf den Verweis wieder geschlossen. Zuständig dafür ist die Methode <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#close">close()</a>. Das Fenster wird dabei mit seinem Instanznamen angesprochen, im Beispiel also mit dem Namen der Variablen <code>MeinFenster</code>, mit der es zuvor erzeugt wurde.</p>

<p>Bei der Variablen <code>MeinFenster</code> handelt es sich um eine globale Variable. Diese wurde erzeugt durch eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/variablen.htm#definieren">Deklaration der Variablen</a> ohne das Schlüsselwort <code>var</code>. Die Deklaration als globale Variable ermöglicht es Ihnen, dieses Fenster auch außerhalb der erzeugenden Funktion anzusprechen.</p>

<p>Genau so, wie Sie vom Hauptfenster auf ein mit <code>open()</code> erzeugtes Zweitfenster zugreifen können, können Sie aus einem solchen Zweitfenster auf das Hauptfenster zugreifen. Dazu gibt es das Fensterobjekt <code>opener</code>. Damit wird das Fenster angesprochen, von dem aus das aktuelle Fenster geöffnet wurde. Über das Objekt <code>opener</code> können Sie alle Eigenschaften und Methoden des öffnenden Fensters ansprechen.</p>

<h3 class="xmp">Testbeispiel (im Zweitfenster):</h3>

<pre>
&lt;a href="javascript:opener.close()"&gt;Hauptfenster zumachen&lt;/a&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Notieren Sie nach <code>opener</code> einen Punkt und danach die gewünschte Methode oder Eigenschaft.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js11.gif" width="30" height="30" alt="JavaScript 1.1" title="JavaScript 1.1"><img src="../../src/netsc3.gif" width="30" height="30" alt="Netscape 3.0" title="Netscape 3.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="closed">closed</a></h2>

<p>Speichert, ob ein Fenster, das zum Beispiel mit <code>open()</code> neu geöffnet wurde, mittlerweile geschlossen wurde. Hat den Wert <code>true</code>, wenn das Fenster geschlossen wurde. Sinnvoll, um die Existenz eines Fensters abzufragen, bevor Anweisungen zum Verändern eines Fensters folgen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_closed.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var InfoWin = window.open("datei1.htm", "Zweitfenster");
function CheckOpen () {
  if (InfoWin.closed == true) {
    alert("Fenster wurde geschlossen");
  } else {
    alert("Fenster noch offen");
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:CheckOpen()"&gt;Fenster zu?&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel lädt beim Einlesen ein Zweitfenster mit einer anderen Datei <code>datei1.htm</code>. Beim Klicken auf den Verweis wird eine Funktion <code>CheckOpen()</code> aufgerufen, die ausgibt, ob das andere Fenster noch offen ist oder nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="default_status">defaultStatus</a></h2>

<p>Speichert den Inhalt der Statuszeile, der solange angezeigt wird, wie kein besonderes Ereignis eintritt (etwa das Überfahren eines Verweises mit der Maus).</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_default_status.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
window.defaultStatus = "Helmuts Homepage";
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;Achten Sie auf die Statuszeile&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel belegt beim Einlesen der Datei die normale Anzeige der Statuszeile mit dem Wert <code>Helmuts Homepage</code>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Konqueror setzt die Wertzuweisung im Beispiel prinzipiell um, überschreibt aber kurze Zeit später den Text wieder mit "Seite geladen". Die Zuweisung muss daher nach dem Laden der Seite erfolgen, damit der Text in der Statuszeile dauerhaft bleibt. Safari entfernt den Statustext nach Bewegen des Mauszeigers. Beachten Sie ferner, dass Konqueror, Firefox und Opera Einstellungen anbieten, die das Beschreiben der Statusleiste für Scripte unmöglich machen.</p>


<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="inner_height">innerHeight</a></h2>

<p>Speichert die Höhe des Anzeigebereichs eines Fensters.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_inner_height.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
window.innerHeight = 300;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel setzt beim Einlesen der Datei den Anzeigebereich des Fensters auf eine Höhe von 300 Pixel fest.</p>

<p>Beachten Sie beim Neufestsetzen der Fensterhöhe die Bildschirmgröße. Diese können Sie mit dem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="screen.htm">screen</a>-Objekt ermitteln. Beachten Sie auch, dass der Anzeigebereich eines Fensters um einiges kleiner sein muss als das Fenster selbst, da das Fenster in der Regel noch Elemente wie Titelleiste, Menüleiste usw. enthält. Die absolute Höhe eines Fensters können Sie mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_height">outerHeight</a> auslesen bzw. setzen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Unter Opera, Konqueror und Safari können Sie die Eigenschaft <code>innerHeight</code> nur auslesen, jedoch nicht setzen.</p>

<p>Im Internet Explorer können Sie mit <code>document.body.clientHeight</code> die innere Fensterhöhe bestimmen. Wenn Sie eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/allgemein/grundgeruest.htm#dokumenttyp">Dokumenttyp-Deklaration einsetzen</a>, die im Internet Explorer 6 den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/box_modell.htm#standardkonform">standardkonformen Modus</a> auslöst, müssen Sie
<code>document.documentElement.clientHeight</code> statt <code>document.body.clientHeight</code> verwenden. Zu diesem Zeitpunkt muss jedoch das <code>body</code>- bzw. <code>html</code>-Element bereits vorhanden sein, d.h. es ist sinnvoll, die Ermittlung dieser Eigenschaften vom Event-Handler <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm#onload">onload</a> abhängig zu machen.<br>
Ein fertiges Script zum Auslesen der Größe des Anzeigebereichs des Fensters, das alle Browser und Anzeigemodi berücksichtigt, finden Sie auf <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a href="http://www.quirksmode.org/viewport/compatibility.html#link2">quirksmode.org</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="inner_width">innerWidth</a></h2>

<p>Speichert die Breite des Anzeigebereichs eines Fensters. Sehr gut geeignet in Verbindung mit absolutem Positionieren von Elementen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_inner_width.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function BreiteFestlegen () {
  window.innerWidth = document.Eingabe.Feld.value;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form name="Eingabe" action=""&gt;
&lt;input type="text" name="Feld"&gt;
&lt;input type="button" value="Test" onclick="BreiteFestlegen()"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel erlaubt es, in einem Eingabefeld einen Wert einzugeben. Beim Klicken auf einen ebenfalls definierten Button wird die Funktion <code>BreiteFestlegen()</code> aufgerufen, die die Fensterbreite auf den eingegebenen Wert setzt.</p>

<p>Beachten Sie beim Neufestsetzen der Fensterbreite die Bildschirmgröße. Diese können Sie mit dem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="screen.htm">Screen</a>-Objekt ermitteln. Beachten Sie auch, dass der Anzeigebereich eines Fensters um einiges kleiner sein muss als das Fenster selbst, da das Fenster in der Regel noch Elemente wie Titelleiste, Menüleiste usw. enthält. Die absolute Breite eines Fensters können Sie mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_width">outerWidth</a> auslesen bzw. setzen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Unter Opera, Konqueror und Safari können Sie die Eigenschaft <code>innerWidth</code> nur auslesen, jedoch nicht setzen.</p>

<p>Im Internet Explorer können Sie mit <code>document.body.clientWidth</code> die innere Fensterhöhe bestimmen. Wenn Sie eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/allgemein/grundgeruest.htm#dokumenttyp">Dokumenttyp-Deklaration einsetzen</a>, die im Internet Explorer 6 den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/box_modell.htm#standardkonform">standardkonformen Modus</a> auslöst, müssen Sie
<code>document.documentElement.clientWidth</code> statt <code>document.body.clientWidth</code> verwenden. Zu diesem Zeitpunkt muss jedoch das <code>body</code>- bzw. <code>html</code>-Element bereits vorhanden sein, d.h. es ist sinnvoll, die Ermittlung dieser Eigenschaften vom Event-Handler <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm#onload">onload</a> abhängig zu machen.<br>
Ein fertiges Script zum Auslesen der Größe des Anzeigebereichs des Fensters, das alle Browser und Anzeigemodi berücksichtigt, finden Sie auf <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a href="http://www.quirksmode.org/viewport/compatibility.html#link2">quirksmode.org</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="locationbar">locationbar</a></h2>

<p>Speichert, ob ein Fenster eine eigene Adresszeile hat. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster eine Adresszeile hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_locationbar.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function FensterOeffnen () {
  Fenster = window.open("datei.htm", "Zweitfenster1", "width=300,height=200");
  if (Fenster.locationbar) {
    if (Fenster.locationbar.visible == false) {
      Fenster.close();
      Neufenster = window.open("datei.htm", "Zweitfenster2", "width=300,height=200,location=yes");
      Neufenster.focus();
    }
  } else {
    alert("Ihr Browser gibt nicht Preis, ob das neue Fenster eine Adressleiste hat.");
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;&lt;a href="javascript:FensterOeffnen()"&gt;Fenster &amp;ouml;ffnen&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel definiert eine Funktion <code>FensterOeffnen()</code>, die beim Aktivieren des Verweises aufgerufen wird. Diese Funktion öffnet zunächst ein Zweifenster ohne Adressleiste. Anschließend prüft sie, ob der Browser das Objekt <code>locationbar</code> kennt und ob das Fenster keine Adresszeile hat. Wenn es keine hat, wird es geschlossen. Stattdessen wird ein neues Fenster mit der zusätzlichen Angabe <code>location=yes</code> geöffnet. Näheres dazu siehe <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">open()</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Mozilla Firefox 1.0 kennt das Objekt <code>window.locationbar</code> zwar, die <code>visible</code>-Eigenschaft liefert jedoch in den meisten Fällen unbrauchbare Werte, die nicht wiederspiegeln, ob eine Adressleiste zu sehen ist oder nicht. Nur bei mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">window.open()</a> geöffneten Fenstern liefert <code>visible</code> korrekte Werte. Aber auch dabei gibt es - wenn auch selten vorkommende - Ausnahmen: Wenn die Adressleiste standardmäßig ausgeschaltet ist und Sie ein Fenster mit der Eigenschaft <code>location=yes</code> öffnen, so zeigt Firefox trotzdem keine Adressleiste, gibt aber fälschlicherweise <code>true</code> für <code>window.locationbar.visible</code> zurück. Sie sollten sich daher nicht auf diese Eigenschaft verlassen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="menubar">menubar</a></h2>

<p>Speichert, ob ein Fenster eine eigene Menüleiste mit den Browser-Menübefehlen hat. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster eine Menüleiste hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_menubar.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Hinweis () {
  if (window.menubar) {
    if (window.menubar.visible == true) {
      alert("Um die Seite zu editieren, wählen Sie aus dem Menü 'Ansicht'" +
        " den Befehl 'Quelltext anzeigen'.");
    } else {
      alert("Nanu, Ihr Browserfenster besitzt keine Menüleiste? Klicken Sie " +
        "mit der rechten Maustaste auf das Dokument und wählen dort 'Quelltext anzeigen', "+
        "um die Seite zu editieren.");
    }
  } else {
    alert("Es lässt sich nicht feststellen, ob ihr Browserfenster eine Menüleiste " +
      "hat. Probieren Sie im Menü 'Ansicht' den Befehl 'Quelltext anzeigen', " +
      "um die Seite zu editieren. Wenn Sie keine Menüleiste finden, klicken Sie mit " +
      "der rechten Maustaste auf das Dokument und wählen dort 'Quelltext anzeigen'.");
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Hinweis()"&gt;Diese Seite editieren&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis, der dem Anwender anbietet, die angezeigte Seite zu editieren. Wenn der Verweis aktiviert wird, wird eine Funktion <code>Hinweis()</code> aufgerufen. Diese prüft, ob der Browser das Objekt <code>menubar</code> kennt und ob für das aktuelle Fenster eine Menüleiste verfügbar ist. Je nachdem, welcher Fall zutrifft, gibt die Funktion mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> verschiedene Hinweis aus, die dem Anwender erklären, was zu tun ist, um die Seite zu editieren.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="name">name</a></h2>

<p>Speichert den Namen eines Fensters. Bei Netscape 2.0 nur auslesbar, ab späteren Versionen auch änderbar.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_name.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
Fenster = window.open("datei.htm", "KleinesFenster", "width=200,height=200");
function Fenstername () {
  alert("Name des kleinen Fensters: " + Fenster.name);
  neu = prompt("Vergeben Sie einen neuen Fensternamen", "Name");
  Fenster.name = neu;
  alert("Der Name des Fensters lautet jetzt: " + Fenster.name);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Fenstername()"&gt;Name des Fensters&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel lädt beim Einlesen der Datei ein zweites kleines Fenster. Der Name dieses Fensters lautet <code>KleinesFenster</code>. Beachten Sie, dass die Eigenschaft <code>name</code> sich auf diesen Namen bezieht, <b>nicht</b> etwa auf den Variablennamen, in dem die Fensterinstanz gespeichert wird (im Beispiel die Variable <code>Fenster</code>). Beim Klicken auf einen Verweis wird die Funktion <code>Fenstername()</code> aufgerufen. Darin wird dem Anwender zunächst mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> der aktuelle Fenstername des kleinen Fensters ausgegeben. Dann kann er einen neuen Namen eingeben. Abschließend wird der neue Name angezeigt.</p>

<h3>Beachten Sie:</h3>

<p>Ein mit JavaScript gesetzter Fenstername bleibt solange erhalten, wie das Fenster geöffnet ist bzw. bis er erneut geändert wird. Sie können aus diesem Grund den Fensternamen zum Speichern von Variableninhalten verwenden, z.B., um Variablen von einer Datei an eine später aufgerufene Datei zu übergeben. Berücksichtigen Sie dabei jedoch, dass der Fenstername in vielen Browsern lediglich Buchstaben, Zahlen und den Unterstrich enthalten darf. Sonderzeichen und Umlaute dagegen sind nicht erlaubt. Eine Ausnahme bildet Opera 5. Hier bleibt ein mit JavaScript gesetzter Fenstername nur solange gültig, wie das ändernde Dokument in diesem Fenster geladen ist.<br>
Lesen Sie zu dem Thema auch im Online-Angebot von SELFHTML aktuell den Artikel <img src="../../src/serverdok.gif" width="15" height="10" alt="Online-Seite">&nbsp;<a target="_top" href="http://aktuell.de.selfhtml.org/artikel/javascript/wertuebergabe/">Javascript-Wertübergabe zwischen verschiedenen HTML-Dokumenten</a> von Hatto von Hatzfeld.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="outer_height">outerHeight</a></h2>

<p>Speichert die Gesamthöhe eines Fensters inklusive Titelleiste, Menüleiste, Statuszeile usw.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_outer_height.htm">Anzeigebeispiel: So sieht's aus</a></p>


<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
alert("Gesamthoehe dieses Fensters: " + window.outerHeight + "  Pixel");
window.outerHeight = 300;
alert("Gesamthoehe jetzt: " + window.outerHeight + "  Pixel");
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel gibt beim Einlesen zunächst die Höhe des aktuellen Fensters aus. Dann setzt es die Höhe neu fest, und zwar auf 300 Pixel. Anschließend wird die neue Fensterhöhe zur Kontrolle mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> nochmals ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Unter Opera, Konqueror und Safari können Sie die Eigenschaft <code>outerHeight</code> nur auslesen, jedoch nicht setzen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="outer_width">outerWidth</a></h2>

<p>Speichert die Gesamtbreite eines Fensters inklusive Fensterrändern.</p>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_outer_width.htm">Anzeigebeispiel: So sieht's aus</a></p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
if (window.outerWidth &gt; 640)
  window.outerWidth = 640;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel fragt beim Einlesen der Datei ab, ob die Breite des aktuellen Fensters mehr als 640 Pixel beträgt. Wenn ja, wird die Breite auf 640 Pixel festgesetzt.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Unter Opera, Konqueror und Safari können Sie die Eigenschaft <code>outerWidth</code> nur auslesen, jedoch nicht setzen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js11.gif" width="30" height="30" alt="JavaScript 1.1" title="JavaScript 1.1"><img src="../../src/netsc3.gif" width="30" height="30" alt="Netscape 3.0" title="Netscape 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="page_x_offset">pageXOffset</a></h2>

<p>Speichert die aktuelle horizontale Position innerhalb der Seite, gemessen am linken Fensterrand. So lässt sich ermitteln, wie weit der Anwender bereits nach rechts gescrollt hat. Sinnvoll in Verbindung der Verwendung mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_by">scrollBy()</a> oder <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_to">scrollTo()</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/bsp_window_pagexoffset_frame.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Set0 () {
  if (parent.frames[1].pageXOffset &gt; 0)
    parent.frames[1].scrollTo(0, parent.frames[1].pageYOffset);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Set0()"&gt;nach links&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird angenommen, es gibt ein anderes Frame-Fenster, das einen überbreiten Inhalt hat, sodass der Anwender nach rechts scrollen muss, um alles zu sehen. Mit dem Verweis, der in der aktuellen Datei notiert ist, lässt sich das andere Frame-Fenster wieder ganz nach links scrollen. Dazu wird die aktuelle horizontale Scroll-Position der Eigenschaft <code>pageXOffset</code> abgefragt. Wenn sie größer 0 ist, hat der Anwender nach rechts gescrollt. In diesem Fall wird die Methode <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_to">scrollTo()</a> aufgerufen, um wieder ganz nach links zu scrollen. Die vertikale Position bleibt dabei erhalten, da als Parameter die Eigenschaft <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#page_y_offset">pageYOffset</a> übergeben wird.</p>

<p>Zur Adressierung von Frame-Fenstern in JavaScript lesen Sie den Abschnitt über das Objekt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="frames.htm">frames</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Im Internet Explorer ab Version 4 ist die horizontale Scroll-Position in der Eigenschaft <code>document.body.scrollLeft</code> gespeichert. Wenn Sie eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/allgemein/grundgeruest.htm#dokumenttyp">Dokumenttyp-Deklaration einsetzen</a>, die im Internet Explorer 6 den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/box_modell.htm#standardkonform">standardkonformen Modus</a> auslöst, müssen Sie
<code>document.documentElement.scrollLeft</code> statt <code>document.body.scrollLeft</code> verwenden. Zu diesem Zeitpunkt muss jedoch das <code>body</code>- bzw. <code>html</code>-Element bereits vorhanden sein, d.h. es ist sinnvoll, die Ermittlung dieser Eigenschaften vom Event-Handler <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm#onload">onload</a> abhängig zu machen.<br>
Ein fertiges Script zum Auslesen der horizontalen und vertikalen Scroll-Position, das alle Browser und Anzeigemodi berücksichtigt, finden Sie auf <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a href="http://www.quirksmode.org/viewport/compatibility.html#link3">quirksmode.org</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="page_y_offset">pageYOffset</a></h2>

<p>Speichert die aktuelle vertikale Position innerhalb der Seite, gemessen am Dokumentanfang. So lässt sich ermitteln, wie weit der Anwender bereits nach unten gescrollt hat. Sinnvoll in Verbindung der Verwendung mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_by">scrollBy()</a> oder <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_to">scrollTo()</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_page_y_offset.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
for (var i = 0; i &lt; 100; i++)
  document.write("Viel Text&lt;br&gt;");
function Position () {
  alert("pageYOffset: " + window.pageYOffset + " Pixel");
}
&lt;/script&gt;
&lt;a href="javascript:Position()"&gt;Y-Position&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel schreibt ein JavaScript zu Testzwecken 100 mal eine HTML-Zeile mit dem Text <code>Viel Text</code> in das Dokumentfenster. Das veranlasst den Browser, entsprechend weit nach unten mit zu scrollen. Am Ende wird ein Verweis notiert. Bei dessen Anklicken wird die Funktion <code>Position()</code> aufgerufen. Sie gibt mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> aus, wie weit die aktuelle Scroll-Position vom Dokumentanfang entfernt ist.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Im Internet Explorer ab Version 4 ist die vertikale Scroll-Position in der Eigenschaft <code>document.body.scrollTop</code> gespeichert. Wenn Sie eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/allgemein/grundgeruest.htm#dokumenttyp">Dokumenttyp-Deklaration einsetzen</a>, die im Internet Explorer 6 den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/box_modell.htm#standardkonform">standardkonformen Modus</a> auslöst, müssen Sie
<code>document.documentElement.scrollTop</code> statt <code>document.body.scrollTop</code> verwenden. Zu diesem Zeitpunkt muss jedoch das <code>body</code>- bzw. <code>html</code>-Element bereits vorhanden sein, d.h. es ist sinnvoll, die Ermittlung dieser Eigenschaften vom Event-Handler <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm#onload">onload</a> abhängig zu machen.<br>
Ein fertiges Script zum Auslesen der horizontalen und vertikalen Scroll-Position, das alle Browser und Anzeigemodi berücksichtigt, finden Sie auf <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a href="http://www.quirksmode.org/viewport/compatibility.html#link3">quirksmode.org</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="personalbar">personalbar</a></h2>

<p>Speichert, ob ein Fenster eine eigene "persönliche" Leiste hat. Das ist bei Netscape 4.x und Mozilla die Leiste unterhalb der Adresszeile, die den Direktzugriff auf Lieblingsadressen (Bookmarks) ermöglicht. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster eine solche Leiste hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_personalbar.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function PersonalCheck () {
  if (window.personalbar) {
    if (window.personalbar.visible == false) {
      alert("Haben Sie denn keine Lieblingsadressen?");
    } else {
      alert("Aha, Sie nutzen also die Personal Bar!");
    }
  } else {
    alert("Schade, Ihr Browser mag nicht verraten, ob Sie eine Personal Bar benutzen.");
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:PersonalCheck()"&gt;Pers&amp;ouml;nlichkeitstest&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis. Wenn der Anwender den Verweis anklickt, wird eine Funktion <code>PersonalCheck()</code> aufgerufen. Diese prüft, ob der Browser das Objekt <code>personalbar</code> kennt und ob für das aktuelle Fenster eine Bookmarks-Leiste verfügbar ist. Je nach Ergebnis wird dem Anwender mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> eine "persönliche" Meldung ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Mozilla Firefox 1.0 kennt das Objekt <code>window.personalbar</code> zwar, die <code>visible</code>-Eigenschaft liefert jedoch in den meisten Fällen unbrauchbare Werte, die nicht wiederspiegeln, ob eine Bookmark-Leiste zu sehen ist oder nicht. Nur bei mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">window.open()</a> geöffneten Fenstern liefert <code>visible</code> korrekte Werte.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="scrollbars">scrollbars</a></h2>

<p>Speichert, ob ein Fenster Scroll-Leisten hat. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster Scroll-Leisten hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_scrollbars.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function FensterOeffnen () {
  Neufenster = window.open("datei.htm", "AnderesFenster", "width=400,height=250");
  if (Neufenster.scrollbars) {
    if (Neufenster.scrollbars.visible == false)
      Neufenster.close();
  } else {
    alert("Ihr Browser erlaubt das Abfragen der Scrollbars nicht.");
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:FensterOeffnen()"&gt;Kleiner Scroll-Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis. Wenn dieser aktiviert wird, wird eine Funktion <code>FensterOeffnen()</code> aufgerufen. Diese öffnet ein zweite, kleineres Fenster, das anschließend unter <code>Neufenster</code> ansprechbar ist. Anschließend prüft die Funktion, ob der Browser das Objekt <code>scrollbars</code> kennt und ob für das zweite Fenster Scroll-Leisten verfügbar sind. Wenn das zweite Fenster keine Scroll-Leisten hat, wird das Fenster mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#close">close()</a> geschlossen. Wenn das <code>scrollbars</code>-Objekt nicht verfügbar ist, wird eine entsprechende Meldung ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Safari kennt zwar das <code>scrollbars</code>-Objekt und dessen Eigenschaft <code>visible</code>. Allerdings hat diese auch dann den Wert <code>true</code>, wenn das Fenster keine Scroll-Leisten besitzt.
Der Wert hat nur dann <code>false</code>, wenn beim <code>window.open()</code>-Aufruf ausdrücklich <code>scrollbars=false</code> angegeben wurde. Deshalb funktioniert das Beispiel im Safari nicht: Das geöffnete Fenster wird nicht geschlossen, obwohl die Scroll-Listen nicht sichtbar sind. Für Firefox gilt dasselbe, allerdings liefert dieser selbst im besagten <code>window-open()</code>-Fall einen unzutreffenden Wert.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="statusbar">statusbar</a></h2>

<p>Speichert, ob ein Fenster eine eigene Statuszeile hat. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster eine Statuszeile hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_statusbar.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Statustext (Text) {
  if (window.statusbar &amp;&amp; window.statusbar.visible == true) {
    window.defaultStatus = Text;
  } else {
    alert(Text);
  }
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form name="Eingabe" action=""&gt;
&lt;input type="text" name="Feld"&gt;
&lt;input type="button" value="Start" onclick="Statustext(document.Eingabe.Feld.value)"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird ein Formular definiert. Der Anwender kann einen Text eingeben. Beim Klick auf den Button wird die Funktion <code>Statustext()</code> aufgerufen. Die Funktion ermittelt, ob der Browser das Objekt <code>statusbar</code> kennt und ob das aktuelle Fenster eine Statuszeile hat. Wenn ja, wird der im Eingabefeld eingegebene Text als Standardtext der Statuszeile gesetzt. Wenn nein, wird der eingegebene Text nur mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#alert">alert()</a> angezeigt.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Mozilla Firefox 1.0 kennt das Objekt <code>window.statusbar</code> zwar, die <code>visible</code>-Eigenschaft liefert jedoch in den meisten Fällen unbrauchbare Werte, die nicht wiederspiegeln, ob eine Statusleiste zu sehen ist oder nicht. Nur bei mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">window.open()</a> geöffneten Fenstern liefert <code>visible</code> korrekte Werte. Aber auch dabei gibt es - wenn auch selten vorkommende - Ausnahmen: Wenn die Statusleiste standardmäßig ausgeschaltet ist und Sie ein Fenster mit der Eigenschaft <code>status=yes</code> öffnen, so zeigt Firefox trotzdem keine Statusleiste, gibt aber fälschlicherweise <code>true</code> für <code>window.statusbar.visible</code> zurück. Sie sollten sich daher nicht auf diese Eigenschaft verlassen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op6.gif" width="30" height="30" alt="Opera 6" title="Opera 6"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="status">status</a></h2>

<p>Speichert oder setzt den aktuellen Inhalt der Statuszeile.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_status.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="datei.htm" onmouseover="window.status = 'Das ist ein Verweis'; return true;"&gt;Verweis&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel zeigt einen Verweis. Beim Überfahren des Verweistextes mit der Maus erscheint in der Statuszeile der Text: <code>das ist ein Verweis</code>. Wichtig ist bei solchen Konstrukten die Anweisung <code>return true</code> am Ende.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Besucher, die bewusst auf den Inhalt der Statuszeile achten, erwarten, dort für sie wichtige Information in Form eines Verweisziels vorzufinden. Nutzer hingegen, die den Inhalt der Statuszeile nicht wahrnehmen, werden von einer etwaigen Zusatzinformation nichts mitbekommen. Sie sollten daher möglichst davon absehen, die Statusleiste zu manipulieren.</p>

<p>Die Browserhersteller haben auf diese Probleme reagiert, indem sie <code>window.status</code> weitestgehend "abgeschaltet" haben. Der Internet Explorer 7 unterbindet Manipulationen der Statuszeile gänzlich. Firefox, Opera und Konqueror bieten eine Einstellung an, die das Beschreiben der Statusleiste für Scripte unmöglich macht.</p>

<p>Selbst wenn keine Einstellungen das Beschreiben von <code>window.status</code> verbieten, so wird im Opera und Konqueror beim Überfahren eines Verweises immer dessen Ziel in der Statusleiste angezeigt. Diese Browser stellen den neuen Text in der Statuszeile erst dar, wenn der Mauszeiger den Verweis selbst wieder verlassen hat.</p>

<p>Alles in allem können Sie <code>window.status</code> als eine überholte und mittlerweile unbrauchbare Eigenschaft sehen - vermeiden Sie sie möglichst ganz.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="toolbar">toolbar</a></h2>

<p>Speichert, ob ein Fenster eine eigene Button-Leiste (mit Buttons für "Vor", "Zurück" usw.) hat. Stellt selbst ein Objekt dar, das eine Eigenschaft hat, nämlich die Eigenschaft <code>visible</code> (= <i>sichtbar</i>). Enthält für diese Eigenschaft den Wert <code>true</code>, wenn das Fenster eine Button-Leiste hat, und den Wert <code>false</code>, wenn es keine hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_toolbar.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
if (window.toolbar &amp;&amp; window.toolbar.visible == false)
  document.write('&lt;a href="javascript:history.back()"&gt;Back&lt;\/a&gt;');
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält innerhalb des Dateikörpers einen Script-Bereich. Darin wird überprüft, ob das Fenster eine eigene Button-Leiste hat. Wenn nicht, wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#write">document.write()</a> ein HTML-Konstrukt an die Stelle im Dokument geschrieben, die den Button "Zurück" als HTML-Verweis schreibt (siehe auch <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="history.htm#back">history.back()</a>).</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Mozilla Firefox 1.0 kennt das Objekt <code>window.toolbar</code> zwar, die <code>visible</code>-Eigenschaft liefert aber nur dann einen korrekten Wert, wenn es auf Fenster angewendet wird, die Sie vorher mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#open">window.open()</a> selbst geöffnet haben. Das obige Beispiel stellt daher nicht korrekt fest, ob die Firefox-Navigationsleiste eingeblendet ist oder nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="alert">alert()</a></h2>

<p>Gibt Text in einem Dialogfenster aus. Erwartet eine Zeichenkette, eine Zahl oder ein Objekt als Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_alert.htm">Anzeigebeispiel: So sieht's aus</a></p>


<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:alert('Verweisziel noch nicht erreichbar')"&gt;Unsere Erfolge&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel führt beim Anklicken eines Verweises keinen Sprung zu einer anderen Seite aus, sondern gibt stattdessen eine Dialogbox mit dem Hinweis <code>"Verweisziel noch nicht erreichbar"</code> aus. Sie können der alert()-Methode feste Zeichenketten übergeben wie im Beispiel, aber auch Variablen. Dann wird der Inhalt der Variablen ausgegeben. Auch zusammengesetzte Ketten dürfen Sie übergeben, etwa:<br>
<code>alert("Ihr Browser" + navigator.userAgent)</code></p>

<h3 class="inf">Beachten Sie:</h3>

<p>Intern wandelt die <code>alert()</code>-Methode den übergebenen Parameter in eine Zeichenkette um. So kann es vorkommen, dass sich ein Wert mit <code>alert()</code> ausgeben lässt, jedoch keine Zeichenkettenoperationen mit dem ausgegebenen Wert ausführbar sind, da es sich außerhalb der Ausgabe nicht um eine Zeichenkette handelt.</p>

<p>Der Rückgabewert der Methode <code>alert()</code> ist stets <code>undefined</code>.</p>

<p>Das Aussehen des Mitteilungsfenster ist abhängig vom Betriebssystem und dem verwendeten Browser. Das bedeutet, Sie können die Mitteilungsbox nur mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/notationen.htm#zeichenketten">Steuerzeichen</a> formatieren. Weitere Formatierungsmöglichkeiten stehen Ihnen nicht zur Verfügung.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="back">back()</a></h2>

<p>Entspricht bei normalen WWW-Seiten einem Klick auf den "Zurück"-Button im Browser. Bei Frames wird jedoch die letzte besuchte Seite aufgerufen, die nicht zum Frame-Set gehörte. Hier liegt der entscheidende Unterschied zur Methode <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="history.htm#back">history.back</a>!</p>

<p>Diese Methode erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:window.back()"&gt;Zurück&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel realisiert einen HTML-Verweis, bei dessen Anklicken die Seite aufgerufen wird, die zuletzt das gesamte Anzeigefenster ausfüllte.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js11.gif" width="30" height="30" alt="JavaScript 1.1" title="JavaScript 1.1"><img src="../../src/netsc3.gif" width="30" height="30" alt="Netscape 3.0" title="Netscape 3.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="blur">blur()</a></h2>

<p>Macht ein Fenster inaktiv. Das Gegenteil von <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#focus">focus()</a>. Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_blur.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var Neufenster = window.open("datei.htm", "AnderesFenster", "width=400,height=250");
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Neufenster.focus()"&gt;Fenster nach vorne&lt;/a&gt;&lt;br&gt;
&lt;a href="javascript:Neufenster.blur()"&gt;Fenster nach hinten&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird beim Einlesen der HTML-Datei ein zweites, kleines Fenster geöffnet. Die HTML-Datei selbst enthält zwei Verweise. Beim Anklicken des ersten Verweises wird das zweite Fenster aktiviert - <code>focus()</code>. Beim Anklicken des zweiten Verweises wird es deaktiviert und je nach Fensterkonstellation von dem Hauptfenster überdeckt - <code>blur()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="capture_events">captureEvents()</a></h2>

<p>Überwacht Anwenderereignisse im angegebenen Fenster. Erwartet als Parameter eine Folge von Ereignissen, die überwacht werden sollen. Folgende Ereignisse lassen sich überwachen:</p>

<p><code>Event.ABORT Event.BLUR Event.CHANGE Event.CLICK Event.DBLCLICK Event.DRAGDROP Event.ERROR Event.FOCUS Event.KEYDOWN Event.KEYPRESS Event.KEYUP Event.LOAD Event.MOUSEDOWN Event.MOUSEMOVE Event.MOUSEOUT Event.MOUSEOVER Event.MOUSEUP Event.MOVE Event.RESET Event.RESIZE Event.SELECT Event.SUBMIT Event.UNLOAD</code>.</p>

<p>Es handelt sich dabei um spezielle Notationsvarianten entsprechender <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm">Event-Handler</a> ohne das "on" davor, dafür mit dem Ansprechen des <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="event.htm">Event-Objekts</a> davor. So entspricht etwa <code>Event.MOUSEOVER</code> dem Event-Handler <code>onmouseover</code>.</p>

<p>Sie können mehrere Ereignisse überwachen. Trennen Sie die Event-Namen dabei durch <code>|</code> (Querstriche).</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_capture_events.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
window.captureEvents(Event.KEYPRESS);
window.onkeypress = Ausgabe;
function Ausgabe (Ereignis) {
  alert("Sie haben die Taste mit dem Wert " + Ereignis.which + " gedrueckt");
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
Dr&amp;uuml;uecken Sie irgendwelche Tasten!
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird der Event <code>KEYPRESS</code> (<i>Taste gedrückt</i>) überwacht. Wenn der Anwender eine Taste drückt, wird die Funktion <code>Ausgabe()</code> aufgerufen, die mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#alert">alert()</a> ausgibt, welche Taste gedrückt wurde. Die Syntax beim Funktionsaufruf ist dabei abweichend von der üblichen. Ein zusammenhängendes Beispiel mit Erläuterungen hierzu finden Sie im Kapitel <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../dhtml/index.htm">Dynamisches HTML</a> im Abschnitt über das <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/netscape.htm#event_objekt">Event-Objekt bei Netscape</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die Methode <code>captureEvents()</code> existiert auch bei anderen Browsern, nämlich Mozilla Firefox, Opera, Konqueror und Safari. Dort ist die Methode allerdings wirkungslos und wird auch nicht benötigt. Denn lediglich im Netscape 4 muss zum Aktivieren der Ereignisüberwachung <code>captureEvents()</code> ausgeführt werden. Den anderen Browsern reicht die Anweisung <code>window.onkeypress = Ausgabe;</code> im Beispiel aus. Deshalb funktioniert das Beispiel auch in diesen Browsern - aber das würde es auch ohne <code>captureEvents()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="clear_interval">clearInterval()</a></h2>

<p>Bricht einen Endlosvorgang ab, der mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_interval">setInterval()</a> begonnen wurde. Erwartet als Parameter die Variable, in der der Aufruf von <code>setInterval()</code> gespeichert wurde.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_clear_interval.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
var aktiv = window.setInterval("Farbe()", 1000);
var i = 0, farbe = 1;
function Farbe () {
  if (farbe == 1) {
    document.bgColor = "yellow";
    farbe = 2;
  } else {
    document.bgColor = "aqua";
    farbe = 1;
  }
  i = i + 1;
  if (i &gt;= 10)
    window.clearInterval(aktiv);
}
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel definiert mit <code>setInterval()</code>, dass die Funktion <code>Farbe()</code> alle 1000 Millisekunden, also jede Sekunde einmal aufgerufen wird. Der Aufruf wird in der Variablen <code>aktiv</code> gespeichert. Im Beispiel wechselt die Funktion <code>Farbe()</code> bei jedem Aufruf die Hintergrundfarbe der Datei (<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#bg_color">bgColor</a>). Gleichzeitig wird ein Zähler hochgezählt. Wenn er größer gleich 10 ist, wird die Methode <code>clearInterval()</code> aufgerufen, die den Endlosvorgang stoppt. Dabei wird die zuvor definierte Variable <code>aktiv</code> als Parameter übergeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="clear_timeout">clearTimeout()</a></h2>

<p>Bricht einen Timeout ab, der mit der Methode <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_timeout">setTimeout()</a> gestartet wurde. Erwartet als Parameter die Variable, in der der Aufruf von <code>setTimeout()</code> gespeichert wurde.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_clear_timeout.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var i = 0;
function Zaehlen () {
  i = i + 1;
  aktiv = window.setTimeout("Zaehlen()", 1000);
}

function Aufhoeren () {
  window.clearTimeout(aktiv);
  alert(i + " Sekunden");
}

aktiv = window.setTimeout("Zaehlen()", 1000);
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form action=""&gt;
&lt;input type="button" value="Klick" onclick="Aufhoeren()"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel startet beim Einlesen der Datei mit <code>setTimeout()</code> einen Zählvorgang. Dabei wird alle 1000 Millisekunden, also 1 mal pro Sekunde, die Funktion <code>Zaehlen()</code> aufgerufen. Diese zaehlt die Variable <code>i</code> hoch. In der Datei wird ein Button definiert. Wenn der Anwender auf den Button klickt, wird die Funktion <code>Aufhoeren()</code> aufgerufen. Diese Funktion stoppt mit <code>clearTimeout()</code> den Timeout und gibt mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#alert">alert()</a> die Anzahl der gezählten Sekunden aus. Beim Aufruf von <code>clearTimeout()</code> wird die zuvor bei <code>setTimeout()</code> definierte globale Variable <code>aktiv</code> als Parameter übergeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="close">close()</a></h2>

<p>Schließt ein Fenster. Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_close.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var Info = window.open("datei.htm", "Zweitfenster");
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form action=""&gt;
&lt;input type="button" value="Fenster zu" onclick="Info.close()"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel öffnet beim Einlesen der Datei ein zweites Fenster namens <code>Info</code>. In der Beispieldatei wird ein Button definiert. Wenn der Anwender auf den Button klickt, wird das zweite Fenster geschlossen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die Methode <code>close()</code> unterliegt der Sicherheitskonzeption von JavaScript. Das bedeutet, dass sich ein Fenster, sobald es eine History besitzt (weil der Anwender darin mehrere Seiten aufgerufen hat), nicht mehr ohne eine Browsernachfrage schließen lässt. Ein Unterdrücken dieser Abfrage ist nicht möglich.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="confirm">confirm()</a></h2>

<p>Blendet ein Dialogfenster mit zwei Buttons für "OK" und "Abbrechen" ein. Sinnvoll, um vom Anwender eine Entscheidung zu erzwingen, die im weiteren Programmablauf verarbeitet wird. Erwartet als Parameter einen Aufforderungstext für die Ja/Nein-Entscheidung. Liefert als Ergebnis zurück, wie sich der Anwender entschieden hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/bsp_confirm_weiter.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
Check = confirm("Wollen Sie diese Seite wirklich sehen?");
if (Check == false)
  history.back();
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird der Anwender beim Einlesen der Datei gefragt, ob er die Seite wirklich sehen will. Der Rückgabewert von <code>confirm()</code> wird in der Variablen <code>Check</code> gespeichert. Wenn der Anwender auf "OK" klickt, enthält <code>Check</code> den Wert <code>true</code>. Es passiert nichts weiter und die Seite wird geladen. Wenn er  "Abbrechen" wählt, erhält <code>Check</code> den Wert <code>false</code>. Für diesen Fall ist die Anweisung <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="history.htm">history</a>.<a href="history.htm#back">back()</a> notiert, die den Anwender auf die Seite zurückbefördert, von der er kam.</p>

<p>Das Aussehen des Auswahlfenster ist abhängig vom Betriebssystem und dem verwendeten Browser. Das bedeutet, Sie können die Auswahl nur mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/notationen.htm#zeichenketten">Steuerzeichen</a> formatieren. Weitere Formatierungsmöglichkeiten stehen Ihnen nicht zur Verfügung.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="disable_external_capture">disableExternalCapture()</a></h2>

<p>Verbietet anderen Fenstern, Ereignisse im aktuellen Fenster zu überwachen. Vor allem als Schutz gedacht, falls fremde Seiten die eigene Seiten in ein Frame-Set laden.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
disableExternalCapture();
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel startet beim Einlesen den Befehl <code>disableExternalCapture()</code>. Dadurch können fremde Seiten keine Anwenderereignisse in dieser Datei überwachen, falls die Datei in ein fremdes Frame-Set geladen wird.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="enable_external_capture">enableExternalCapture()</a></h2>

<p>Erlaubt anderen Fenstern, Ereignisse im aktuellen Fenster zu überwachen. So lassen sich von anderen Fenstern eines Frame-Sets aus Anwenderereignisse im aktuellen Fenster überwachen.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
enableExternalCapture();
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel startet beim Einlesen den Befehl <code>enableExternalCapture()</code>. Dadurch können fremde Seiten Anwenderereignisse in dieser Datei überwachen, falls die Datei Teil eines Frame-Sets ist.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1">&nbsp;<a class="an" name="find">find()</a></h2>

<p>Durchsucht den Inhalt eines Fensters nach einem Text. Entspricht in der Funktionalität dem Menübefehl "Suchen". Die Suche bezieht sich nur auf die aktuelle Seite.<br>
Erwartet folgende Parameter:<br>
<b>1.</b> <i>Text</i> = Text, nach dem gesucht werden soll.<br>
<b>2.</b> <i>Groß-/Kleinschreibung beachten</i> = <code>true</code> für ja oder  <code>false</code> für nein übergeben.<br>
<b>3.</b> <i>Suchrichtung rückwärts</i> = <code>true</code> für ja oder <code>false</code> für nein übergeben.<br>
Die beiden letzten Parameter sind optional.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_find.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form action=""&gt;
&lt;p>Geben Sie einen Suchbegriff ein:
&lt;input type="text" name="SuchNach"&gt;
&lt;input type="button" value="suchen" onclick="find(this.form.SuchNach.value, false, false)"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel steht am Anfang der Datei ein Formular mit einem Eingabefeld zur Eingabe eines Suchbegriffs. Das Formular enthält außerdem einen Button. Bei dessen Anklicken wird der weitere Inhalt der Datei nach dem Begriff durchsucht, den der Anwender in dem Eingabefeld eingegeben hat.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Netscape 6.1 kennt diese Methode nicht (mehr).</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js11.gif" width="30" height="30" alt="JavaScript 1.1" title="JavaScript 1.1"><img src="../../src/netsc3.gif" width="30" height="30" alt="Netscape 3.0" title="Netscape 3.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="focus">focus()</a></h2>

<p>Macht ein Fenster zum aktiven Fenster. Sinnvoll bei Verwendung von Zweitfenstern, aber auch bei Frame-Fenstern. Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/bsp_focus_frame.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function FrameVerweis (Ziel) {
  parent.frames[1].location.href = Ziel;
  parent.frames[1].focus();
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:FrameVerweis('../location.htm')"&gt;Neue Seite&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel nimmt an, dass die aktuelle Datei Teil eines Frame-Sets ist. Die Datei enthält einen Verweis, dessen Ziel in einem anderen Frame-Fenster angezeigt werden soll. Beim Anklicken wird aber nicht nur das Verweisziel in das andere Frame-Fenster geladen, sondern dieses wird zugleich das aktive Fenster. So kann der Anwender beispielsweise gleich mit den Pfeiltasten darin scrollen. Dazu wird beim Anklicken des Verweises eine Funktion <code>FrameVerweis()</code> aufgerufen. Diese Funktion lädt im ersten Befehl das als Parameter übergebene Verweisziel in den anderen Frame (<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="location.htm">location</a>.<a href="location.htm#href">href</a>), und im zweiten Befehl setzt sie mit <code>focus()</code> das Ziel-Frame-Fenster aktiv.</p>

<p>Zur Adressierung von Frame-Fenstern in JavaScript lesen Sie den Abschnitt über das Objekt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="frames.htm">frames</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2">&nbsp;<a class="an" name="forward">forward()</a></h2>

<p>Entspricht bei normalen WWW-Seiten einem Klick auf den "Vorwärts"-Button im Browser. Bei Frames wird jedoch die nächste besuchte Seite aufgerufen, die nicht zum Frame-Set gehört. Bei Frames also unterschiedlich zu <code>history.forward()</code>! Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:window.forward()"&gt;Vor&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel realisiert einen HTML-Verweis, bei dessen Anklicken die Seite aufgerufen wird, die beim Vorwärtsgehen in der History als nächste das gesamte Anzeigefenster ausfüllt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="handle_event">handleEvent()</a></h2>

<p>Übergibt ein Ereignis an ein Element, das in der Lage ist, auf das Ereignis zu reagieren.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_handle_event.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function clickHandler (Ereignis) {
  window.document.links[0].handleEvent(Ereignis);
}

window.captureEvents(Event.CLICK);
window.onclick = clickHandler;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="datei.htm" onclick="location.href = 'datei.htm'"&gt;Verweis&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel enthält einen Verweis, bei dessen Anklicken - ganz normal durch die <code>href</code>-Angabe - die Datei <code>datei.htm</code> aufgerufen wird. Im Beispiel ist es jedoch so, dass <code>datei.htm</code> sofort aufgerufen wird, sobald der Anwender irgendwo im Browser-Fenster hinklickt. Dazu wird beim Einlesen der Datei mit der <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#capture_events">captureEvents()</a>-Methode das Mausklick-Ereignis überwacht. Wenn das Ereignis eintritt, wird die Funktion <code>ClickHandler()</code> aufgerufen. Diese übergibt mit <code>handleEvent()</code> das Ereignis an den ersten im Dokument definierten Verweis weiter (<code>document.links[0]</code>). In dem entsprechenden Verweis ist dazu ein Event-Handler <code>onclick</code> notiert. Dieser ist in der Lage, das übergebene Ereignis zu verarbeiten. Als Befehl wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="location.htm">location</a>.<a href="location.htm#href">href</a> die gleiche Datei aufgerufen wie beim Anklicken des Verweises selbst.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Netscape 6.1 kennt diese Methode nicht (mehr).</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1">&nbsp;<a class="an" name="home">home()</a></h2>

<p>Entspricht einem Klick auf den "Home"-Button im Browser.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_home.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:home()"&gt;Nach hause&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel definiert einen Verweis, bei dessen Anklicken die Seite aufgerufen wird, die der Anwender als Start-Homepage eingestellt hat.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2">&nbsp;<a class="an" name="move_by">moveBy()</a></h2>

<p>Verschiebt ein Fenster um so viele Pixel wie angegeben. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = um wie viele Pixel das Fenster nach links/rechts verschoben werden soll. Negative Werte verschieben nach links, positive nach rechts.<br>
<b>2.</b> <i>y-Wert</i> = um wie viele Pixel das Fenster nach oben/unten verschoben werden soll. Negative Werte verschieben nach oben, positive nach unten.
</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_move_by.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
Fenster = window.open("datei.htm", "Zweitfenster", "width=200,height=200");
function Bewege () {
  Fenster.moveBy(200, 100);
  Fenster.focus();
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Bewege()"&gt;Fenster bewegen&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel lädt beim Einlesen der Datei ein kleines Zweitfenster mit einer anderen Datei. Das Hauptfenster enthält einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Bewege()</code> aufgerufen, die das kleine Fenster um 200 Pixel nach rechts und um 100 Pixel nach unten verschiebt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="move_to">moveTo()</a></h2>

<p>Verschiebt ein Fenster auf die anzugebende Position. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = Links-Wert für die neue obere linke Ecke des Fensters.<br>
<b>2.</b> <i>y-Wert</i> = Oben-Wert für die neue obere linke Ecke des Fensters.
</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_move_to.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
Fenster = window.open("datei.htm", "Zweitfenster", "width=200,height=200");
function Bewege () {
  Fenster.moveTo(screen.width - 250, screen.height - 350);
  Fenster.focus();
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Bewege()"&gt;Fenster bewegen&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel lädt beim Einlesen der Datei ein kleines Zweitfenster mit einer anderen Datei. Das Zweitfenster hat eine Breite und eine Höhe von 200 Pixeln. Das Hauptfenster enthält einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Bewege()</code> aufgerufen, die das kleine Fenster in die rechte untere Ecke des Bildschirms verschiebt. Die Pixelangaben für die neue linke obere Ecke des Fensters werden dabei mit Hilfe des <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="screen.htm">screen</a>-Objekts gewonnen, das mit <code>screen.width</code> die Bildschirmbreite und mit <code>screen.height</code> die Bildschirmhöhe liefert.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="open">open()</a></h2>

<p>Öffnet ein neues Fenster. Erwartet mindestens zwei, optional auch drei Parameter:</p>

<p><b>1.</b> <i>URI</i> = Zieladresse einer Datei, die in das neue Fenster geladen werden soll. Wenn sich die Datei im gleichen Verzeichnis befindet, genügt der Dateiname. Ansonsten relative Pfadnamen oder absolute http-Adressen angeben.
Um ein leeres Fenster zu öffnen kann auch eine leere Zeichenkette angegeben werden. In einigen alten Browserversionen (IE&nbsp;3) führt dies allerdings zu einer Fehlermeldung.<br>
Anstelle eines URI können Sie auch mit <code>about:blank</code> eine leere Datei in das Fenster laden.
Was aber wiederum in einigen Opera (bis 7) Versionen dazu führt, dass Sie dieses Fehler nicht mehr mit Javascript ansprechen können.</p>

<p><b>2.</b> <i>Fenstername</i> = Ein Name, der <strong>nur</strong> aus Buchstaben, Ziffern und Unterstrich bestehen darf. Unter diesem Namen können beispielsweise Verweise ihre Ziele mit <code>&lt;a href="ziel.htm" target="NameDesFensters"&gt;</code> in das erzeugte Fenster laden.<br>
Gültige Fensternamen sind auch <code>_blank</code>,<code>_parent</code>,<code>_self</code> und <code>_top</code>. Opera 5.12 öffnet jedoch in jedem Fall die Datei im gleichen Fenster. Netscape 6 interpretiert die Angabe <code>_parent</code> nicht.</p>

<p><b>3.</b> (optional) <i>Angaben zum Aussehen des Fensters</i> = Eine Zeichenkette, in der Sie die Größe und die Eigenschaften des Fensters festlegen können. Mehrere Angaben sind durch Kommata zu trennen. Folgende Angaben sind möglich:</p>

<table class="reftable" cellpadding="3" cellspacing="0" border="1">
<tr>
<th>Eigenschaft</th>
<th>Wertzuweisung</th>
<th>Status</th>
<th>Bedeutung</th>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>dependent</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/nb.gif" width="30" height="30" alt=""></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), wird das Fenster geschlossen, wenn sein Elternfenster geschlossen wird. Wenn nein (<code>no</code> = Voreinstellung), bleibt das Fenster erhalten, wenn sein Elternfenster geschlossen wird.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>height</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Höhe des neuen Fensters in Pixeln, z.B. <code>height=200</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>hotkeys</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/nb.gif" width="60" height="30" alt=""></td>
<td class="tabxpl">Wenn nein (<code>no</code>), werden Tastaturbefehle zum Steuern des Browsers in dem Fenster deaktiviert. Wenn ja (<code>yes</code> = Voreinstellung), bleiben Tastaturbefehle des Browsers in dem Fenster gültig.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>innerHeight</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/nb.gif" width="60" height="30" alt=""></td>
<td class="tabxpl">Höhe des Anzeigebereichs des neuen Fensters in Pixeln, z.B. <code>innerHeight=200</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>innerWidth</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/nb.gif" width="60" height="30" alt=""></td>
<td class="tabxpl">Breite des Anzeigebereichs des neuen Fensters in Pixeln, z.B. <code>innerWidth=200</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>left</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Horizontalwert der linken oberen Ecke des neuen Fensters in Pixeln, z.B. <code>left=100</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>location</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), erhält das Fenster eine eigene Adresszeile. Wenn nein (<code>no</code>), erhält es keine Adresszeile. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält. Netscape 6.1 interpretiert diese Angabe nicht.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>menubar</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/nb.gif" width="30" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/nb.gif" width="30" height="30" alt=""></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), erhält das Fenster eine eigene Menüleiste mit Browser-Befehlen. Wenn nein (<code>no</code>), erhält es keine Menüleiste. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält. Beachten Sie: Bei Safari ist die Menüleiste wie auf dem Macintosh üblich nicht Bestandteil des Fensters, kann also nicht ausgeblendet werden.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>resizable</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/nb.gif" width="30" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/nb.gif" width="30" height="30" alt=""><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), kann der Anwender das Fenster in der Größe verändern. Wenn nein (<code>no</code>), kann er die Fenstergröße nicht ändern. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>screenX</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Horizontalwert der linken oberen Ecke des neuen Fensters in Pixeln, z.B. <code>screenX=100</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>screenY</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/nb.gif" width="60" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Vertikalwert der linken oberen Ecke des neuen Fensters in Pixeln, z.B. <code>screenY=30</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>scrollbars</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op8.gif" width="30" height="30" alt="Opera 8" title="Opera 8"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2"></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), erhält das Fenster Scroll-Leisten. Wenn nein (<code>no</code>), kann der Anwender in dem Fenster nicht scrollen. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>status</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/nb.gif" width="30" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), erhält das Fenster eine eigene Statuszeile. Wenn nein (<code>no</code>), erhält es keine Statuszeile. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>toolbar</code></td>
<td class="code" nowrap="nowrap"><code>yes|no</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/nb.gif" width="30" height="30" alt=""><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Wenn ja (<code>yes</code>), erhält das Fenster eine eigene Werkzeugleiste. Wenn nein (<code>no</code>), erhält es keine Werkzeugleiste. Voreinstellung ist <code>no</code>, beim Internet Explorer jedoch nur, wenn die Optionenzeichenkette mindestens eine Option enthält.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>top</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Vertikalwert der linken oberen Ecke des neuen Fensters in Pixeln, z.B. <code>top=100</code>.</td>
</tr>
<tr>
<td class="code" nowrap="nowrap"><code>width</code></td>
<td class="code" nowrap="nowrap"><code>[Pixel]</code></td>
<td valign="top" nowrap="nowrap"><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0"></td>
<td class="tabxpl">Breite des neuen Fensters in Pixeln, z.B. <code>width=400</code>.</td>
</tr>
</table>



<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_open.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function FensterOeffnen (Adresse) {
  MeinFenster = window.open(Adresse, "Zweitfenster", "width=300,height=400,left=100,top=200");
  MeinFenster.focus();
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;&lt;a href="datei.htm" onclick="FensterOeffnen(this.href); return false">Link mit Fenster&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält zunächst einen normalen Link mit dem Linkziel <var>datei.htm</var>. Im Event-Handler <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/eventhandler.htm#onclick">onclick</a> ist ein Aufruf der Funktion <code>FensterOeffnen()</code> notiert. Das bedeutet, dass die Funktion aufgerufen wird, sobald der Link angeklickt wird. Der Funktion wird mit <code>this.href</code> der Wert des <code>href</code>-Attributs des Links übergeben. <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/objekte.htm#this">this</a> nimmt dabei auf das aktuelle Objekt Bezug, in diesem Fall das <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="htmlelemente.htm#a">Elementobjekt a</a>.</p>

<p>Die Funktion nimmt dementsprechend als ersten Funktionsparameter die Adresse entgegen, die in einem neuen Fenster geöffnet werden soll. Sie ruft die <code>open()</code>-Methode mit dieser Adresse auf und übergibt gleichzeitig den Fensternamen <code>"Zweitfenster"</code> als zweiten Parameter sowie diverse Angaben zum Aussehen des Fensters im dritten Parameter. Anschließend wird das neue Fenster mit <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#focus">focus()</a> in den Vordergrund geholt.</p>

<p>Nach dem Ausführen der Funktion wird schließlich <code>return false</code> ausgeführt. Dies verhindert, dass der Browser im ursprünglichen Fenster ebenfalls <var>datei.htm</var> öffnet. Denn beim Klicken auf einen Link wird normalerweise erst der Event-Handler <code>onclick</code> ausgeführt und anschließend der Link regulär geöffnet.</p>

<p>Diese Vorgehensweise hat den Vorteil, dass der Link auch dann funktioniert, wenn JavaScript nicht zur Verfügung steht oder nicht aktiviert ist. In diesem Fall wird <var>datei.htm</var> einfach im selben Fenster geöffnet anstatt in einem neuen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die meisten Browser erlauben keine Fensterhöhe oder -breite, die kleiner als 100 Pixel ist. Je nach Betriebssystem und Browser wird bei kleineren Fenstern eine Fehlermeldung (Zugriff verweigert) ausgegeben bzw. die jeweiligen Minimalwerte verwendet.<br>
In verschiedenen Browsern kann der Nutzer bestimmte Fenstereigenschaften selbst vorgeben, sodass manche Angaben zum Aussehen des Fensters ignoriert werden. Auch ist es möglich, das Öffnen von neuen Fenstern zu unterbinden. Insbesondere werden solche Fenster verhindert, die sich automatisch z.B. beim Laden einer HTML-Seite öffnen. Alle neueren Browser besitzen sogenannte <i>Popup-Blocker</i>, die das Aufspringen von aufdringlichen Fenstern u.a. mit Werbung verhindern.<br>
Zudem setzen immer mehr Browser auf "Tabbed Browsing", d.h. das Darstellen von mehreren Webseiten in einem Browserfenster, die der Benutzer in einer Leiste als Registerkarten anwählen kann. Sie müssen damit rechnen, dass <code>window.open()</code> in solchen Browsern lediglich eine neue Registerkarte öffnet - oder die Zielseite kurzerhand im selben Karteireiter angezeigt wird. In solchen Fällen sind Ihre Angaben zum Aussehen des neuen Fensters natürlich wirkungslos.<br>
Sie sollten sich also nicht darauf verlassen, dass wirklich ein neues Fenster mit dem gewünschten Aussehen geöffnet wird.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie5.gif" width="30" height="30" alt="MS IE 5.0" title="MS IE 5.0"><img src="../../src/op6.gif" width="30" height="30" alt="Opera 6" title="Opera 6"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2">&nbsp;<a class="an" name="print">print()</a></h2>

<p>Startet den Druckdialog - entspricht dem Menübefehl zum Drucken im Browser. Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_print.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:window.print()"&gt;Diese Seite drucken&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel definiert einen Verweis, mit dessen Hilfe der Anwender die Seite ausdrucken kann.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Der Internet Explorer 5 unter Macintosh interpretiert diese Methode nicht.</p>

<p>Für den Internet Explorer 4.x gibt es einen Workaround, um das Ausdrucken mit JavaScript anzustoßen. Dazu muss ein ActiveX-Control eingebunden werden. Der JavaScript-Code sieht dazu folgendermaßen aus (Beispiel):</p>

<pre>
if (document.all &amp;&amp; navigator.appVersion.substring(22, 23) == 4) {
  self.focus();
  var OLECMDID_PRINT = 6;
  var OLECMDEXECOPT_DONTPROMPTUSER = 2;
  var OLECMDEXECOPT_PROMPTUSER = 1;
  var WebBrowser = '&lt;object id="WebBrowser1" width="0" height="0" classid="CLSID:8856F961-340A-11D0-A96B-00C04FD705A2"&gt;&lt;/object&gt;';
  document.body.insertAdjacentHTML('beforeEnd', WebBrowser);
  WebBrowser1.ExecWB(OLECMDID_PRINT, OLECMDEXECOPT_DONTPROMPTUSER);
  WebBrowser1.outerHTML = '';
}
</pre>


<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="prompt">prompt()</a></h2>

<p>Zeigt ein Dialogfenster mit einem Eingabefeld, einem OK-Button und einem Abbrechen-Button an. Der Anwender kann in dem Eingabefeld etwas eingeben. Die Methode <code>prompt()</code> gibt diesen eingegebenen Wert zurück. So lassen sich Anwendereingaben im Script weiterverarbeiten.<br>
Erwartet zwei Parameter:<br>
<b>1.</b> <i>Aufforderungstext</i> = Text, der beschreibt, was der Anwender eingeben soll.<br>
<b>2.</b> <i>Feldvorbelegung</i> = Text, mit dem das Eingabefeld vorbelegt wird. Wenn Sie ein leeres Eingabefeld wollen, übergeben Sie dafür eine leere Zeichenkette <code>""</code>.<br>
</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_prompt_vor.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
Check = prompt("Geben Sie Ihr Passwort fuer diese Seite ein", "");
if (Check != "Rumpelstielz") {
  history.back();
} else {
  alert("Sie haben Zutritt");
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel bringt vor dem Anzeigen der HTML-Datei mit <code>prompt()</code> ein Dialogfenster auf den Bildschirm. Darin muss der Anwender ein Passwort eingeben. Die Eingabe wird in der Variablen <code>Check</code> gespeichert. Wenn der Wert dieser Variablen nach dem Beenden des Dialogfensters nicht gleich <code>"Rumpelstielz"</code> ist, wird der Anwender mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="history.htm">history</a>.<a href="history.htm#back">back()</a> zu der Seite zurückgeschickt, von der er kam. Wenn das eingegebene Wort stimmt, erhält er mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#alert">alert()</a> die Meldung, dass er Zutritt hat, und die Seite wird geladen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="release_events">releaseEvents()</a></h2>

<p>Beendet die Überwachung von Anwenderereignissen. Gegenstück zu <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#capture_events">captureEvents()</a>. Erwartet als Parameter eine Folge von Ereignissen, die nicht mehr überwacht werden sollen. Gleiche Syntax wie bei <code>captureEvents()</code>.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_release_events.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var i = 0;
window.captureEvents(Event.KEYPRESS);
window.onkeypress = Ausgabe;
function Ausgabe (Ereignis) {
  alert("Sie haben die Taste mit dem Wert " + Ereignis.which + " gedrueckt");
  i = i + 1;
  if (i &gt; 2)
    window.releaseEvents(Event.KEYPRESS);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
Druecken Sie 3 mal irgendwelche Tasten!
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Im Beispiel wird der Event KEYPRESS (<i>Taste gedrückt</i>) überwacht. Wenn der Anwender eine Taste drückt, wird die Funktion <code>Ausgabe()</code> aufgerufen, die mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#alert">alert()</a> ausgibt, welche Taste gedrückt wurde. Die Funktion ruft sich bei Eintritt des Ereignisses selbst wieder auf, jedoch nur, solange der Zähler <code>i</code> kleiner als 3 ist. Danach wird das Überwachen der Tastaturereignisse mit der Methode <code>releaseEvents(Event.KEYPRESS)</code> beendet.<br>
Ein zusammenhängendes Beispiel mit Erläuterungen hierzu finden Sie im Kapitel <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../dhtml/index.htm">Dynamisches HTML</a> im Abschnitt über das <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/netscape.htm#event_objekt">Event-Objekt bei Netscape</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Die Methode <code>releaseEvents()</code> existiert auch bei anderen Browsern, nämlich Netscape 6, Mozilla Firefox, Opera, Konqueror und Safari. Dort ist die Methode allerdings wirkungslos oder hat eine Wirkung, die mit dem Beenden der Ereignisüberwachung nichts zu tun hat. Setzen Sie diese Methode daher nur im Zusammenhang mit Netscape 4 ein.</p>




<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="resize_by">resizeBy()</a></h2>

<p>Verändert die Größe eines Fensters um so viele Pixel unten und rechts wie angegeben. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = um wie viele Pixel das Fenster rechts verkleinert/vergrößert werden soll. Negative Werte verkleinern, positive vergrößern.<br>
<b>2.</b> <i>y-Wert</i> = um wie viele Pixel das Fenster unten verkleinert/vergrößert werden soll. Negative Werte verkleinern, positive vergrößern.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_resize_by.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Kleiner () {
  window.resizeBy(-10, -10);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a href="javascript:Kleiner()"&gt;Mach kleiner&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel enthält einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Kleiner()</code> aufgerufen. Diese Funktion verkleinert das dateieigene Fenster um 10 Pixel in der Breite und in der Höhe.</p>

<h3 class="inf">Beachen Sie:</h3>

<p>Einige Browser setzen nicht nur gewisse Mindestgrößen für Fenster durch, sondern ignorieren je nach Einstellung die Änderung der Fenstergröße durch <code>resizeBy()</code> vollkommen, da viel Unfug mit dieser Methode getrieben wurde.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="resize_to">resizeTo()</a></h2>

<p>Verändert die Größe eines Fensters absolut. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = neue Breite des Fensters.<br>
<b>2.</b> <i>y-Wert</i> = neue Höhe des Fensters.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_resize_to.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body onload="window.resizeTo(580, 420)"&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel setzt die Fenstergröße beim Einlesen der Datei auf eine Breite von 580 Pixeln und auf eine Höhe von 420 Pixeln.</p>

<h3 class="inf">Beachen Sie:</h3>

<p>Einige Browser setzen nicht nur gewisse Mindestgrößen für Fenster durch, sondern ignorieren je nach Einstellung die Änderung der Fenstergröße durch <code>resizeTo()</code> vollkommen, da viel Unfug mit dieser Methode getrieben wurde.</p>

<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0">&nbsp;<a class="an" name="route_event">routeEvent()</a></h2>

<p>Übergibt ein Anwenderereignis an das oberste Objekt der Objekthierarchie des Dokuments, also an das <code>window</code>-Objekt. Vor dort aus wird das Ereignis immer weiter nach unten durchgereicht bis zu dem Element, bei dem das Ereignis eintrat. Wenn sich auf diesem Weg ein Event-Handler findet, der das Ereignis verarbeitet, wird der Abstieg des Ereignisses abgebrochen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_route_event.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Click1 () {
  alert("Sie haben auf den Button geklickt");
}

function Click2 (Ereignis) {
  alert("Sie haben ins Fenster geklickt");
  window.routeEvent(Ereignis);
}

window.captureEvents(Event.CLICK);
window.onclick = Click2;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form action=""&gt;
&lt;input type="button" value="Button" onclick="Click1()"&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel enthält einen Button, bei dessen Anklicken die Funktion <code>Click1()</code> aufgerufen wird. Diese Funktion gibt zur Kontrolle mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#alert">alert()</a> aus, dass der Button angeklickt wurde. Im Beispiel ist es jedoch so, dass beim Einlesen der Datei mit der <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#capture_events">captureEvents()</a>-Methode das Mausklick-Ereignis fensterweit überwacht wird. Wenn das Ereignis eintritt, wird in jedem Fall die Funktion <code>Click2()</code> aufgerufen. Diese gibt zur Kontrolle aus, dass in das Fenster geklickt wurde. Anschließend übergibt sie mit <code>routeEvent()</code> das Ereignis an die Objekthierarchie. Wenn auf ein Objekt geklickt wird, das ebenfalls das Klick-Ereignis überwacht, wird die entsprechende Aktion ausgeführt. Im Beispiel hat dies zur Folge, dass der Anwender beim Klick auf den Button zwei Meldungen erhält: nämlich zuerst die, dass ins Fenster geklickt wurde, und danach die, dass auf den Button geklickt wurde. Ohne die <code>routeEvent()</code>-Methode würde er die zweite Meldung gar nicht erhalten, da das Klick-Ereignis vorher abgefangen worden wäre.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>Mozilla Firefox kennt <code>routeEvent()</code> zwar, die Methode hat dort jedoch keinerlei Wirkung.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="scroll_by">scrollBy()</a></h2>

<p>Scrollt eine Seite automatisch um so viele Pixel nach oben oder unten oder links oder rechts wie angegeben. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = um wie viele Pixel nach rechts links/rechts gescrollt werden soll. Negative Werte scrollen nach links, positive nach rechts.<br>
<b>2.</b> <i>y-Wert</i> = um wie viele Pixel nach oben/unten gescrollt werden soll. Negative Werte scrollen nach oben, positive nach unten.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_scroll_by.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
for (var i = 1; i &lt;= 100; i++)
  document.write("Zeile " + i + "&lt;br&gt;");
function NachOben () {
  var y = 0;
  if (window.pageYOffset) {
    y = window.pageYOffset;
  } else if (document.body &amp;&amp; document.body.scrollTop) {
    y = document.body.scrollTop;
  }
  if (y &gt; 0) {
    window.scrollBy(0, -10);
    setTimeout("NachOben()", 10);
  }
}
&lt;/script&gt;
&lt;a href="javascript:NachOben()"&gt;nach oben scrollen&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel schreibt zu Testzwecken in einer Schleife mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#write">write()</a> 100 Zeilen in die Datei. Unterhalb davon wird ein HTML-Verweis notiert. Um zu diesem Verweis zu gelangen, muss der Anwender wegen der 100 voranstehenden Zeilen erst mal nach unten scrollen. Wenn er auf den Verweis klickt, wird automatisch langsam zum Seitenanfang zurückgescrollt. Dazu wird die Funktion <code>NachOben()</code> aufgerufen. Diese Funktion ermittelt mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#page_y_offset">pageYOffset</a> bzw. im Internet Explorer mit <code>document.body.scrollTop</code> zunächst die vertikale Position innerhalb der Seite. Wenn die so ermittelte Scroll-Position (<code>y</code>-Wert) größer  als 0 ist, wird um -10 Pixel gescrollt, also um 10 Pixel nach oben.
Mit Hilfe der Methode <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_timeout">setTimeout()</a> wird nach 10 Millisekunden die Funktion <code>NachOben()</code> erneut aufgerufen.<br>
Durch den wiederholten Aufruf der Funktion <code>NachOben()</code> wird die Seite langsam bis nach oben gescrollt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js11.gif" width="30" height="30" alt="JavaScript 1.1" title="JavaScript 1.1"><img src="../../src/netsc3.gif" width="30" height="30" alt="Netscape 3.0" title="Netscape 3.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="scroll_to">scrollTo()</a></h2>

<p>Scrollt zu einer bestimmten Position. Erwartet folgende Parameter:<br>
<b>1.</b> <i>x-Wert</i> = Links-Wert für Position der linken oberen Ecke des Anzeigefensters.<br>
<b>2.</b> <i>y-Wert</i> = Oben-Wert für Position der linken oberen Ecke des Anzeigefensters.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_scroll_to.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
function Pos100 () {
  window.scrollTo(100, 100);
}
document.write('&lt;p style="white-space:nowrap"&gt;');
var Zeile = 'Zeile';
for (var i = 1; i &lt;= 50; i++) {
  Zeile = Zeile + " Zeile";
  document.write("&lt;br&gt;Zeile " + Zeile);
}
document.write('&lt;\/p&gt;&lt;p&gt;&lt;a href="javascript:Pos100()">Test&lt;\/a&gt;&lt;\/p&gt;');
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel schreibt zu Testzwecken in einer Schleife mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#write">write()</a> 50 Zeilen, wobei die Zeilen immer länger werden. Ganz am Ende wird ein Verweis notiert. Um dort hin zu gelangen, muss der Anwender nach unten und nach rechts scrollen. Wenn er auf den Verweis klickt, wird die Funktion <code>Pos100()</code> aufgerufen. Diese Funktion setzt die Scroll-Position neu, und zwar auf 100 Pixel von links und 100 Pixel von oben, bezogen auf den Dokumentanfang.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="set_interval">setInterval()</a></h2>

<p>Führt eine Anweisung oder den Aufruf einer Funktion in einem festgelegten Rhythmus immer wieder aus, solange, bis der Vorgang mit <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#clear_interval">clearInterval()</a> beendet wird. Erwartet zwei Parameter:<br>
<b>1.</b> <i>Code</i> = Eine JavaScript-Anweisung, die wiederholt werden soll. Meistens ein Funktionsaufruf.<br>
<b>2.</b> <i>Pause</i> = Wert in Millisekunden bis zum nächsten Ausführen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_set_interval.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;script type="text/javascript"&gt;
var aktiv = window.setInterval("Farbe()", 1000);
var i = 0, farbe = 1;
function Farbe () {
  if (farbe == 1) {
    document.bgColor = "yellow";
    farbe = 2;
  } else {
    document.bgColor = "aqua";
    farbe = 1;
  }
  i = i + 1;
  if (i &gt;= 10)
    window.clearInterval(aktiv);
}
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel definiert mit <code>setInterval()</code>, dass die Funktion <code>Farbe()</code> alle 1000 Millisekunden, also jede Sekunde einmal aufgerufen wird. Wichtig ist, dass der Aufruf in einer Variablen gespeichert wird, im Beispiel in der Variablen <code>aktiv</code>. Diese Variable wird der Methode <code>clearInterval()</code> benötigt, um den Vorgang zu stoppen. Im Beispiel wechselt die Funktion <code>Farbe()</code> bei jedem Aufruf die Hintergrundfarbe der Datei (<img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#bg_color">bgColor</a>). Gleichzeitig wird ein Zähler hochgezählt. Wenn er größer gleich 10 ist, wird die Methode <code>clearInterval()</code> aufgerufen, die den Endlosvorgang stoppt. Dabei wird die zuvor definierte Variable <code>aktiv</code> als Parameter übergeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js10.gif" width="30" height="30" alt="JavaScript 1.0" title="JavaScript 1.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="set_timeout">setTimeout()</a></h2>

<p>Führt eine Anweisung nach einer bestimmten Verzögerungszeit aus. Erwartet zwei Parameter:<br>
<b>1.</b> <i>Code</i> = Eine JavaScript-Anweisung, die verzögert ausgeführt werden soll. Meistens ein Funktionsaufruf.<br>
<b>2.</b> <i>Pause</i> = Wert in Millisekunden bis zum Ausführen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/window_set_timeout.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Hinweis () {
  var x = confirm("Sie sind jetzt schon 10 Sekunden auf dieser Seite. Fortfahren?");
  if (x == false)
    top.close();
}

window.setTimeout("Hinweis()", 10000);
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel ruft nach 10.000 Millisekunden, also nach 10 Sekunden, eine Funktion <code>Hinweis()</code> auf, sofern der Anwender nach dieser Zeit immer noch auf der Seite ist. Die Funktion fragt ihn mit der <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#confirm">confirm()</a>-Methode, ob er noch länger auf der Seite bleiben möchte. Wenn nicht, wird das Hauptfenster geschlossen. Dazu dient der Befehl <code>top.close()</code>, der die <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#close">close()</a>-Methode auf die oberste Fensterinstanz des Browsers anwendet.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>An <code>setTimeout()</code> gekoppelte Funktionsaufrufe können auch Parameter enthalten. Berücksichtigen Sie dabei, dass lokale Variable dann nicht mehr zur Verfügung stehen. Eine Übergabe der Werte mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/operatoren.htm#zeichenkettenverknuepfung">Zeichenkettenverknüpfung</a> ist jedoch jederzeit möglich.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/js12.gif" width="30" height="30" alt="JavaScript 1.2" title="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op6.gif" width="30" height="30" alt="Opera 6" title="Opera 6"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf12.gif" width="30" height="30" alt="Safari 1.2" title="Safari 1.2">&nbsp;<a class="an" name="stop">stop()</a></h2>

<p>Entspricht einem Klick auf den "Stop"-Button im Browser. Der Ladevorgang einer Seite wird dadurch abgebrochen.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
Diese Seite hat einen Umfang von 300 Kilobyte:&lt;br&gt;
&lt;a href="javascript:stop()"&gt;abbrechen&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>
<p>Das Beispiel definiert einen Verweis, bei dessen Anklicken der Ladevorgang einer Seite abgebrochen wird.</p>

<h3 class="inf">Beachten Sie:</h3>
<p>In Opera 5 führt dies zu einem Absturz.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="frames.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="frames.htm">frames</a>
</td></tr>
<tr>
<td class="doc"><a href="hinweise.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="hinweise.htm">Hinweise zur JavaScript-Objektreferenz</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">JavaScript/DOM</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Objektreferenz</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>