<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: JavaScript / Objektreferenz / all</title>
<meta name="description"    content="Welche Aufgaben, Eigenschaften und Methoden das window-Objekt in JavaScript hat.">
<meta name="keywords"       content="SELFHTML, JavaScript, Objekte, all, className, dataFld, dataFormatAs, dataPageSize, dataSrc, id, innerHTML, innerText, isTextEdit, lang, language, length, offsetHeight, offsetLeft, offsetParent, offsetTop, offsetWidth, outerHTML, outerText, parentElement, parentTextEdit, recordNumber, sourceIndex, tagName, title, click, contains, getAttribute, insertAdjacentHTML, insertAdjacentText, removeAttribute, scrollIntoView, setAttribute">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-16T01:48:05+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/javascript/objekte/all.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Objektreferenz" href="index.htm">
<link rel="next" title="style" href="style.htm">
<link rel="prev" title="node" href="node.htm">
<link rel="first" title="Hinweise zur JavaScript-Objektreferenz" href="hinweise.htm">
<link rel="last" title="Objektunabhängige Funktionen" href="unabhaengig.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">JavaScript/DOM</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Objektreferenz</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">all</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p><img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeines">all: Allgemeines zur Verwendung</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#ansprechen">HTML-Elemente ansprechen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#mit_namen_ansprechen">HTML-Elemente mit Namen ansprechen</a><br>
 </p>

<h3>Eigenschaften:</h3>

<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#class_name">className</a> (Klassenname eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#data_fld">dataFld</a> (Datenfeld bei Datenanbindung)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#data_format_as">dataFormatAs</a> (Datentyp bei Datenanbindung)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#data_page_size">dataPageSize</a> (Anzahl Datensätze bei Datenanbindung)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#data_src">dataSrc</a> (Datenquelle bei Datenanbindung)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#id">id</a> (id-Name eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#inner_html">innerHTML</a> (Inhalt eines Elements als HTML)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#inner_text">innerText</a> (Inhalt eines Elements als Text)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#is_text_edit">isTextEdit</a> (Editierbarkeit eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#lang">lang</a> (Sprache eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#language">language</a> (Script-Sprache für ein Element)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#length">length</a> (Anzahl Elemente)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_height">offsetHeight</a> (Höhe eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_left">offsetLeft</a> (Links-Wert der linken oberen Elementecke)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_parent">offsetParent</a> (Elternelement-Position)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_top">offsetTop</a> (Obenwert der linken oberen Elementecke)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_width">offsetWidth</a> (Breite eines Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_html">outerHTML</a> (Elementinhalt plus äußeres HTML)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#outer_text">outerText</a> (Elementinhalt plus äußerem Text)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#parent_element">parentElement</a> (Elternelement)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#parent_text_edit">parentTextEdit</a> (Editierbarkeit des Elternelements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#record_number">recordNumber</a> (Datensatznummer bei Datenanbindung)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#source_index">sourceIndex</a> (wie vieltes Element)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tag_name">tagName</a> (HTML-Tag des Elements)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#title">title</a> (Titel des Elements)</p>

<h3>Methoden:</h3>

<p><img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#click">click()</a> (Element anklicken)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#contains">contains()</a> (Zeichenkette in Element enthalten)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#get_attribute">getAttribute()</a> (Attribut in einem Element ermitteln)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#insert_adjacent_html">insertAdjacentHTML()</a> (Element einfügen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#insert_adjacent_text">insertAdjacentText()</a> (Text einfügen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#remove_attribute">removeAttribute()</a> (Attribut aus Element entfernen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#scroll_into_view">scrollIntoView()</a> (zu Element scrollen)<br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_attribute">setAttribute()</a> (Attribut eines Elements einfügen)
</p>

</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="allgemeines">all: Allgemeines zur Verwendung</a></h2>

<p>Das Objekt <code>all</code>, das in der JavaScript-Objekthierarchie unterhalb des <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>-Objekts liegt, ist der Schlüssel zu <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../dhtml/index.htm">Dynamischem HTML</a> nach dem Ansatz des Internet Explorers ab Version 4.0. Mit Hilfe des <code>all</code>-Objekts haben Sie Script-Zugriff auf alle einzelnen Elemente und Inhalte einer HTML-Datei. Die meisten Eigenschaften können Sie lesen und ändern. Methoden des <code>all</code>-Objekts erlauben unter anderem das Einfügen oder Entfernen von HTML-Tags und von Angaben innerhalb eines HTML-Tags. Auf diese Weise ist der dynamische Zugriff auf alle Bestandteile einer Datei möglich.</p>

<p>Das <code>all</code>-Objekt gehört nicht zum offiziellen JavaScript-Sprachstandard. Es wurde von Microsoft für den Internet Explorer 4.0 implementiert. Das <code>all</code>-Objekt funktioniert zwar auch prima innerhalb von Script-Bereichen, die mit "JavaScript" ausgezeichnet sind, doch es ist bislang eigentlich nur Bestandteil von JScript, dem Microsoft-Derivat von JavaScript. Mit den neuen Browser-Generationen und dem Document Object Model (DOM) wird das <code>all</code>-Objekt durch die <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="htmlelemente.htm">HTML-Elementobjekte</a> und das <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="node.htm">node</a>-Objekt verdrängt. Es hat also keine Zukunft mehr und sollte allenfalls noch aus Gründen der Rückwärtskompatibilität eingesetzt werden.</p>

<p>Damit veraltete Scripte, die ohne <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/objekte.htm#existenzabfrage">Existenzabfrage</a> das <code>all</code>-Objekt verwenden lauffähig sind, haben die Browser Opera ab der Version 7 und Mozilla Firefox 1.0 (dieser nur im <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/box_modell.htm#doctype_switch">Quirks-Modus</a> und auch nicht abfragbar) eine teilweise Unterstützung des <code>all</code>-Objekts eingebaut. Deshalb funktionieren einige der folgenden Beispiele in diesen Browsern. Wenn das jeweilige Element jedoch mit DOM-Methoden angesprochen wird, z.B. mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>, gelingt der Zugriff auf die Eigenschaften auch schon in älteren Opera-Versionen ab 5.12.</p>

<p>Nichtsdestoweniger sollten Sie <code>all</code> nur verwenden, um den Internet Explorer 4.0 zu bedienen. Das <code>all</code>-Objekt ist aus heutiger Sicht aus dem Grund interessant, weil einige der von Microsoft erfundenen Elementeigenschaften von vielen anderen Browsern übernommen wurden und sich großer Beliebtheit erfreuen, z.B. <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#inner_html">innerHTML</a>. Diese können Sie auch zusammen mit DOM-Methoden verwenden.</p>

<p>Eine zusammenhängende Einführung in das Arbeiten mit dem <code>all</code>-Objekt finden Sie im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/microsoft.htm">Das ältere DHTML-Modell von Microsoft</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/safwk.gif" width="30" height="30" alt="Safari WebKit (Entwicklerversion)" title="Safari WebKit (Entwicklerversion)">&nbsp;<a class="an" name="ansprechen">HTML-Elemente ansprechen</a></h2>

<p>Das <code>all</code>-Objekt behandelt alle HTML-Tags, die in einer HTML-Datei notiert sind, als Kette von Elementen. Sie können jedes einzelne HTML-Tag in einer Datei ansprechen:</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_allgemeines.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Aendern () {
  document.all.tags("h1")[0].innerText = "Anderer Inhalt";
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;eine Überschrift&lt;/h1&gt;
&lt;a href="javascript:Aendern()"&gt;Aendern&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält eine Überschrift und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Aendern()</code> aufgerufen. Diese Funktion ändert den Text der Überschrift dynamisch in <code>"Anderer Inhalt"</code>.</p>

<p>Um ein bestimmtes HTML-Tag anzusprechen, notieren Sie <code>document.all.tags</code>. Dahinter folgt, in runden Klammern und in Anführungszeichen, der Name des HTML-Tags, auf das Sie zugreifen möchten. Im Beispiel soll auf ein <code>&lt;h1&gt;</code>-Tag zugegriffen werden, also muss <code>("h1")</code> notiert werden. Damit haben Sie eine Art Zwischenobjekt, nämlich eine Kette aus allen <code>&lt;h1&gt;</code>-Elementen der Datei. Nun müssen Sie noch angeben, welches Sie meinen. Im Beispiel gibt es zwar nur eine <code>&lt;h1&gt;</code>-Überschrift, aber es könnte ja auch mehrere davon geben. Dazu notieren Sie in eckigen Klammern, das wie vielte HTML-Tag vom angegebenen Typ Sie meinen. Beachten Sie, dass der Zähler bei 0 beginnt, d.h. das erste Element sprechen Sie mit <code>[0]</code> an, das zweite mit <code>[1]</code> usw. Beim Zählen gilt die Reihenfolge, in der die HTML-Tags des ausgewählten Typs in der Datei notiert sind.</p>

<p>Nachdem Sie ein bestimmtes, eindeutiges HTML-Tag angesprochen haben, können Sie dahinter eine der Eigenschaften oder Methoden des <code>all</code>-Objekts auf dieses HTML-Tag anwenden.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7">&nbsp;<a class="an" name="mit_namen_ansprechen">HTML-Elemente mit Namen ansprechen</a></h2>

<p>Sie können jedes HTML-Element in einem Script auch mit einem Namen ansprechen. Voraussetzung ist, dass das HTML-Element einen Namen durch die Attribute <code>id</code> bzw. <code>name</code> erhalten hat.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_ansprechen.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function MachPzuH () {
  document.all.MeinElement.outerHTML = "&lt;h1&gt;" + document.all["MeinElement"].innerText + "&lt;\/h1&gt;";
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p id="MeinElement"&gt;Ein Element mit Text&lt;/p&gt;
&lt;a href="javascript:MachPzuH()"&gt;Mach P zu H&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Absatz und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>MachPzuH()</code> aufgerufen. Diese Funktion verwandelt den Absatz dynamisch in eine Überschrift 1. Ordnung.</p>

<p>Um ein HTML-Element mit seinem Namen anzusprechen, müssen Sie im einleitenden Tag des Elements das Attribut <code>id</code> notieren und dahinter einen Namen vergeben. Im Beispiel ist das der Name <code>"MeinElement"</code>. Dann können Sie dieses Element mit <code>document.all.ElementName</code>, im Beispiel also mit <code>document.all.MeinElement</code>, ansprechen.</p>

<p>Alternativ können Sie, wie im zweiten Teil des Beispieles, das Element mit   <code>document.all["MeinElement"]</code> ansprechen. Über diese Art des Ansprechen eines Elementes können Sie auch Variablen übergeben. Dazu notieren Sie einfach den Variablennamen  ohne Anführungszeichen  anstatt eines festen Wertes z.B. <code>document.all[Variablenname]</code>.
Voraussetzung ist jedoch, dass die Variable auch existiert.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="class_name">className</a></h2>

<p>Speichert die Klasse, zu der ein Element gehört.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_class_name.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type="text/css"&gt;
p.normal { color:black }
p.spezial { color:red }
&lt;/style&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p class="normal" id="derAbsatz"&gt;Text&lt;/p&gt;
&lt;script type="text/javascript"&gt;
document.write("&lt;br&gt;Klasse davor: " + document.all.derAbsatz.className);
document.all.derAbsatz.className = "spezial";
document.write("&lt;br&gt;Klasse danach: " + document.all.derAbsatz.className);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel werden im Dateikopf mit Hilfe von <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../css/index.htm">Stylesheets</a> zwei Klassen für das <code>p</code>-Element definiert: eine Klasse <code>normal</code> und eine Klasse <code>spezial</code>. Im Dateikörper wird ein Absatz definiert, der zunächst die Klasse <code>normal</code> zugewiesen bekommt. In einem Script wird der Klassenname des Absatzes zunächst mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#write">write()</a> zur Kontrolle in die Datei geschrieben. Dann wird dem Absatz die andere definierte Klasse zugewiesen. Dabei übernimmt der Absatz auch dynamisch alle Stylesheet-Eigenschaften der neuen Klasse. Anschließend wird der neue Klassenname zur Kontrolle auch noch mal in die Datei geschrieben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>className</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="data_fld">dataFld</a></h2>

<p>Speichert den Namen eines Datenfeldes, das zur Ausgabe eines Datensatzes gehört. Dies bezieht sich auf das Konzept der Datenanbindung. Zur Einführung in das Thema lesen Sie den Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/datenanbindung.htm">Datenanbindung (Microsoft)</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;tr&gt;
&lt;td&gt;&lt;b&gt;Vorname:&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;span id="Test" datafld="vorname"&gt;
&lt;/span&gt;&lt;input type="button" value="Test"
onclick="alert(document.all.Test.dataFld)"&gt;
&lt;/td&gt;
&lt;/tr&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel stellt eine Tabellenzeile dar, in der ein Datenfeld ausgegeben wird (Die übrigen Befehle zur Datenanbindung fehlen hier). Zu Testzwecken ist ein Button eingefügt, bei dessen Anklicken der Name des Datenfeldes mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgegeben wird. Es ist der Feldname, der im Attribut <code>datafld</code> steht. Wenn Sie den Wert dynamisch ändern, können Sie in der gleichen Tabellenzelle beispielsweise ein anderes Feld ausgeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="data_format_as">dataFormatAs</a></h2>

<p>Speichert den Ausgabetyp eines Datenfeldes, das zur Ausgabe eines Datensatzes gehört. Dies bezieht sich auf das Konzept der Datenanbindung. Zur Einführung in das Thema lesen Sie den Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/datenanbindung.htm">Datenanbindung (Microsoft)</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;tr&gt;
&lt;td&gt;&lt;b&gt;Vorname:&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;span id="Test" datafld="vorname" dataformatas="HTML"&gt;
&lt;/span&gt;&lt;input type="button" value="Test"
onclick="alert(document.all.Test.dataFormatAs)"&gt;
&lt;/td&gt;
&lt;/tr&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel stellt eine Tabellenzeile dar, in der ein Datenfeld ausgegeben wird (Die übrigen Befehle zur Datenanbindung fehlen hier). Zu Testzwecken ist ein Button eingefügt, bei dessen Anklicken der Ausgabetyp des Datenfeldes mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> angezeigt wird. Da dieser im Ausgabebereich mit "HTML" festgelegt wurde, wird dieser Wert ausgegeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="data_page_size">dataPageSize</a></h2>

<p>Speichert, wie viele Datensätze gleichzeitig ausgegeben werden sollen. Dies bezieht sich auf das Konzept der Datenanbindung. Zur Einführung in das Thema lesen Sie den Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/datenanbindung.htm">Datenanbindung (Microsoft)</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;input type="button" value="Test"
onclick="document.all.Anzeigetabelle.dataPageSize = 5"&gt;
&lt;table id="Anzeigetabelle" datasrc="#Adressen" datapagesize="1"&gt;
...usw. Daten ...
&lt;/table&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel deutet eine Tabelle an, die zur Ausgabe von Daten aus einer Datenanbindung gedacht ist (Die übrigen Befehle zur Datenanbindung fehlen hier). Da im einleitenden <code>&lt;table&gt;</code>-Tag die Angabe <code>datapagesize="1"</code> steht, wird in der Tabelle immer nur ein Datensatz gleichzeitig ausgegeben. Zu Testzwecken ist ein Button eingefügt, bei dessen Anklicken sich der Wert auf 5 ändert. Danach werden immer 5 Datensätze gleichzeitig angezeigt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="data_src">dataSrc</a></h2>

<p>Speichert den Verweis auf das <code>&lt;object&gt;</code>-Tag, in dem eine Datenanbindung definiert wird. Dies bezieht sich auf das Konzept der Datenanbindung. Zur Einführung in das Thema lesen Sie den Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/datenanbindung.htm">Datenanbindung (Microsoft)</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;input type="button" value="Test"
onclick="alert(document.all.Anzeigetabelle.dataSrc)"&gt;
&lt;table id="Anzeigetabelle" datasrc="#Adressen" datapagesize="1"&gt;
...usw. Daten ...
&lt;/table&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel deutet eine Tabelle an, die zur Ausgabe von Daten aus einer Datenanbindung gedacht ist (Die übrigen Befehle zur Datenanbindung fehlen hier). Zu Testzwecken ist ein Button eingefügt, bei dessen Anklicken der Verweis auf die Datenquelle ausgegeben wird. Da dieser im Ausgabebereich mit <code>"#Adressen"</code> festgelegt wurde, wird dieser Wert ausgegeben. Durch Ändern dieser Objekteigenschaft können Sie dynamisch die Datenquelle wechseln. Voraussetzung ist, dass für den neuen Verweis auf die Datenquelle ein entsprechendes <code>&lt;object&gt;</code>-Tag für die Datenquelle definiert ist.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="id">id</a></h2>

<p>Speichert den Namen eines Elements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_id.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="meinAbsatz"&gt;Text&lt;/p&gt;
&lt;script type="text/javascript"&gt;
document.write("&lt;br&gt;Name des Absatzes: " + document.all.meinAbsatz.id);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird ein Absatz definiert, der mit dem <code>id</code>-Attribut den Namen <code>"meinAbsatz"</code> zugewiesen bekommt. In einem Script wird der vergebene Name mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm">document</a>.<a href="document.htm#write">write()</a>  zur Kontrolle in die Datei geschrieben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>id</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="inner_html">innerHTML</a></h2>

<p>Speichert den Inhalt eines HTML-Elements. Wenn Sie beim dynamischen Ändern des gespeicherten Inhalts HTML-Tags notieren, werden diese bei der Aktualisierung des Elementinhalts interpretiert.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_inner_html.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var Neu = "neuer &lt;b&gt;fetter&lt;\/b&gt; Text";
function Aendern () {
  document.all.meinAbsatz.innerHTML = Neu;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="meinAbsatz"&gt;Text&lt;/p&gt;
&lt;a href="javascript:Aendern()"&gt;Anderer Text&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Textabsatz und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Aendern()</code> aufgerufen. Diese Funktion weist dem Absatz mit der <code>id="meinAbsatz"</code> für die Eigenschaft <code>innerHTML</code> den Wert der zuvor definierten Variablen <code>Neu</code> zu. Der Inhalt des Absatzes ändert sich dann dynamisch und berücksichtigt dabei auch die HTML-Formatierung <code>&lt;b&gt;</code>...<code>&lt;/b&gt;</code> beim neuen Inhalt des Elements.</p>

<p>Die Eigenschaft <code>innerHTML</code> sollten Sie nicht direkt beim Einlesen der HTML-Datei anwenden, sondern immer erst abhängig von Aktionen wie Verweisklicks oder Button-Klicks oder mit einem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#set_timeout">setTimeout()</a> von einigen Sekunden davor. Bei Anwendung direkt beim Einlesen der Datei meldet der Internet Explorer 4.0 einen Laufzeitfehler.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>innerHTML</code>.</p>

<p>Der Internet Explorer ist aus irgendeinem Grund nicht in der Lage, <code>innerHTML</code> auf die HTML-Elemente <code>table;</code>, <code>thead</code>, <code>tbody</code>, <code>tfoot</code> und <code>tr</code> schreibend anzuwenden. Man kann Tabellen also nicht über <code>innerHTML</code> verändern, sondern ist gezwungen, entweder ein die Tabelle einschließendes Element mit einer kompletten Tabelle neu zu schreiben, oder z.B. mit den DOM-Methoden zu arbeiten.</p>

<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="inner_text">innerText</a></h2>

<p>Speichert den Textinhalt eines HTML-Elements. Sie können den Inhalt dynamisch ändern.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_inner_text.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var Neu = "neuer Text";
function Aendern () {
  document.all.meinAbsatz.innerText = Neu;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="meinAbsatz"&gt;Text&lt;/p&gt;
&lt;a href="javascript:Aendern()"&gt;Anderer Text&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Textabsatz und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Aendern()</code> aufgerufen. Diese Funktion weist dem Absatz mit der <code>id="meinAbsatz"</code> für die Eigenschaft <code>innerText</code> den Wert der zuvor definierten Variablen <code>Neu</code> zu. Der Inhalt des Absatzes ändert sich dann dynamisch.</p>

<p>Die Eigenschaft <code>innerText</code> sollten Sie nicht direkt beim Einlesen der HTML-Datei anwenden, sondern immer erst abhängig von Aktionen wie Verweisklicks oder Button-Klicks oder mit einem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#set_timeout">setTimeout()</a> von einigen Sekunden davor. Bei Anwendung direkt beim Einlesen der Datei meldet der Internet Explorer 4.0 einen Laufzeitfehler.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>innerText</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="is_text_edit">isTextEdit</a></h2>

<p>Speichert, ob ein Element editierbar ist oder nicht. Wenn editierbar, hat die Eigenschaft den Wert <code>true</code>, wenn nicht editierbar, hat sie den Wert <code>false</code>. Derzeit sind nur bestimmte Formularelemente editierbar.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_is_text_edit.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Ausgabe () {
  var Ausgabetext = "";
  for (var i = 0; i &lt; document.Testform.length; ++i)
    Ausgabetext = Ausgabetext + "&lt;br&gt;" + document.all.tags("input")[i].isTextEdit;
  document.all.Ausgabe.innerHTML = Ausgabetext;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;form name="Testform" action=""&gt;
&lt;input type="text" size="30"&gt;&lt;br&gt;
&lt;input type="radio"&gt;&lt;br&gt;
&lt;input type="button" value="Test" onclick="Ausgabe()"&gt;
&lt;/form&gt;
&lt;p id="Ausgabe"&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel definiert ein Formular mit einigen verschiedenen Elementen. Das letzte Element ist ein Button. Beim Anklicken des Buttons wird die Funktion <code>Ausgabe()</code> aufgerufen. Diese Funktion ermittelt in einer Schleife für jedes Element des Formulars, ob es editierbar ist oder nicht. Die Werte werden in einer Variablen <code>Ausgabetext</code> gesammelt und HTML-formatiert. Am Ende wird dem Textabsatz, der in der Datei am Ende definiert ist, mit der Eigenschaft <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#inner_html">innerHTML</a> der gespeicherte Wert von <code>Ausgabetext</code> zugewiesen. Auf diese Weise steht hinterher in der Datei, welche der Formularfelder als editierbar gelten und welche nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="lang">lang</a></h2>

<p>Speichert die Sprache eines HTML-Elements, wie sie im <code>lang</code>-Attribut definierbar ist.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_lang.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz" lang="it"&gt;mi chiamo Stefan&lt;/p&gt;
&lt;script type="text/javascript"&gt;
alert(document.all.Absatz.lang);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird ein Textabsatz definiert, dem mit dem <code>lang</code>-Attribut die Sprache Italienisch (<code>it</code>) zugewiesen wird. Unterhalb davon steht ein kleines JavaScript, das mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> den vergebenen Wert für die Sprache ausgibt.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>lang</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="language">language</a></h2>

<p>Speichert, welche Script-Sprache in einem aktuellen Script verwendet wird.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_language.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script language="JScript" type="text/jscript"&gt;
alert(document.all.tags("script")[0].language);
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel gibt mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> aus, welche Script-Sprache die Ausgabe bewirkt hat. Das ist derjenige Wert, der im <code>&lt;script&gt;</code>-Tag beim Attribut <code>language</code> vergeben wurde. Da der Internet Explorer mehrere Script-Sprachen beherrscht, kann dieser Befehl in manchen Fällen für Gewissheit sorgen, etwa, wenn man ihn in eine if-Abfrage einbettet.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>language</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="length">length</a></h2>

<p>Speichert die Anzahl HTML-Tags einer HTML-Datei. Tags, die aus einem einleitenden und einem abschließenden Tag bestehen, werden als ein Tag gezählt.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_length.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;Ein Absatz&lt;/p&gt;
&lt;p&gt;Noch ein Absatz&lt;/p&gt;
&lt;script type="text/javascript"&gt;
alert("Diese Datei hat " + document.all.length + " HTML-Tags");
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel zeigt eine vollständige HTML-Datei mit Grundgerüst, zwei Textabsätzen und einem Script. Innerhalb des Script wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a>  ausgegeben, wie viele HTML-Tags die Datei enthält.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="offset_height">offsetHeight</a></h2>

<p>Speichert die Höhe eines Elements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_offset_height.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body id="DieseDatei"&gt;
&lt;script type="text/javascript"&gt;
alert(document.all.DieseDatei.offsetHeight);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel gibt mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> die reale Höhe des <code>&lt;body&gt;</code>-Tags der Datei aus. Das Ergebnis ist die tatsächliche Anzeigehöhe des Fensters, in dem das Dokument angezeigt wird. Die Eigenschaft lässt sich aber ebensogut auf HTML-Elemente innerhalb der angezeigten Inhalte anwenden.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>offsetHeight</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="offset_left">offsetLeft</a></h2>

<p>Speichert den Abstand eines Elementes zum linken Rand des in der Eigenschaft <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#offset_parent">offsetParent</a> gespeicherten Offset-Elternelementes.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_offset_left.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;div id="Bereich" style="padding:20px"&gt;
&lt;p id="Absatz"&gt;Hier etwas Text&lt;/p&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;
alert(document.all.Bereich.offsetLeft);
alert(document.all.Absatz.offsetLeft);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird ein <code>&lt;div&gt;</code>-Tag mit einem <code>&lt;p&gt;</code>-Tag innerhalb davon definiert. Damit ein wenig innerer Abstand in die Sache kommt, wird beim <code>&lt;div&gt;</code>-Tag mit Hilfe einer Stylesheet-Angabe ein Innenabstand definiert. Unterhalb dieser Befehle steht ein JavaScript, das die Abstände der beiden Elemente zum jeweiligen linken Rand des Offset-Elternelementes mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgibt. Das Offset-Elternelement des Elementes <code>Bereich</code> ist das Body-Element. Für dieses Element wird der Abstand zwischen Body und Bereich in der Eigenschaft <code>offsetLeft</code> gespeichert. Das Offset-Elternelement des Elementes <code>Absatz</code> ist das Element <code>Bereich</code> selbst. In der Eigenschaft <code>offsetLeft</code> ist jetzt der Abstand vom linken Rand vom Element <code>Bereich</code> bis zum Element gespeichert.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Besitzt ein Element einen Innenabstand (<code>padding</code>), so ist im Internet Explorer 5.0 die Eigenschaft <code>offsetLeft</code> fehlerhaft, da der gesetzte Innenabstand in die Angabe mit einfließt. Das gilt auch für Padding-Angaben, die in einem inneren Element definiert sind.</p>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>offsetLeft</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="offset_parent">offsetParent</a></h2>

<p>Speichert dasjenige Elternelement eines Elements, von dessen Positionierung die Positionierung des Elements abhängt. <code>offsetParent</code> ist dabei eine Art Zeiger auf das übergeordnete Element. Hinter der Eigenschaft lassen sich wiederum alle Eigenschaften und Methoden des <code>all</code>-Objekts notieren. Diese gelten dann für das Element, auf das der Zeiger zeigt.  Existiert kein Offset-Elternelement so hat die Eigenschaft <code>offsetParent</code> den Wert <code>null</code>.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_offset_parent.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;
&lt;a&gt;&lt;b id="Fett"&gt;Hier etwas Text&lt;/b&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;script type="text/javascript"&gt;
var Eltern = document.all.Fett.offsetParent;
while (Eltern) {
  document.write(Eltern.tagName + "&lt;br&gt;");
  Eltern = Eltern.offsetParent;
}
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel ist eine Tabelle notiert, in deren einziger Zelle weitere Elemente enthalten sind. Das innerste Element ist das Element <code>&lt;b&gt;..&lt;/b&gt;</code> mit dem id-Namen <code>Fett</code>. Im nachfolgenden JavaScript-Bereich wird der Variablen <code>Eltern</code> das Offset-Elternelement des Elementes <code>Fett</code> mit Hilfe von <code>offsetParent</code> zugewiesen. Die nachfolgende <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/schleifen.htm#while">while</a>-Schleife gibt zu jedem Offset-Elternelement den Namen des Tags aus. Anschließend wird der Variablen <code>Eltern</code> das Offset-Elternelement des gerade angesprochenen Elementes zugewiesen. Die Schleife bricht ab, wenn kein Offset-Elternelement mehr existiert. So, wie im Beispiel die <code>all</code>-Objekteigenschaft <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tag_name">tagName</a> auf <code>offsetParent</code> angewendet wird, lassen sich auch alle anderen Eigenschaften und Methoden des <code>all</code>-Objekts auf das Element anwenden.</p>

<p>Im Unterschied zur Eigenschaft  <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#parent_element">parentElement</a> wird in der Eigenschaft <code>offsetParent</code> immer dasjenige Element gespeichert, das die Position des Elements im Fenster festlegt.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Im Internet Explorer 4.0 ist das Offset-Elternelement von einer Tabellenzelle immer die Tabellenzeile. Ab dem Internet Explorer 5.0 wird als Offset-Elternelement einer Zelle die Tabelle selbst angesehen.</p>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>offsetParent</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>


<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="offset_top">offsetTop</a></h2>

<p>Speichert den Abstand eines Elements zum oberen Rand des in der Eigenschaft <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#offset_parent">offsetParent</a> gespeicherten Offset-Elternelements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_offset_top.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;div id="Bereich" style="padding:20px"&gt;
&lt;p id="Absatz"&gt;Hier etwas Text&lt;/p&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;
alert(document.all.Bereich.offsetTop);
alert(document.all.Absatz.offsetTop);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel wird ein <code>&lt;div&gt;</code>-Tag mit einem <code>&lt;p&gt;</code>-Tag innerhalb davon definiert. Damit ein wenig innerer Abstand in die Sache kommt, wird beim <code>&lt;div&gt;</code>-Tag mit Hilfe einer Stylesheet-Angabe ein Innenabstand definiert. Unterhalb dieser Elemente ist ein JavaScript notiert, das mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> die Abstände der beiden Elemente zum oberen Rand des Offset-Elternelementes ausgibt.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Im Internet Explorer 5.0 wird in einem untergeordneten Element eine bestehende Padding-Angabe des übergeordneten Elementes nicht berücksichtigt, sofern sich kein Element vor dem abgefragten Element befindet.</p>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>offsetTop</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="offset_width">offsetWidth</a></h2>

<p>Speichert die Breite eines Elements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_offset_width.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body id="DieseDatei"&gt;
&lt;script type="text/javascript"&gt;
alert(document.all.DieseDatei.offsetWidth);
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel gibt mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> die reale Breite des <code>&lt;body&gt;</code>-Tags der Datei aus. Das Ergebnis ist die tatsächliche Anzeigebreite des Fensters, in dem das Dokument angezeigt wird. Die Eigenschaft lässt sich aber ebensogut auf HTML-Elemente innerhalb der angezeigten Inhalte anwenden.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>offsetWidth</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="outer_html">outerHTML</a></h2>

<p>Speichert den Inhalt eines HTML-Tags plus das Anfangs- und End-Tag mit allen Angaben.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_outer_html.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a id="Verweis" href="javascript:alert(this.Verweis.outerHTML)"&gt;Verweis&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis, der beim Anklicken seinen eigenen vollständigen HTML-Konstrukt mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgibt.</p>

<p>Die Eigenschaft <code>outerHTML</code> sollten Sie nicht direkt beim Einlesen der HTML-Datei anwenden, sondern immer erst abhängig von Aktionen wie Verweisklicks oder Button-Klicks oder mit einem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#set_timeout">setTimeout()</a> von einigen Sekunden davor. Bei Anwendung direkt beim Einlesen der Datei meldet der Internet Explorer 4.0 einen Laufzeitfehler.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="outer_text">outerText</a></h2>

<p>Speichert den gleichen Wert wie <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#inner_text">innerText</a>, kann jedoch beim Ändern umgebende HTML-Tags entfernen und durch Text ersetzen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_outer_text.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  document.all.fett.outerText = document.all.fett.innerText;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;Text mit &lt;b id="fett" onclick="Test()"&gt;fetter Schrift&lt;/b&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Text mit einem als fett markierten Teil. Beim Anklicken des fetten Teils wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion ersetzt den Wert von <code>outerText</code> des fetten Elements durch den Wert von <code>innerText</code> des gleichen Elements. Der Effekt ist, dass die Formatierung mit <code>&lt;b&gt;</code>...<code>&lt;/b&gt;</code> verloren geht, weil outerText intern die umgebende HTML-Formatierung mit speichert, innerText aber nicht.</p>

<p>Die Eigenschaft <code>outerText</code> sollten Sie nicht direkt beim Einlesen der HTML-Datei anwenden, sondern immer erst abhängig von Aktionen wie Verweisklicks oder Button-Klicks oder mit einem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#set_timeout">setTimeout()</a> von einigen Sekunden davor. Bei Anwendung direkt beim Einlesen der Datei meldet der Internet Explorer 4.0 einen Laufzeitfehler.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>outerText</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="parent_element">parentElement</a></h2>

<p>Speichert das Elternelement eines Elements. <code>parentElement</code> ist dabei eine Art Zeiger auf das übergeordnete Element. Hinter der Eigenschaft lassen sich wiederum alle Eigenschaften und Methoden des <code>all</code>-Objekts notieren. Diese gelten dann für das Element, auf das der Zeiger zeigt. Existiert kein Elternelement so hat die Eigenschaft <code>parentElement</code> den Wert null.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_parent_element.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;
&lt;a&gt;&lt;b id="Fett"&gt;Hier etwas Text&lt;/b&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;script type="text/javascript"&gt;
var Eltern = document.all.Fett.parentElement;
while (Eltern) {
  document.write(Eltern.tagName + "&lt;br&gt;");
  Eltern = Eltern.parentElement;
}
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Im Beispiel ist eine Tabelle notiert, in deren einziger Zelle weitere Elemente enthalten sind. Das innerste Element ist das Element <code>&lt;b&gt;..&lt;/b&gt;</code> mit dem Namen <code>Fett</code>. Im JavaScript-Bereich wird der Variablen <code>Eltern</code> das Elternelement des Elementes <code>Fett</code> mit der Eigenschaft <code>parentElement</code> zugewiesen. Die nachfolgende <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../sprache/schleifen.htm#while">while</a>-Schleife gibt von jedem Elternelement den Namen des Tags aus. Anschließend wird der Variablen <code>Eltern</code> das Elternelement des gerade angesprochenen Elementes zugewiesen. Die Schleife bricht ab, wenn kein Elternelement mehr existiert. So, wie im Beispiel die <code>all</code>-Objekteigenschaft <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#tag_name">tagName</a> auf <code>parentElement</code> angewendet wird, lassen sich auch alle anderen Eigenschaften und Methoden des <code>all</code>-Objekts auf das Element anwenden.</p>

<p>Im Unterschied zur Eigenschaft <img src="../../src/up.gif" width="14" height="10" alt="nach oben">&nbsp;<a href="#offset_parent">offsetParent</a> wird in der Eigenschaft <code>parentElement</code> immer das unmittelbar übergeordnete Element gespeichert.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>parentElement</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="parent_text_edit">parentTextEdit</a></h2>

<p>Speichert das nächsthöhere Element in der Elementhierarchie, das Editieren von Text erlaubt.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_parent_text_edit.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  alert(document.all.Verweis.parentTextEdit.tagName);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a id="Verweis" href="javascript:Test()"&gt;Editieren?&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion gibt mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> den Namen desjenigen HTML-Tags aus, das aus Sicht des Verweises das nächsthöhere Element darstellt, das Editieren von Text erlaubt. Im Beispiel ist dies das <code>&lt;body&gt;</code>-Tag. Der Inhalt dieses Tags ist zwar nicht editierbar, aber es ist dasjenige nächsthöhere Tag, unterhalb dessen editierbare Elemente wie Formulareingabefelder notiert werden können.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Internet Explorer 5.0 Macintosh Edition interpretiert dieses Beispiel nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="record_number">recordNumber</a></h2>

<p>Speichert, der wie vielte Datensatz angezeigt wird. Dies bezieht sich auf das Konzept der Datenanbindung. Zur Einführung in das Thema lesen Sie den Abschnitt über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../dhtml/modelle/datenanbindung.htm">Datenanbindung (Microsoft)</a>.</p>

<h3 class="xmp">Beispiel:</h3>

<pre>
&lt;tr&gt;
&lt;td&gt;&lt;b&gt;Vorname:&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;span id="Test" datafld="vorname"&gt;
&lt;/span&gt;&lt;input type="button" value="Test"
onclick="alert(document.all.Test.recordNumber)"&gt;
&lt;/td&gt;
&lt;/tr&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel stellt eine Tabellenzeile dar, in der ein Datenfeld ausgegeben wird (Die übrigen Befehle zur Datenanbindung fehlen hier). Zu Testzwecken ist ein Button eingefügt, bei dessen Anklicken die Datensatznummer des aktuell angezeigten Datensatzes ausgegeben wird.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op76.gif" width="30" height="30" alt="Opera 7.60" title="Opera 7.60"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="source_index">sourceIndex</a></h2>

<p>Speichert, das wievielte HTML-Element ein Element innerhalb einer HTML-Datei ist.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_source_index.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;Etwas Text mit&lt;br&gt;Zeilenumbruch&lt;/p&gt;
&lt;p id="Absatz"&gt;HTML-Element, aber das wie vielte?&lt;/p&gt;
&lt;a href="javascript:alert(document.all.Absatz.sourceIndex)"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält verschiedene Elemente, unter anderem einen Absatz mit dem id-Namen <code>"Absatz"</code>. Außerdem enthält das Beispiel einen Verweis. Beim Anklicken des Verweises wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgegeben, das wie vielte Element der Absatz mit besagtem Namen innerhalb der HTML-Datei ist. Im Beispiel ist es das 7. Element, denn es werden alle einleitenden und alleinstehenden HTML-Tags der gesamten HTML-Datei gezählt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jsread.gif" width="60" height="30" alt="Lesen">&nbsp;<a class="an" name="tag_name">tagName</a></h2>

<p>Speichert den HTML-Tagnamen eines Elements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_tag_name.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body id="DieseDatei"&gt;
&lt;a href="javascript:alert(document.all.DieseDatei.tagName)"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis. Beim Anklicken des Verweises wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> der HTML-Tagname desjenigen Elements ausgegeben, das den id-Namen <code>"DieseDatei"</code> hat. Im Beispiel ist es das <code>&lt;body&gt;</code>-Tag.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>tagName</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3"><img src="../../src/jswrite.gif" width="60" height="30" alt="Lesen/Ändern">&nbsp;<a class="an" name="title">title</a></h2>

<p>Speichert den Wert, der im Attribut <code>title</code> eines Elements vergeben wurde. Dieses Attribut ist beim Internet Explorer bei allen sichtbaren Elementen erlaubt und bewirkt beim Darüberfahren mit der Maus, dass eine Art Tooltip (Hilfetext-Popup) zu dem Element angezeigt wird.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_title.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz" title="Hilfe zum Text" onclick="alert(document.all.Absatz.title)"&gt;Text&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Textabsatz. Dieser Textabsatz erhält mit dem Attribut <code>title</code> einen Tooltip-Text. Beim Darüberfahren mit der Maus erscheint der Tooltip als kleines Popup-Fenster. Beim Anklicken des Absatzes wird der gleiche Text mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Eigenschaft <code>title</code>.</p>

<p>In Opera funktioniert das Beispiel ab Version 5.12 bei Zugriff mittels <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#get_element_by_id">document.getElementById()</a>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7">&nbsp;<a class="an" name="click">click()</a></h2>

<p>Bewirkt, dass ein Element angeklickt wird, so wie wenn der Anwender mit der Maus auf das Element klickt. Erwartet keine Parameter.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_click.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;a id="V1" href="javascript:alert('Verweis 1 geklickt')"&gt;Verweis 1&lt;/a&gt;&lt;br&gt;
&lt;a href="javascript:document.all.V1.click()"&gt;Verweis 2&lt;/a&gt;&lt;br&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält zwei Verweise. Beim Klicken auf den ersten Verweis wird mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> die Meldung "Verweis 1 geklickt" ausgegeben. Beim Klicken auf den zweiten Verweis wird die Methode <code>click()</code> auf den ersten Verweis angewendet. Dadurch wird dieser scriptgesteuert angeklickt, und es wird trotz Klickens auf den zweiten Verweis die Meldung "Verweis 1 geklickt" ausgegeben.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3">&nbsp;<a class="an" name="contains">contains()</a></h2>

<p>Ermittelt, ob ein Element ein bestimmtes anderes Element enthält. Erwartet als Parameter das Elementobjekt des gesuchten inneren Elements.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_contains.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  if (document.all.dieseDatei.contains(document.all.Absatz))
    alert(document.all.Absatz.innerText);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body id="dieseDatei"&gt;
&lt;p id="Absatz"&gt;Ein Text&lt;/p&gt;
&lt;a href="javascript:Test()"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion überprüft, ob das <code>&lt;body&gt;</code>-Tag, das den id-Namen <code>dieseDatei</code> hat, ein Element enthält, das den id-Namen <code>Absatz</code> hat. Wenn ja, wird der innere Text dieses Elements mit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="window.htm#alert">alert()</a> ausgegeben.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Methode <code>contains()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op72.gif" width="30" height="30" alt="Opera 7.20" title="Opera 7.20"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3">&nbsp;<a class="an" name="get_attribute">getAttribute()</a></h2>

<p>Ermittelt, ob ein Element in seinem HTML-Tag ein bestimmtes Attribut  enthält oder nicht. Gibt den Wert zurück, den das Attribut hat, falls das Attribut gefunden wird, ansonsten die leere Zeichenkette <code>""</code>. Erwartet folgende Parameter:<br>
<b>1.</b> <i>Attribut</i> = der Name des gesuchten Attributs im HTML-Tag.<br>
<b>2.</b> <i>Groß/Kleinschreibung</i> = <code>1</code> übergeben, wenn bei dem Attribut Groß/Kleinschreibung unterschieden werden soll, oder <code>0</code>, wenn es egal ist, wie das Attribut geschrieben ist.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_get_attribute.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  if (document.all.Absatz.getAttribute("align", 0) == "center")
    document.all.Absatz.setAttribute("align", "right", 0);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz" align=center&gt;Ein Text&lt;/p&gt;
&lt;a href="javascript:Test()"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen zentriert ausgerichteten Absatz mit dem id-Namen <code>Absatz</code> und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion ermittelt mit <code>getAttribute()</code>, ob das Element mit dem Namen <code>Absatz</code> ein Attribut <code>align</code> enthält. Außerdem wird abgefragt, ob der Wert dieser Angabe gleich <code>center</code> ist. Da dies im Beispiel der Fall ist, wird die abhängige Anweisung ausgeführt. Darin wird das Attribut <code>align</code> mit Hilfe von <img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#set_attribute">setAttribute()</a> dynamisch geändert, sodass der Absatz hinterher rechtsbündig ausgerichtet ist.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Methode <code>getAttribute()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7"><img src="../../src/konq33.gif" width="30" height="30" alt="Konqueror 3.3" title="Konqueror 3.3">&nbsp;<a class="an" name="insert_adjacent_html">insertAdjacentHTML()</a></h2>

<p>Fügt zusätzlichen HTML-Code vor oder oder nach einem Element ein. Erwartet folgende Parameter:<br>
<b>1.</b> <i>Position</i> = Angabe, wo genau der HTML-Code hinzugefügt werden soll. Übergeben Sie <code>BeforeBegin</code>, wenn der Code vor dem einleitenden HTML-Tag des Elements eingefügt werden soll, <code>AfterBegin</code>, wenn der Code nach dem einleitenden Tag vor dem Inhalt eingefügt werden soll, <code>BeforeEnd</code>, wenn der Code am Ende des Inhalts vor dem abschließenden Tag eingefügt werden soll, oder <code>AfterEnd</code>, wenn der Code hinter dem abschließenden HTML-Tag eingefügt werden soll.<br>
<b>2.</b> <i>Code</i> = Der HTML-Code, der eingefügt werden soll.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_insert_adjacent_html.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
var i = 0;
function Nummerieren () {
  var Nummerierung = "&lt;b&gt;" + (i + 1) + ".&lt;\/b&gt; ";
  if (i &lt; document.all.tags("p").length)
    document.all.tags("p")[i].insertAdjacentHTML("AfterBegin", Nummerierung);
  i = i + 1;
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p&gt;Ein Absatz&lt;/p&gt;
&lt;p&gt;Ein anderer Absatz&lt;/p&gt;
&lt;p&gt;Noch ein Absatz&lt;/p&gt;
&lt;p&gt;&lt;a href="javascript:Nummerieren()">Nummerieren&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält drei Absätze und einen Verweis. Bei jedem Klick auf den Verweis wird der jeweils nächste Absatz dynamisch durchnummeriert. Dazu wird beim Klick auf den Verweis die Funktion <code>Nummerieren()</code> aufgerufen. Diese Funktion verwaltet die beiden global definierten Variablen <code>i</code> (Zähler für die Nummerierung) und <code>Nummerierung</code> (HTML-formatierte Zeichenkette, die die Nummerierung hinzufügt). Solange der Zähler für die Nummerierung kleiner ist als die Anzahl der verfügbaren Absätze, wird im jeweils nächsten Absatz mit <code>insertAdjacentHTML()</code> hinter dem einleitenden <code>&lt;p&gt;</code>-Tag dynamisch der aktuelle Wert der Variablen <code>Nummerierung</code> eingefügt.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Konqueror 3.4 beachtet das Leerzeichen nach dem schließenden <code>b</code>-Tag nicht, die einfügten Nummern schließen daher direkt an den Text des Absatzes an ("1.Ein Absatz" statt "1. Ein Absatz"). Zur Abhilfe könnte ein anstelle eines normalen Leerzeichens ein <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../html/referenz/zeichen.htm#benannte_iso8859_1">erzwungenes Leerzeichen</a> <code>&amp;nbsp;</code> verwendet werden.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op7.gif" width="30" height="30" alt="Opera 7" title="Opera 7">&nbsp;<a class="an" name="insert_adjacent_text">insertAdjacentText()</a></h2>

<p>Fügt zusätzlichen Text vor oder oder nach einem Element ein. Erwartet folgende Parameter:<br>
<b>1.</b> <i>Position</i> = Angabe, wo genau der Text hinzugefügt werden soll. Übergeben Sie <code>BeforeBegin</code>, wenn der Text vor dem einleitenden HTML-Tag des Elements eingefügt werden soll, <code>AfterBegin</code>, wenn der Text nach dem einleitenden Tag vor dem Inhalt eingefügt werden soll, <code>BeforeEnd</code>, wenn der Text am Ende des Inhalts vor dem abschließenden Tag eingefügt werden soll, oder <code>AfterEnd</code>, wenn der Text hinter dem abschließenden HTML-Tag eingefügt werden soll.<br>
<b>2.</b> <i>Text</i> = Der Text, der eingefügt werden soll.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_insert_adjacent_text.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Ergaenzen () {
  document.all.DynText.insertAdjacentText("BeforeEnd", " wird dynamisch!");
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="DynText"&gt;HTML&lt;/p&gt;
&lt;a href="javascript:Ergaenzen()"&gt;Ergänzen&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Absatz mit dem id-Namen <code>DynText</code>, der nur das Wort "HTML" enthält. Beim Anklicken des Verweises unterhalb wird die Funktion <code>Ergaenzen()</code> aufgerufen. Diese Funktion fügt vor dem abschließenden Tag den Text
" wird dynamisch" ein.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op72.gif" width="30" height="30" alt="Opera 7.20" title="Opera 7.20"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3">&nbsp;<a class="an" name="remove_attribute">removeAttribute()</a></h2>

<p>Entfernt ein bestimmtes Attribut aus einem bestimmten HTML-Tag. Erwartet folgende Parameter:<br>
<b>1.</b> <i>Attribut</i> = der Name des gesuchte Attributs im HTML-Tag.<br>
<b>2.</b> <i>Groß/Kleinschreibung</i> = <code>1</code> übergeben, wenn bei dem Attribut Groß/Kleinschreibung unterschieden werden soll, oder <code>0</code>, wenn es egal ist, wie das Attribut geschrieben ist.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_remove_attribute.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  document.all.Absatz.removeAttribute("align", 0);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz" align="center"&gt;Ein Text&lt;/p&gt;
&lt;a href="javascript:Test()"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen zentriert ausgerichteten Absatz mit dem id-Namen <code>Absatz</code> und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion entfernt aus dem Absatz das Attribut <code>align</code>, sodass der Absatz hinterher linksbündig ausgerichtet ist, weil das die Normaleinstellung für das <code>&lt;p&gt;</code>-Tag ist.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Der Internet Explorer 5.0 Macintosh Edition interpretiert dieses Beispiel nicht. Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Methode <code>removeAttribute()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op9.gif" width="30" height="30" alt="Opera 9" title="Opera 7.20"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/saf2.gif" width="30" height="30" alt="Safari 2.0" title="Safari 2.0">&nbsp;<a class="an" name="scroll_into_view">scrollIntoView()</a></h2>

<p>Positioniert den Inhalt im Anzeigefenster des Browsers so, dass ein bestimmtes Element angezeigt wird. Erwartet einen Parameter. Übergeben Sie <code>true</code>, wenn der Inhalt so positioniert werden soll, dass das Element oben im Anzeigefenster erscheint, oder <code>false</code>, wenn das Element unten im Anzeigefenster platziert sein soll.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_scroll_into_view.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  document.all.Absatz.scrollIntoView(true);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz"&gt;Ein Text&lt;/p&gt;
&lt;script type="text/javascript"&gt;
for (i = 1; i &lt; 100; i++)
  document.write("&lt;br&gt;Zeile " + i);
&lt;/script&gt;
&lt;p&gt;&lt;a href="javascript:Test()"&gt;Test&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen Textabsatz mit dem id-Namen <code>Absatz</code>. Dann schreibt das Beispiel in einem Script-Bereich mit der <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="document.htm#write">write()</a>-Methode 100 Zeilen in die Datei, damit die Datei zu Testzwecken schön lang ist. Unterhalb davon ist dann ein Verweis notiert. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion positioniert den Inhalt des Anzeigefensters neu, und zwar so, dass der Textabsatz <code>Absatz</code> am oberen Fensterrand angezeigt wird.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari 2.0 unterstützt jedoch die Methode <code>scrollIntoView()</code>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/msjs.gif" width="30" height="30" alt="MS JScript" title="MS JScript"><img src="../../src/msie4.gif" width="30" height="30" alt="MS IE 4.0" title="MS IE 4.0"><img src="../../src/op72.gif" width="30" height="30" alt="Opera 7.20" title="Opera 7.20"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf13.gif" width="30" height="30" alt="Safari 1.3" title="Safari 1.3">&nbsp;<a class="an" name="set_attribute">setAttribute()</a></h2>

<p>Fügt in einem bestimmten HTML-Tag ein bestimmtes Attribut hinzu. Erwartet folgende Parameter:<br>
<b>1.</b> <i>Attribut</i> = der Name des gewünschten Attributs.<br>
<b>2.</b> <i>Wert</i> = die gewünschte Wertzuweisung für die Zusatzangabe.<br>
<b>3.</b> <i>Groß/Kleinschreibung</i> = <code>1</code> übergeben, wenn bei dem Attribut Groß/Kleinschreibung unterschieden werden soll, oder <code>0</code>, wenn es egal ist, wie das Attribut geschrieben wird.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/all_set_attribute.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type="text/javascript"&gt;
function Test () {
  document.all.Absatz.setAttribute("align", "center", 0);
}
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;p id="Absatz"&gt;Ein Text&lt;/p&gt;
&lt;a href="javascript:Test()"&gt;Test&lt;/a&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel enthält einen zentriert ausgerichteten Absatz mit dem id-Namen <code>Absatz</code> und einen Verweis. Beim Anklicken des Verweises wird die Funktion <code>Test()</code> aufgerufen. Diese Funktion fügt in dem Absatz das Attribut <code>align</code> hinzu, und zwar mit der Wertzuweisung <code>center</code>. Dadurch wird der Absatz hinterher zentriert ausgerichtet.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Das Beispiel kann im Safari nicht nachvollzogen werden, da dieser das Objekt <code>document.all</code> nicht kennt. Safari unterstützt jedoch die Methode <code>setAttribute()</code>.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="style.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="style.htm">style</a>
</td></tr>
<tr>
<td class="doc"><a href="document.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="node.htm">node</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">JavaScript/DOM</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Objektreferenz</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
