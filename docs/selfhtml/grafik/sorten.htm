<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Grafik / Typische Grafiksorten für Web-Seiten</title>
<link rel="stylesheet" type="text/css" href="../src/selfhtml.css">
<meta name="description"    content="Welche Grafiksorten bei typischen Web-Layouts vorkommen.">
<meta name="keywords"       content="SELFHTML, Grafik, Buttons, Bars, Dots, Symbole, Cliparts, Thumbnails, Fotos, blinder Pixel">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-10-02T00:38:49+02:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/grafik/sorten.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../src/favicon.ico">
<link rel="author" title="Impressum" href="../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../index.htm">
<link rel="up" title="Grafik" href="index.htm">
<link rel="next" title="Techniken und Begriffe der Bildbearbeitung" href="techniken.htm">
<link rel="prev" title="Grafikformate für Web-Seiten" href="formate.htm">
<link rel="first" title="Grafikformate für Web-Seiten" href="formate.htm">
<link rel="last" title="Animierte GIF-Grafiken" href="animierte_gifs.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../index.htm">SELFHTML</a>/<a href="../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Grafik</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../index.htm"><img src="../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Typische Grafiksorten für Web-Seiten</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#buttons">Buttons (Schaltflächen)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#dots">Dots (Auflistungspunkte)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#bars">Bars (Trennleisten)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#wallpapers">Wallpapers  (Hintergrundbilder)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#symbole">Symbole (Textergänzung oder Textersatz)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#cliparts">Cliparts (Illustrationen)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#thumbnails">Thumbnails (Vorschaugrafiken)</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#fotos">Fotos</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#blinde_pixel">Blinde Pixel</a><br>
<img src="../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#layoutelemente">Grafische Layout-Elemente</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="buttons">Buttons (Schaltflächen)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/buttons.htm">Anzeigebeispiel: Typische Buttons</a></p>

<p>Buttons werden auf Web-Seiten gerne verwendet, um Verweise grafisch und attraktiv darzustellen. Achten Sie dabei jedoch immer auf die gesamte zu ladende Datenmenge. Bei einem halben Dutzend Verweisen sind kleine grafische Buttons durchaus akzeptabel, nicht aber bei Dutzenden von Verweisen auf einer Seite.</p>

<p>Näheres zum Einbinden in HTML wird im Abschnitt <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/grafiken/verweise.htm">Grafiken als Verweise</a> beschrieben. Verwenden Sie bei mehreren Buttons auf einer Web-Seite möglichst eine einheitliche <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="techniken.htm#farbpaletten">Farbpalette</a>!</p>

<p>Das typische HTML-Konstrukt für anklickbare Verweis-Buttons lautet:</p>

<pre>
&lt;a href="datei.html"&gt;
&lt;img src="button.gif" width="100" height="25" alt="Button" border="0"&gt;
&lt;/a&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="dots">Dots (Auflistungspunkte)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/dots.htm">Anzeigebeispiel: Typische Dots</a></p>

<p>Nur Text am Bildschirm ist langweilig und ermüdend. Das Auge sucht nach Augenweiden. Mit kleinen, farbigen Punkten, Quadraten, Dreiecken und informellen Flecken, die aufgrund ihrer Größe nur wenig Speicher brauchen, können Sie textlastige Information augenfreundlich unterstützen. Wichtig ist hierbei zu beachten, dass der Leser dazu neigt, den Dots irgendeine Bedeutung zuzuordnen, z.B. "wo dieser blaue Punkt steht, folgt ein Produktname". Verwenden Sie Dots daher so, dass diese eine nachvollziehbare Bedeutung haben. Verwenden Sie nicht lauter unterschiedliche Dots auf einer Web-Seite, sondern wiederholen Sie die gleichen Dots mehrmals pro Web-Seite. Das ist nicht langweilig, sondern sorgt für ein sauberes Erscheinungsbild und spart beim Anwender Ladezeit, da die betreffende Grafik nur einmal geladen werden muss.</p>

<p>Dots sind zum Beispiel in <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/text/listen.htm#aufzaehlung">Aufzählungslisten</a> sinnvoll und lassen sich mit Hilfe der CSS-Eigenschaft <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/listen.htm#list_style_image">list-style-image</a> sogar ganz elegant einbinden. Ein typisches HTML-Konstrukt sieht dann etwa so aus:</p>

<pre>
&lt;ul style="list-style-image:url(dot.gif)"&gt;
&lt;li&gt;Listenpunkt&lt;/li&gt;
&lt;li&gt;anderer Listenpunkt&lt;/li&gt;
&lt;/ul&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="bars">Bars (Trennleisten)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/bars.htm">Anzeigebeispiel: Typische Bars</a></p>

<p>HTML bietet zwar die Möglichkeit an, <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/text/trennlinien.htm">Trennlinien</a> in den Text einzufügen, um Information übersichtlicher zu strukturieren. Wer auf seinen Web-Seiten jedoch etwas Besonderes bieten will, verwendet grafische Linien. Ähnlich wie Dots benötigen Bars wenig Speicher. Auch bei Bars gilt: verwenden Sie nicht lauter unterschiedliche Bars auf einer Web-Seite, sondern wiederholen Sie die gleichen Bars mehrmals pro Web-Seite. Das ist nicht langweilig, sondern sorgt für ein sauberes Erscheinungsbild und spart beim Anwender Ladezeit, da die betreffende Grafik nur einmal geladen werden muss.</p>

<p>Bei sauber kodiertem HTML sollten Grafiken innerhalb anderer Block-Elemente notiert werden. Ein typisches HTML-Konstrukt zum Notieren einer Bar, das mit den CSS-Eigenschaften <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/randabstand.htm#margin_top">margin-top</a> und <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/randabstand.htm#margin_bottom">margin-bottom</a> auch gleich Abstände zum vorhergehenden und nachfolgenden Inhalt definiert, könnte etwa so aussehen:</p>

<pre>
&lt;div style="margin-top:20px; margin-bottom:20px;"&gt;
&lt;img src="bar.gif" width="600" height="5" border="0" alt="Trennlinie"&gt;&lt;/div&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="wallpapers">Wallpapers  (Hintergrundbilder)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/wallpapers.htm">Anzeigebeispiel: Typische Wallpapers</a></p>

<p>Hintergrundbilder (Wallpapers) sind seit ihrer Einführung durch Netscape zu einem Dauerrenner im Web geworden. Wenn Sie nichts anderes angeben, wird ein Hintergrundbild so oft aneinandergereiht dargestellt, wie es erforderlich ist (Tapetenmuster- oder Kacheleffekt). Wenn die verwendete Grafik an den Seiten nicht einheitlich aussieht, entstehen sichtbare Kacheln. Das kann in manchen Fällen gewollt sein, in anderen aber zeugt es auch von Dilettantismus.</p>

<p>Es gibt mehrere Typen von Hintergrundbildern. Die klassischen und meistverwendeten stellen irgendeine informelle Struktur dar und bewirken auf diese Weise z.B. den visuellen Effekt einer faserigen, hölzernen, metallenen oder papiernen Oberfläche. Andere Hintergrundbilder stellen durch klare Farbflächen sichtbare Kacheln dar und bewirken dann im Kacheleffekt geometrische Muster. Und dann gibt es noch Hintergrundbilder vom Typ "Browser-Überlistung". Das sind Grafiken, die extrem breit sind (z.B. 3000 Pixel), also bei üblichen Fensterbreiten im Browser nicht mehrmals nebeneinander angezeigt werden. In der Höhe haben sie dagegen oft nur 1 bis 5 Pixel. Die ersten 200 Pixel dieses langen Streifens enthalten dann beispielsweise ein Rechteck in einer bestimmten Farbe, während der gesamte Rest der Grafik eine andere Farbe hat. Im Browser-Fenster entsteht dann links ein Farbstreifen, über den sich beispielsweise Buttons zur Navigation platzieren lassen.</p>

<p>So pfiffig die Idee der Hintergrundbilder ist, so viel kann man dabei auch verkehrt machen. Bei allzu auffälligen Hintergrundbildern wird der Anwender zu sehr vom Vordergrund, dem eigentlichen Inhalt, abgelenkt. In vielen Negativbeispielen im Web leidet auch die Lesbarkeit der Textinformation unter dem Hintergrundbild.</p>

<p>Generell gilt: wenn Sie auf einer Web-Seite wichtigen Text anbieten wollen, sollte ein Hintergrund-Wallpaper angenehm, aber unauffällig sein. Nur bei besonderen grafischen Effekten ist der Einsatz einer "aufregenden" Hintergrundgrafik gerechtfertigt.</p>

<p>Um den gesamten Inhalt des Browser-Anzeigefensters mit einer Hintergrundgrafik zu unterlegen, wird die Hintergrundgrafik im einleitenden <code>&lt;body&gt;</code>-Tag der HTML-Datei eingebunden:</p>

<pre>
&lt;body background="hintergrund.jpg" text="#000000"&gt;
</pre>

<p>Mit Hilfe der CSS-Eigenschaft <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/hintergrund.htm#background_image">background-image</a> ist es außerdem möglich, auch anderen, untergeordneten HTML-Elementen einen Wallpaper-Effekt zuzuordnen. Im Beispiel eines Textabsatzes könnte das so aussehen:</p>

<pre>
&lt;p style="background-image:url(hintergrund.jpg)"&gt;Text&lt;p&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="symbole">Symbole (Textergänzung oder Textersatz)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/symbole.htm">Anzeigebeispiel: Typische Symbole</a></p>

<p>Von allen Grafiksorten ist dies wohl die inhaltlich wichtigste. Vor allem bei Textsorten wie technischer Dokumentation oder wissenschaftlichen Texten ist es dem Autor schon fast als Faulheit oder Ignoranz anzukreiden, wenn er auf Symbole verzichtet. Denn gerade beim Online-Lesen von Texten lesen die meisten Anwender quer, d.h. sie lesen nicht gemütlich Satz für Satz, sondern suchen ständig nach Orientierungsmöglichkeiten, um schnell zu der gewünschten Information zu gelangen. Hierbei sind Symbole eine hervorragende Orientierungshilfe.</p>

<p>Symbole sollten sich an geltenden Standards orientieren. Das ist kein Ausdruck von Phantasielosigkeit, sondern erleichtert die intuitive Orientierung. Eine Grafik beispielsweise, die eine kunstvolle Ziffer "8" enthält und dahinter die drei Buchstaben "ung", erschließt sich eben nicht so schnell wie ein Warndreieck mit Ausrufezeichen oder ein erhobener Zeigefinger. Symbole sollten auf den Anwender so wirken, dass er keinen Augenblick über die Bedeutung der Grafik im Zweifel ist.</p>

<p>Symbolgrafiken können in HTML an ganz verschiedenen Stellen vorkommen, beispielsweise vor Verweisen, um Art und Verzweisziel zu charakterisieren, oder vor Absätzen, die Text eines bestimmten Typs enthalten, z.B. eine Warnung, eine Zusatzinfo, ein Hinweis auf andere Information oder dergleichen.</p>



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="cliparts">Cliparts (Illustrationen)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/cliparts.htm">Anzeigebeispiel: Typische Cliparts</a></p>

<p>Cliparts sind aussagekräftige, oft humorvolle Grafiken, die größere Texte ansprechend auflockern können. Wichtig ist es, Cliparts so einzusetzen, dass sie zu der umgebenden Textinformation eine sinnvolle Ergänzung bilden. Idealerweise bringt eine Clipart-Grafik genau das auf den Punkt, was tausend Worte nicht zu sagen vermögen.</p>

<p>Manche Web-Seiten sind vollgepfropft mit irgendwo wahllos "besorgten", fertigen Cliparts. Dabei werden meist zwei schwere Fehler begangen: erstens sind zu viele verschiedene Grafiken an allen Ecken und Enden schlecht, weil jede einzelne Aufmerksamkeit erzwingt und beim Betrachter daher ein spontanes Gefühl von Stress, Überforderung und Orientierungslosigkeit entsteht. Und zweitens passen die Grafiken oft in Farbe, Größe und Stil nicht zueinander. Alles deutet darauf hin, dass da jemand wahllos eine der zahlreichen auf dem Markt erhältlichen CD-ROMs mit Clipart-Sammlungen ausgeschlachtet hat, aber ohne jedes Gespür für grafische Harmonie. Cliparts machen sich dann gut, wenn sie ein Gegengewicht zu vorhandenen Texten darstellen und einen nachvollziehbaren Bezug zum Text herstellen. Ideal sind Clipart-Serien, wo beispielsweise eine lustige Figur verschiedene Posen einnimmt und damit einen Textbezug herstellt.</p>

<p>Um Cliparts in HTML neben Text anzuordnen, bieten sich zwei Möglichkeiten an. Die eine ist, den <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/grafiken/ausrichten.htm#textumfluss">Text um die Grafik fließen zu lassen</a>. Das folgende typische Beispiel richtet eine Grafik rechts neben dem Text eines Absatzes aus, und der Text fließt um die Grafik:</p>

<pre>
&lt;p&gt;&lt;img src="clipart.gif" width="200"
height="250" alt="Clipart" border="0"
align="right" hspace="10" vspace="5"&gt;
Text des Absatzes&lt;/p&gt;
</pre>

<p>Die andere Möglichkeit besteht darin, Text und Grafik mit Hilfe einer <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/tabellen/aufbau.htm#definieren">blinden Tabelle</a> zu positionieren. Das folgende Beispiel zeigt das Prinzip:</p>

<pre>
&lt;table border="0" cellspacing="10"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;
&lt;img src="clipart.gif" width="200" height="250" alt="Clipart" border="0"&gt;
&lt;/td&gt;&lt;td valign="top"&gt;
Text links neben der Grafik
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="thumbnails">Thumbnails (Vorschaugrafiken)</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/thumbnails.htm">Anzeigebeispiel: Typische Thumbnails</a></p>

<p>Leider stehen nicht allen Besuchern von Web-Seiten solche Bandbreiten der Datenübertragung zur Verfügung, die es erlauben, "mal eben" eine wunderschöne, aber speicherfressende Grafik am Bildschirm anzuzeigen. Wenn Sie großformatige Fotos oder Landkarten auf Ihren Web-Seiten anbieten, sollten Sie diese nicht "ohne Vorwarnung" in Seiten einbinden. Stattdessen sollten Sie eine stark verkleinerte Version der betreffenden Grafik einbinden. Die verkleinerte Version sollte gerade so groß sein, dass der Anwender entscheiden kann, ob er die Grafik in voller Größe betrachten möchte oder nicht. Die verkleinerte Grafik sollte anklickbar sein und beim Anklicken die große Grafik aufrufen, z.B. in einem neuen Anzeigefenster. Ein typisches HTML-Konstrukt dafür ist:</p>

<pre>
&lt;a href="bild.jpg" target="_blank"&gt;
&lt;img src="minibild.jpg" width="100" height="80" alt="Vorschau" border="1"&gt;
&lt;/a&gt;
</pre>

<br>&nbsp;



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="fotos">Fotos</a></h2>

<p><img src="../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/fotos.htm">Anzeigebeispiel: Typische Fotos</a></p>

<p>Viel zu viele Web-Seiten bieten viel zu wenig Fotos an. Dabei sind Menschen, also Besucher von Web-Seiten, doch von Natur aus so neugierig und freuen sich immer, wenn sie Fotos zu sehen bekommen. Im Zeitalter der preiswert gewordenen Digitalkameras und Scanner ist es auch wirklich kein großes Problem mehr, eigene Aufnahmen als Pixelgrafiken in den Computer zu bekommen. Was Sie dann nur noch brauchen, ist ein Grafikprogramm, mit dem Sie die Bilder gegebenenfalls auf eine web-gerechte Größe bringen können, und mit dem Sie solche Bilder in einem geeigneten <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="formate.htm">Grafik-Format</a> wie JPEG abspeichern können. Bei den meisten Scannern und Digitalkameras gehören solche Programme als Zugabe zum Produkt.</p>

<p>Fotos auf Web-Seiten brauchen auch gar nicht sonderlich großformatig sein. Im Gegenteil - das bricht meistens nur das Seiten-Layout auf, sorgt für lange Ladezeiten beim Anwender und sieht meistens nicht mal besonders gut aus. Bilder von Digitalkameras, die mehrere "Megapixel" Auflösung anbieten, sollten also erst mal in der Größe reduziert werden. Wichtig ist dabei, dass volle 16,7 Mio. Farben eingestellt sind. Gute Grafikprogramme besitzen ausgereifte Algorithmen, sodass eine Größenreduzierung dem Erscheinungsbild des Fotos keine große Gewalt antut. Wichtig ist bei Fotos, dass die Größenreduktion über die Angabe von gewünschten Pixeln für Breite und Höhe erfolgt, nicht über Angaben aus dem Print-Bereich, wie Zentimeter oder Zoll. Für ansprechende Bilder auf Web-Seiten reichen meist 200 bis 400 Pixel für die kürzere Seite und 300 bis 600 Pixel für die breitere Seite. Dabei entstehen bei JPEG und mittlerer Kompression auch akzeptable Dateigrößen, die in der Regel unter 100 Kilobyte liegen.</p>



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="blinde_pixel">Blinde Pixel</a></h2>

<p>HTML-Puristen bekommen einen nervösen Hautausschlag, wenn sie von "blinden Pixeln" hören. Aber besser als diesen Trick totzuschweigen ist es, ihn zu verraten und darauf hinzuweisen, warum und wieso er nicht selten eingesetzt wird, und welche Probleme damit verbunden sein können.</p>

<p>Der blinde Pixel ist eine Erfindung von David Siegel, einem der frühen Gurus des Web-Designs. Verärgert über das Verhalten bei Web-Browsern, Tabellen nicht mit den in HTML notierten Attributwerten für <code>width</code> und <code>height</code> darzustellen, wenn der Zelleninhalt schmaler ist und Nachbarzellen relativ viel Inhalt haben, erzwang er den gewünschten Raum einfach mit Hilfe einer unsichtbaren Grafik.</p>

<p>Der Trick besteht aus zwei Teilen. Im ersten Teil wird eine sehr kleine GIF-Grafik erzeugt, die überhaupt nichts darstellt, sondern nur aus einer einfarbigen Fläche besteht. Es ist besser, wenn die Grafik nicht wirklich nur 1 mal 1 Pixel groß ist, sondern ca. 5 mal 5 Pixel. So werden Probleme bei einigen Browsern vermieden. Die eine Farbe, aus der die GIF-Grafik besteht, wird sodann als <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="techniken.htm#transparenz">transparent</a> definiert. Der Effekt ist, dass die Grafik Raum beansprucht, aber nicht sichtbar ist. Darunter liegende Farben, etwa definierte Hintergrundfarben von Tabellenzellen, in denen die unsichtbare Grafik eingebunden wird, scheinen durch.<br>
Der zweite Teil des Tricks besteht in der Möglichkeit, beim Einbinden der unsichtbaren Grafik die Attribute <code>width</code> und <code>height</code> im <code>&lt;img&gt;</code>-Tag auf beliebige gewünschte Werte zu setzen. Die Grafik wird dann zwar vom Browser verzerrt, aber da sie ja unsichtbar ist, sieht man auch nichts von der Verzerrung.<br>
So lassen sich mit der einen Grafik, die nur ein paar dutzend Byte groß ist, beliebige horizontale und vertikale Räume und Abstände erzwingen.</p>

<p>Der folgende HTML-Ausschnitt zeigt eine typische Anwendung. Die Grafik wird in zwei nebeneinander liegenden Tabellenzellen gleich zu Beginn referenziert. Ihre Höhe wird in beiden Referenzen auf 1 Pixel verzerrt, und ihre Breite auf den jeweils gewünschten Wert. Auf diese Weise erhält die Tabelle zwei Spalten mit unumstößlichen Mindestbreiten:</p>

<pre>
&lt;table border="0" cellspacing="0" cellpadding="0"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;
&lt;img src="pixel.gif" width="200" height="1" alt="" border="0"&gt;
Hier folgt der Inhalt der ersten Spalte, die mindestens 200 Pixel breit ist.
&lt;/td&gt;&lt;td valign="top"&gt;
&lt;img src="pixel.gif" width="400" height="1" alt="" border="0"&gt;
Hier folgt der Inhalt der zweiten Spalte, die mindestens 400 Pixel breit ist.
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</pre>

<p>Unsauber ist die Methode mit dem blinden Pixel insofern, als hässliche "broken-image"-Symbole angezeigt werden, wenn die Grafik beim Übertragen der Web-Seite an den Browser nicht übertragen wird, z.B. weil der Anwender den Ladevorgang abbricht oder das Anzeigen von Grafiken abgeschaltet hat. Darüber hinaus wird es von Puristen als Zweckentfremdung von Grafik und HTML-Eigenschaften empfunden, solche Mittel einzusetzen. Und schließlich ist das Erzwingen fester Breiten ohnehin zweifelhaft, da der Anwender dann beispielsweise bei der Anzeige in nicht genügend großen Browser-Fenstern gezwungen ist, quer zu scrollen, was nicht besonders anwenderfreundlich ist. Andererseits ist der blinde Pixel ein Notbehelf, um fehlende Möglichkeiten in HTML und CSS auszugleichen. Mittlerweile sind zwar bestimmte CSS-Eigenschaften zur <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/positionierung.htm">Positionierung von Elementen</a>, die den Zweck des blinden Pixels ebenfalls erfüllen, verfügbar, aber nur in neueren Browsern.</p>



<p class="doc"><a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="layoutelemente">Grafische Layout-Elemente</a></h2>

<p>Grafiken dienen beim Web-Design nicht selten dazu, Dinge zu realisieren, die mit HTML und CSS (noch) nicht möglich sind. Dazu gehören beispielsweise Rundbögen. Solche grafischen Elemente empfindet der unbedarfte Betrachter einer Web-Seite nicht als Grafiken "auf der Web-Seite", sondern als Basisbestandteile der Formgebung. Ähnlich wie bei blinden Pixeln fallen solche Grafiken dann negativ auf, wenn sie beim Laden der Seite nicht übertragen werden und ein "broken-image" in der Anzeige erzeugen.</p>

<p>Eingesetzt werden solche grafischen Bestandteile meistens in <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../html/tabellen/aufbau.htm#definieren">blinden Tabellen</a> oder <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../css/eigenschaften/positionierung.htm#position">absolut positionierten Elementen</a>. Durch nahtloses Aneinanderfügen von Tabellenzellen oder positionierten Elementen, die als Inhalt eine entsprechende Grafik haben, lassen sich solche Layout-Effekte wie die im Anzeigebeispiel erzielen. Bei Verwendung von blinden Tabellen für solche Effekte ist es wichtig, dass die Werte für die Attribute <code>border</code>, <code>cellspacing</code> und <code>cellpadding</code> explizit auf 0 gesetzt werden. Ein typisches HTML-Konstrukt sieht etwa so aus:</p>

<pre>
&lt;table border="0" cellspacing="0" cellpadding="0"&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src="rundbogen.gif" width="100" height="100" alt="" border="0"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="balken_oben.gif" width="500" height="100" alt="" border="0"&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src="balken_links.gif" width="100" height="500" alt="" border="0"&gt;&lt;/td&gt;
&lt;td&gt;&lt;!-- Inhalt wie Text, andere Grafiken - oft auch "innere Tabellen" usw. --&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
</pre>

<p>&nbsp;</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="techniken.htm"><img src="../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="techniken.htm">Techniken und Begriffe der Bildbearbeitung</a>
</td></tr>
<tr>
<td class="doc"><a href="formate.htm"><img src="../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="formate.htm">Grafikformate für Web-Seiten</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../index.htm">SELFHTML</a>/<a href="../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Grafik</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
