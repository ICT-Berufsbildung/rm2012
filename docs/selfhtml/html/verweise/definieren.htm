<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: HTML/XHTML / Verweise (Links) / Verweise definieren und gestalten</title>
<meta name="description"    content="Wie Sie in HTML Verweise definieren und optisch gestalten können, und was Sie generell dabei beachten sollten.">
<meta name="keywords"       content="SELFHTML, HTML, XHTML, Verweise, Links, Hyperlinks, Verweistext, Verweisziel, nicht unterstrichene Links, a, href, target">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-10-31T12:25:34+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/html/verweise/definieren.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Verweise (Links)" href="index.htm">
<link rel="next" title="Projekt-interne Verweise" href="projektintern.htm">
<link rel="prev" title="Tabellen und nicht-visuelle Medien" href="../tabellen/nicht_visuell.htm">
<link rel="last" title="Tabulator-Reihenfolge und Tastaturkürzel für Verweise" href="tastatur.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">HTML/XHTML</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Verweise (Links)</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Verweise definieren und gestalten</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemeines">Allgemeines zu Verweisen</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#beispiele">Beispiele für Verweise</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#gestalten">Verweise optisch gestalten mit CSS</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#zielfenster">Zielfenster für Verweise bestimmen</a><br>
</p>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="allgemeines">Allgemeines zu Verweisen</a></h2>

<p>Verweise sind ein entscheidender Bestandteil jedes Hypertext-Projekts und der "intelligente Mehrwert" des World Wide Web.</p>

<p>Mit Hilfe von Verweisen strukturieren Sie Ihr Projekt. Wenn Sie beispielsweise eine HTML-Datei mit einer Projekt-Einstiegsseite und verschiedene HTML-Dateien für Themenseiten planen, brauchen Sie in der Einstiegsseite Verweise zu allen Themenseiten und in jeder Themenseite einen Rücksprungverweis zur Einstiegsseite. Erst dadurch wird aus der losen Dateisammlung ein zusammenhängendes Web-Projekt, eine Homepage. In komplexeren Projekten wie dem vorliegenden Dokument finden Sie auch Verweise mit bestimmter Bedeutung - Verweise zu übergeordneten oder untergeordneten Ebenen, Verweise zum Blättern, Verweise zum Wechseln zwischen Beschreibungen und Anzeigebeispielen, Querverweise, Verweise zu anderen Web-Adressen usw.</p>

<p>Alle Verweise in HTML haben den gleichen Aufbau. Das vereinfacht die Syntax, hat aber auch Nachteile: es gibt nämlich keine Verweise für bestimmte Aufgaben. Mittlerweile gibt es zwar auch Attribute für solche Zwecke, aber in der Praxis ist es Ihnen überlassen, wie Sie zum Beispiel Verweise so gestalten, dass dem Anwender klar wird, ob es sich um einen Rückverweis zur Einstiegsseite, um einen Querverweis zu einem assoziativ verwandten Thema, oder etwa um einen Verweis zu einer ganz anderen Web-Adresse handelt.</p>

<p>Wichtig ist in allen Fällen ein aussagekräftiger Verweistext.<br>
<b>Schlecht</b> ist: <a href="#allgemeines">zurück</a> (wohin eigentlich?)<br>
<b>Besser</b> ist: <a href="#allgemeines">zurück zur Einstiegsseite</a> (ah ja!)</p>

<p>Verweise lenken die Aufmerksamkeit des Anwenders sofort auf sich. Wenn Sie Verweise mitten im Text notieren, sollten Sie als Verweistext inhaltlich beschreibende Wörter anbieten, keine Wörter ohne Inhalt<br>
<b>Schlecht</b> ist: Für weitere Information klicken Sie <a href="#allgemeines">hier</a> (worum geht es "hier" eigentlich?)<br>
<b>Gut</b> ist: <a href="#allgemeines">Weitere Information</a> können Sie ebenfalls aufrufen (ah ja!)</p>

<p>Bei komplexeren Projekten sollten Sie sich überlegen, wie Sie dem Anwender die Vielzahl der Verweise mit unterschiedlicher Bedeutung intuitiv zugänglich machen. Ein sinnvoller Weg ist, den Verweisen kleine Symbolgrafiken voranzustellen, so wie es im vorliegenden Dokument auch der Fall ist (siehe auch <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../grafiken/einbinden.htm">Grafiken einbinden</a>). Durch aussagekräftige Symbole können Sie dem Anwender sofort signalisieren, um welche Art von Verweis es sich handelt. Die Symbolgrafiken sollten jedoch in der Höhe nicht größer sein als normaler Fließtext - normalerweise etwa 10-12 Pixel. Auch <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../grafiken/verweise.htm">Grafiken als Verweise</a> tragen häufig zu einer besseren Verweiskennzeichnung bei.</p>

<p>Zu wenige Verweise erschweren das Navigieren in einem Projekt und zeugen von wenig Kreativität beim Anbieter des Projekts. Zu viele Verweise verwirren den Anwender und können ein "Lost-in-Hyperspace-Gefühl" erzeugen - auch das wirft kein gutes Licht auf den Projektanbieter. Setzen Sie deshalb alle Verweise, die zum bequemen Navigieren nötig sind, und denken Sie auch an Querverweise sowie an sinnvolle Verweise zu anderen WWW-Adressen. Übertreiben Sie die Querverweistechnik aber nicht.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/html20.gif" width="30" height="30" alt="HTML 2.0" title="HTML 2.0"><img src="../../src/xhtml10.gif" width="30" height="30" alt="XHTML 1.0" title="XHTML 1.0"><img src="../../src/msie1.gif" width="30" height="30" alt="MS IE 1.0" title="MS IE 1.0"><img src="../../src/netsc1.gif" width="30" height="30" alt="Netscape 1.0" title="Netscape 1.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="beispiele">Beispiele für Verweise</a></h2>

<p>Alle Verweise in HTML haben einen einheitlichen Aufbau, egal ob sie zu einem Verweisziel in der gleichen Datei, zu einer anderen Datei im eigenen Projekt, zu einer beliebigen WWW-Adresse oder zu einer beliebigen Datei eines anderen Dateityps im Internet oder lokal auf dem eigenen Rechner führen.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/a_href.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
       "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Beispiele f&uuml;r Verweise&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;Eine kleine Verweissammlung&lt;/h1&gt;

&lt;p&gt;
  &lt;a href="http://www.tagesschau.de/"&gt;ARD Tagesschau&lt;/a&gt; Nachrichten&lt;br&gt;
  &lt;a href="http://www.heise.de/newsticker/"&gt;Heise Newsticker&lt;/a&gt; Computer-Nachrichten&lt;br&gt;
  &lt;a href="http://de.news.yahoo.com/"&gt;Yahoo Nachrichtenticker&lt;/a&gt; Nachrichten&lt;br&gt;
  &lt;a href="http://www.oneworld.net/section/current"&gt;OneWorld News&lt;/a&gt; Nachrichten (en)
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="/"&gt;Wohin der wohl f&amp;uuml;hren mag?&lt;/a&gt;&lt;br&gt;
  &lt;a href="./"&gt;Und der hier?&lt;/a&gt;
&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Für Verweise in HTML gibt es das <code>a</code>-Element (<i>a = anchor = Anker</i>). Damit jedoch ein Verweis aus diesem Element wird, ist das Attribut <code>href</code> erforderlich (<i>href = hyper reference = Hyper(text)-Referenz</i>). Als Wert an das <code>href</code>-Attribut weisen Sie das gewünschte Verweisziel zu. Als Inhalt des <code>a</code>-Elements, also zwischen <code>&lt;a&gt;</code> und <code>&lt;/a&gt;</code>, notieren Sie den Text, der dem Anwender als Verweis angeboten wird (bei den meisten Web-Browsern andersfarbig, meist unterstrichen).</p>

<p>Im obigen Beispiel führen die ersten vier Verweise zu anderen Web-Angeboten. Die letzten beiden Verweise führen zu "lokalen" Zielen. Um die Syntax möglicher Verweisziele zu verstehen, müssen Sie sich mit dem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../allgemein/referenzieren.htm">Referenzieren in HTML</a> vertraut machen.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Als Inhalt des <code>a</code>-Elements, also bei Verweisen der Verweistext, ist nicht nur reiner Text erlaubt. Sie können im Verweistext auch andere <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../referenz/elemente.htm#inline_elemente">Inline-Elemente</a> notieren. Unter anderem können Sie anstelle von Text auch eine Grafik referenzieren und auf diese Weise <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../grafiken/verweise.htm">Grafiken als Verweise</a> fungieren lassen, was in der Praxis des Web-Designs recht häufig vorkommt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/html40.gif" width="30" height="30" alt="HTML 4.0" title="HTML 4.0"><img src="../../src/xhtml10.gif" width="30" height="30" alt="XHTML 1.0" title="XHTML 1.0"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/netsc4.gif" width="30" height="30" alt="Netscape 4.0" title="Netscape 4.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="gestalten">Verweise optisch gestalten mit CSS</a></h2>

<p>Wenn Sie nichts anderes angeben, erhalten Verweise bei der Darstellung die im Browser voreingestellten Farben, z.B. blau für Verweise zu noch nicht besuchten Seiten und violett für Verweise zu bereits besuchten Seiten. Um dateiweit eigene Verweisfarben zu bestimmen, können Sie die Attribute verwenden, die im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../dateiweit/farben.htm#text_verweise">Farben für Text und Verweise</a> beschrieben werden. Darüber hinaus gibt es aber die Möglichkeit, Verweise mit Hilfe von CSS individueller zu gestalten. Unter anderem ist es auch möglich, die meist voreingestellte Unterstreichung des Verweistextes zu unterdrücken.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/a_href_css.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
       "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Verweise gestalten mit CSS&lt;/title&gt;
&lt;style type="text/css"&gt;
a:link { text-decoration:none; font-weight:bold; color:#e00000; }
a:visited { text-decoration:none; font-weight:bold; color:#800000; }
a:hover { text-decoration:none; font-weight:bold; background-color:#ff0; }
a:active { text-decoration:none; font-weight:bold; background-color:#cff; }
a:focus { text-decoration:none; font-weight:bold; background-color:#080; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;Eine kleine Verweissammlung&lt;/h1&gt;

&lt;p&gt;
  &lt;a href="http://www.tagesschau.de/"&gt;ARD Tagesschau&lt;/a&gt; Nachrichten&lt;br&gt;
  &lt;a href="http://www.heise.de/newsticker/"&gt;Heise Newsticker&lt;/a&gt; Computer-Nachrichten&lt;br&gt;
  &lt;a href="http://de.news.yahoo.com/"&gt;Yahoo Nachrichtenticker&lt;/a&gt; Nachrichten&lt;br&gt;
  &lt;a href="http://www.oneworld.net/section/current"&gt;OneWorld News&lt;/a&gt; Nachrichten (en)
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="/" style="color:green"&gt;Wohin der wohl f&amp;uuml;hren mag?&lt;/a&gt;&lt;br&gt;
  &lt;a href="./" style="color:green"&gt;Und der hier?&lt;/a&gt;
&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Das Beispiel arbeitet konsequent mit Stylesheets. Dazu ist im Dateikopf der HTML-Datei ein eigener zentraler Bereich zum Definieren von CSS-Formaten notiert (<code>&lt;style&gt;...&lt;/style&gt;</code>). Näheres dazu im CSS-Kapitel im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/formate/zentrale.htm">Zentrale Formate definieren</a>. Der vielfache Wunsch von Web-Designern, die Unterstreichung des Verweistextes zu unterdrücken, wird durch die CSS-Angabe <code>text-decoration:none</code> erzielt (<code>text-decoration:underline</code> würde übrigens die Voreinstellung, also unterstrichenen Verweistext bewirken). Weitere im Beispiel verwendete Formatdefinitionen sind <code>font-weight:bold</code> (fette Schrift) sowie Angaben zur Farbe (<code>color:</code>) und zur Hintergrundfarbe (<code>background-color:</code>). Die entsprechenden CSS-Eigenschaften werden in den Abschnitten über <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/eigenschaften/schrift.htm">Schriftformatierung</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/eigenschaften/hintergrund.htm">Hintergrundfarben und -bilder</a> beschrieben.</p>

<p>Was im obigen Beispiel auffällt, ist, dass für insgesamt fünf "Verweistypen" CSS-Formate definiert werden. Mit <code>a:link</code> sind Verweise zu noch nicht besuchten Seiten gemeint, mit <code>a:visited</code> Verweise zu bereits besuchten Seiten, mit <code>a:hover</code> Verweise, während der Anwender mit der Maus über den Verweistext fährt, mit <code>a:active</code> Verweise, während sie angeklickt werden und mit <code>a:focus</code> Verweise, wenn diese mit der Tastatur angesprungen werden. Weitere Einzelheiten dazu werden im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../css/eigenschaften/pseudoformate.htm#link_visited_focus_hover_active">:link, :visited, :focus, :hover, :active (Pseudoklassen für Verweise)</a> beschrieben.</p>

<p>Die beiden letzten Verweise im obigen Beispiel werden individuell formatiert. Sie übernehmen die zentral definierten CSS-Formate, erhalten aber zusätzlich eine eigene Verweistextfarbe zugewiesen. Dazu wird im einleitenden <code>&lt;a&gt;</code>-Tag das Attribut <code>style</code> notiert.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><img src="../../src/html40.gif" width="30" height="30" alt="HTML 4.0" title="HTML 4.0"><img src="../../src/xhtml10.gif" width="30" height="30" alt="XHTML 1.0" title="XHTML 1.0"><img src="../../src/deprecated.gif" width="30" height="30" alt="deprecated (missbilligt)" title="deprecated (missbilligt)"><img src="../../src/msie3.gif" width="30" height="30" alt="MS IE 3.0" title="MS IE 3.0"><img src="../../src/netsc2.gif" width="30" height="30" alt="Netscape 2.0" title="Netscape 2.0"><img src="../../src/op512.gif" width="30" height="30" alt="Opera 5.12" title="Opera 5.12"><img src="../../src/ffox1.gif" width="30" height="30" alt="Mozilla Firefox 1" title="Mozilla Firefox 1"><img src="../../src/konq31.gif" width="30" height="30" alt="Konqueror 3.1" title="Konqueror 3.1"><img src="../../src/saf1.gif" width="30" height="30" alt="Safari 1.0" title="Safari 1.0">&nbsp;<a class="an" name="zielfenster">Zielfenster für Verweise bestimmen</a></h2>

<p>Per Voreinstellung werden alle Verweise im aktuellen Fenster geöffnet. Es sei denn, Sie haben in den Kopfdaten der HTML-Datei eine <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../kopfdaten/basis.htm#zielfenster">Zielfensterbasis</a> angegeben und dort etwas anderes bestimmt. Bei einzelnen Verweisen können Sie jedenfalls unabhängig davon entscheiden, ob ein Verweisziel im aktuellen Browser-Fenster ausgegeben werden soll, oder ob ein neues Fenster dafür geöffnet werden soll. Bei Verweisen zu fremden Web-Angeboten kann es beispielsweise sinnvoll sein, das Verweisziel in einem neuen Fenster zu öffnen. So braucht der Anwender das eigene Web-Angebot nicht zu verlassen, sondern bekommt das andere Angebot einfach in einem neuen Fenster angezeigt. Die Seite Ihres Angebots mit dem Verweis bleibt in einem Fenster im Hintergrund erhalten.</p>

<h3 class="xmp">Beispiel:</h3>

<p><img src="../../src/dokf.gif" width="15" height="10" alt="Beispiel-Seite">&nbsp;<a href="anzeige/a_target.htm">Anzeigebeispiel: So sieht's aus</a></p>

<pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
       "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Zielfenster f&uuml;r Verweise bestimmen&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;SELFHTML aktuell&lt;/h1&gt;

&lt;p&gt;immer wieder neu:
  &lt;a href="http://aktuell.de.selfhtml.org/" target="_blank"&gt;SELFHTML aktuell&lt;/a&gt;
&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<h3 class="xpl">Erläuterung:</h3>

<p>Mit dem Attribut <code>target</code> im einleitenden <code>&lt;a&gt;</code>-Tag können Sie ein Zielfenster für den Verweis festlegen. Der im Wert zugewiesene Name muss mit einem Buchstaben (A-Z, a-z) beginnen, außer in den folgenden Ausnahmen, die durch einen führenden Unterstrich gekennzeichnet sind:</p>

<p><code>_blank</code>, um den Verweis in einem neuen Fenster zu öffnen,<br>
<code>_self</code>, um den Verweis im aktuellen Fenster zu öffnen,<br>
<code>_parent</code>, um bei verschachtelten Framesets das aktuelle Frameset zu sprengen,<br>
<code>_top</code>, um bei verschachtelten Framesets alle Framesets zu sprengen.</p>

<p>Bei <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../frames/index.htm">Frames</a> geben Sie hier einen Fensternamen an, der im Frameset definiert ist. Einzelheiten zur Definition von Zielfenstern bei Verwendung von Frames finden Sie im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../frames/verweise.htm">Verweise zu anderen Frames und zum Sprengen von Framesets</a>.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Sie können mit dieser Methode lediglich auf <b>eine</b> Datei verweisen. Sollen mit einem Klick auf einen Link gleich mehrere Dateien geladen werden, dann ist dafür <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../javascript/index.htm">JavaScript</a> notwendig. Im Anwendungsbeispiel wird erklärt, wie Sie hiermit <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../javascript/beispiele/zweiframes.htm">zwei Frames gleichzeitig ändern</a> können; um eine Navigation auch ohne JavaScript zu ermöglichen, sollte stattdessen auf ein neues, angepasstes Frameset mit <code>target="_top"</code> verwiesen werden.</p>

<p>Das <code>target</code>-Attribut ist zwar nicht als <i>deprecated</i> gekennzeichnet, doch um es einzusetzen, müssen Sie die HTML-Variante Transitional verwenden. Der Grund ist, dass dieses Attribut vorwiegend für Verweise bei Verwendung von Frames gedacht ist und Frames eine eigene HTML-Variante haben, die von der Einstufung her der Variante Transitional entspricht.</p>

<p>Viele Anwender verwenden statt <code>target="_blank"</code> irgendeinen nicht existenten Framenamen oder sogar unzulässig <code>target="_new"</code>, um einen Verweis in einem neuen Fenster zu öffnen. Das erzielt nicht den gewünschten Effekt, da das neue Fenster nicht fokussiert wird und der Anwender es unter Umständen nicht sieht (bei <code>target="_blank"</code> wird das Fenster sehr wohl fokussiert). Außerdem werden andere Verweise, die diesen eigentlich nicht verwendeten Framenamen verwenden, ebenfalls in diesem neuen Fenster geöffnet.</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="projektintern.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="projektintern.htm">Projekt-interne Verweise</a>
</td></tr>
<tr>
<td class="doc"><a href="../tabellen/nicht_visuell.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../tabellen/nicht_visuell.htm">Tabellen und nicht-visuelle Medien</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">HTML/XHTML</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Verweise (Links)</a></td>
</tr></table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
