<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: XML / Dokumenttyp-Definitionen (DTDs) / Allgemeines zu DTDs</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Welchen Zweck Document Type Definitions (DTDs) in XML haben.">
<meta name="keywords"       content="SELFHTML, XML, DTD, DTDs, Document Type Definition, Dokumenttyp-Definitionen">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-08-22T21:21:39+02:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/xml/dtds/allgemeines.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Dokumenttyp-Definitionen (DTDs)" href="index.htm">
<link rel="next" title="Bearbeitungsregeln für DTDs" href="bearbeitungsregeln.htm">
<link rel="prev" title="Regeln beim Editieren von XML und Dateinamenkonventionen" href="../regeln/allgemein.htm">
<link rel="last" title="Notationen für referenzierte Daten" href="notations.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">XML/DTDs</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Dokumenttyp-Definitionen (DTDs)</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Allgemeines zu DTDs</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#notwendigkeit">Wann ist eine DTD nötig?</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#eigene_vorhandene">Eigene oder vorhandene DTD verwenden?</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#interne_externe">Datei-interne oder DTD in separater Datei verwenden?</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#ablageort">Ablageort für DTDs in separaten Dateien</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#namenskonzept">Namenskonzept für eine DTD</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#datenanalyse">Datenanalyse als Vorbereitung zum Entwurf einer DTD</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="notwendigkeit">Wann ist eine DTD nötig?</a></h2>

<p>Eine DTD brauchen Sie immer dann, wenn Sie XML-Daten wünschen, die nicht nur <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../regeln/begriffe.htm#wohlgeformt">wohlgeformt</a>, sondern auch <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../regeln/begriffe.htm#gueltig_vollstaendig">gültig</a> sind. Denn "gültig" bedeutet: validierbar gegen eine DTD.</p>

<p>Es ist nicht zwingend notwendig, dass eine XML-Datei "gültig" ist und eine zugehörige DTD besitzt. Das Kriterium der Gültigkeit ist lediglich die "hohe Schule" von XML und der optimale Zustand. In vielen Praxisfällen ist es gar nicht nötig, eine DTD zu haben, z.B. weil man nur ein ordentliches Datenformat benötigt, das aber von keinem <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#parser">Parser</a> interpretiert wird, der auf die Gültigkeit gegen eine DTD testet. Wenn Sie also z.B. einfach Daten in XML-gerechter Form abspeichern wollen und diese mit einem <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../../perl/intro.htm">CGI-Script</a> verarbeiten, das den XML-Code mit eigenen Befehlen in HTML-Code für den Browser übersetzt, dann brauchen Sie eigentlich keine DTD und können die Dokumenttyp-Deklaration weglassen.</p>

<p>Dennoch ist das Erstellen einer DTD wo immer die Zeit es zulässt sinnvoll. Denn die DTD ist - selbst wenn die Daten im Verarbeitungsprozess nicht auf Gültigkeit getestet werden - in jedem Fall eine Dokumentation des gewünschten Sollzustands der Daten. Vor allem, wenn Datenbestände über einen längeren Zeitraum aufbewahrt und von verschiedenen Personen weiterverarbeitet oder weitergepflegt werden, ist eine DTD eine wichtige normative Grundlage für die Korrektheit und Einheitlichkeit der Daten.</p>

<p>Auch im Hinblick auf die mehrfache Verarbeitung von Daten ist eine DTD wertvoll ("mehrgleisiges Publizieren aus ein und derselben Datenquelle"). Denn nur wenn sichergestellt ist, dass bei der Datenerfassung alle definierten Regeln eingehalten werden, können Programme diese Daten ohne Verlust verarbeiten.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="eigene_vorhandene">Eigene oder vorhandene DTD verwenden?</a></h2>

<p>Generell ist es immer von Vorteil, sich an bereits vorhandene Standards zu halten. XML erlaubt zwar das Anlegen eigener DTDs, aber dabei besteht auch die Gefahr, dass das Rad immer wieder neu erfunden wird. Bevor Sie die Entscheidung treffen, eine größere, eigene DTD neu zu entwickeln, sollten Sie sich einen Überblick verschaffen, welche öffentlich zugänglichen DTDs bereits existieren. Eine Übersicht bekannter, vom W3-Konsortium entwickelter XML-Sprachen finden Sie im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#standardsprachen">Wichtige XML-Standardsprachen</a>.</p>

<p>Aber auch wenn Sie eigene DTDs entwickeln, müssen Sie nicht für jede Anwendung eine völlig neue DTD mit allem Drumherum entwickeln. Das DTD-Konzept von XML sieht nämlich die Möglichkeit vor, DTDs modular zu verwenden. Das bedeutet, Sie können sich DTDs für bestimmte Zwecke schreiben und diese dann in andere DTDs einbinden. So ist es möglich, "schlanke" DTDs zu schreiben, die aber dennoch sehr komplexe Daten-Designs enthalten, weil sie sich aus anderen, elementareren DTDs zusammensetzen.  Innerhalb eines Unternehmens ist es beispielsweise sinnvoll, sich über solch modulare DTDs Gedanken zu machen. Die Überlegungen, die man dabei anzustellen hat, gleichen denjenigen, die beim Entwurf großer, relationaler Datenbanken anfallen. Es geht dabei also letztlich um die Normalisierung von Daten.<br>
Im Abschnitt <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="entities.htm#modulare_dtds">Modulare DTDs mit Hilfe von Entities</a> wird das Prinzip beschrieben, wie Sie DTDs in andere DTDs einbinden.</p>

<p>Bei öffentlich bekannten DTDs besteht ein Vorteil darin, dass meist auch schon verarbeitende Software dafür existiert, z.B. Übersetzer-Scripts in HTML, PostScript oder MIF. XML-Sprachen wie SVG etwa werden mittlerweile schon von bekannten Grafikprogrammen verarbeitet. Mit dem Entwickeln einer DTD ist es eben meistens nicht getan - in der Regel benötigt man mehr Software als einen reinen <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../intro.htm#parser">Parser</a>, der die XML-Daten nur überprüft, aber sonst nichts weiter damit tut. Zumindest benötigen Sie in der Regel Stylesheets oder Scripts zur <img src="../../src/kap.gif" width="15" height="13" alt="Kapitel">&nbsp;<a href="../darstellung/index.htm">Darstellung von XML-Daten</a>. Der damit verbundene Aufwand kann sich bei umfangreicheren DTDs schnell in der Größenordnung bewegen, in der das Entwickeln einer individuellen Software-Lösung liegt.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="interne_externe">Datei-interne oder DTD in separater Datei verwenden?</a></h2>

<p>Interne DTDs sind nur bei kleinen Projekten zu empfehlen, deren Daten sich nur in dieser einen Datei befinden. Für größere Projekte, bei denen sich mehrere oder etliche Datendateien auf eine gemeinsame DTD beziehen, sollten Sie auf jeden Fall eine externe DTD erstellen.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="ablageort">Ablageort für DTDs in separaten Dateien</a></h2>

<p>So wie manche Leute flache und andere Leute tief verschachtelte Verzeichnisstrukturen im Dateisystem bevorzugen, gibt es Verfechter, die DTD und Daten trennen, und andere, die sie zusammen sehen möchten. Gründe lassen sich sicherlich für beide Ansichten finden.</p>

<p>Wichtig ist jedoch die Überlegung, ob auf eine DTD nur vom eigenen Rechner bzw. von lokalen Netzlaufwerken aus zugegriffen wird, oder ob Anwender diese DTD etwa über eine HTTP-Adresse in ihren XML-Daten angeben sollen. In letzterem Fall muss die DTD innerhalb eines Verzeichnisbaums abgelegt werden, die der Webserver als "document root" verwendet. In separate Dateien abgelegte DTDs haben die Dateiendung <var>.dtd</var>.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="namenskonzept">Namenskonzept für eine DTD</a></h2>

<p>Beim Entwurf einer DTD müssen Sie jede Menge Namen vergeben - für <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="elemente.htm">Elemente</a>, für <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="attribute.htm">Attribute</a> und <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="entities.htm">Entities</a>. Abgesehen davon, dass alle vergebenen Namen den <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="bearbeitungsregeln.htm#namen">Regeln für Namen</a> genügen müssen, ist es angebracht, sich im Vorfeld über ein Namenskonzept Gedanken zu machen. Denn selbst wenn den Anwendern, die mit einer DTD arbeiten sollen, zum Bearbeiten ihrer Daten eine WYSIWYG-Umgebung zur Verfügung steht, so werden sie doch mit den Namen der verfügbaren Elemente und Attribute konfrontiert.</p>

<p>Bei DTDs, die international verwendet werden sollen, ist es normalerweise am besten, nur englische Bezeichnungen zu vergeben, also etwa <code>chapter</code> statt <code>Kapitel</code> oder <code>description</code> statt <code>Beschreibung</code>.</p>

<p>Manchmal gibt es auch Gründe, Autoren-, Abteilungs- oder Firmennamen in die Namensgebung mit einfließen zu lassen, z.B. <code>marketing-statement</code> oder <code>developer-statement</code>.</p>

<p>Bei sehr umfangreichen Datenbeständen kann auch die Länge der Namen eine Rolle spielen. So beträgt der Unterschied zwischen der Notation von <code>&lt;personalausweisnummer&gt;...&lt;/personalausweisnummer&gt;</code> und <code>&lt;pnr&gt;...&lt;/pnr&gt;</code> 36 Byte, was sich bei 1.000.000 Datensätzen entsprechend multipliziert. Längere Namen haben gegenüber Abkürzungen auf jeden Fall den Vorteil der besseren Lesbarkeit. Abkürzungen sollten stets dokumentiert werden, z.B. innerhalb der DTD in Form von <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../regeln/tagsattrwerte.htm#kommentare">Kommentaren</a>.</p>

<p>Die Namensgebung sollte einem einheitlichen Konzept folgen. Es ist z.B. kein guter Stil, in einigen Elementen Groß-/Kleinschreibung anzuwenden, in anderen dagegen nicht, also z.B. <code>Abteilung</code>, aber <code>raumnummer</code>. Da XML zwischen Groß- und Kleinschreibung unterscheidet, sollte die Namensgebung sich für eine Variante durchgängig entscheiden.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="datenanalyse">Datenanalyse als Vorbereitung zum Entwurf einer DTD</a></h2>

<p>Der Entwurf einer DTD ist - obwohl es sich nicht um "Programmierung" im prozeduralen Sinne handelt - durchaus mit Software-Entwicklung vergleichbar. Bei Software-Projekten, die über einfache kleine Arbeitsscripts hinausgehen, ist es wenig sinnvoll, einfach draufloszuprogrammieren und hinterher festzustellen, dass man zu wenig bedacht und zu wenig auf Erweiterungsmöglichkeiten geachtet hat. Ähnlich ist es beim Entwurf eines Daten-Designs. DTDs werden normalerweise als Regelwerk für eine <b>Klasse von Dokumenten</b> entworfen. Die DTD muss daher flexibel genug sein, um alle aktuellen und absehbaren Anforderungen dieser Dokumentenklasse zu erfüllen.</p>

<p>Der erste Schritt sollte darin bestehen, vorhandenes Datenmaterial, das künftig in XML-Form gespeichert werden soll, zu sichten und zu analysieren. Wie sind die typischen Datenstrukturen aufgebaut?
Gibt es beispielsweise in einer Serie von Handbüchern eine immer wiederkehrende und unumstößliche Kapitelreihenfolge? Was ist uneinheitlich und lässt sich vereinheitlichen? Gibt es beispielsweise Handbücher, in denen 5 Überschriftenebenen verwendet werden, und andere, in denen nur 3 verwendet werden?
Welche festen Anhaltspunkte gibt es? Gibt es beispielsweise Handbuchabschnitte mit festem Aufbau, z.B. einleitende Funktionsbeschreibung, dann Prozedurbeschreibung, dann Hinweise? Eine Analyse vorhandener Daten liefert den Input zum Daten-Design.</p>

<p>Wenn die vorhandenen Daten ausgewertet sind, sollte man sich auch Gedanken darüber machen, in welcher Weise sich diese Daten später einmal ändern oder erweitern können. Ist es bei einem Handbuchtyp etwa möglich, dass dieser bislang nur Geräte beschreibt, in Zukunft aber auch für die Beschreibung von Software dienen soll? Welche Konsequenzen hätte dies für das Daten-Design? Welche Datenelemente müssten in so einem Fall noch mit berücksichtigt werden? Niemand kann zwar die Zukunft komplett vorhersehen, aber eine DTD sollte durchaus alle denkbare Eventualitäten berücksichtigen. Denn wenn erst einmal massenhaft Daten vorliegen, die auf einer DTD basieren, kann es problematisch werden, die DTD umzustrukturieren.</p>

<p>Bei der Software-Entwicklung hat es sich eingebürgert, im Vorfeld der Kodierung die Funktionsweise der geplanten Software auf verschiedene Weise zu beschreiben. Dafür gibt es Verfahren wie Funktionsbeschreibungen, Flussdiagramme usw. Es gibt Grob- und Feinkonzepte. Für den Entwurf von DTDs haben sich im Laufe der Zeit ähnliche Vorgehensweisen entwickelt. Die Entwicklung einer DTD beinhaltet dabei unter anderem folgende Phasen:</p>
<ul>
<li><b>Ziele für das Projekt</b>, für das die DTD entwickelt werden soll, sollten ausformuliert werden. So z.B. Validierbarkeit von Dokumenten, Möglichkeit des Mehrfachpublizierens, bessere Konvertierfähigkeit usw.</li>
<li><b>Anforderungen an die Dokumente</b>, die auf der zu entwickelnden DTD basieren sollen, müssen genau ausgearbeitet werden. Dabei helfen folgende Fragestellungen:<br>
Welche grundlegenen Informationseinheiten müssen diese Dokumente enthalten?<br>
In welche logische Gruppen lassen sich diese Informationseinheiten einteilen?<br>
Mit welchen bereits vorhandenen Datenmodellen lässt sich das neu zu erstellende Modell vergleichen?</li>
<li><b>Anforderungen an die DTD</b> müssen genau ausgearbeitet werden. Dabei helfen folgende Fragestellungen:<br>
Welche Datenstrukturen werden benötigt?<br>
Welche Daten sollen obligatorisch sein und welche fakultativ?<br>
Welche der Strukturen müssen unveränderlich und in fester Reihenfolge auftreten?<br>
Welche Daten gehören in den Inhalt von Elementen, und welche zu den Eigenschaften (Attributen)?<br>
Bei solchen Fragen des Daten-Designs kann auf die Erfahrungen und das Wissen von Software-Entwicklern, aber auch auf das der Dokument-Anwender zurückgegriffen werden.</li>
<li><b>Feinkonzept der DTD</b>. Dazu gehört:<br>
das Auswählen der für die DTD benötigten Elemente,<br>
das Ausarbeiten der Element- und Attributmodelle für die Dokumenthierarchie und der verschiedenen Elementebenen,<br>
die Validierung des Modells.</li>
<li><b>Komplettierung der Entwicklung und die Implementierung der DTD</b>. Dazu gehört auch die Entscheidung, ob und wie die DTD modularisiert (auf mehrere DTDs verteilt) werden soll, sowie die Frage danach, wie die DTD nach der Einführung gewartet und weiterentwickelt werden kann. Eine ausreichende Dokumentation der DTD (vergleichbar etwa einer W3-Empfehlung zu einer Sprache wie HTML) gehört ebenfalls zu den Aufgaben.</li>
<li><b>Test der DTD</b>. Dazu gehört das Überprüfen der DTD mit Hilfe konkreter, realistischer Dokumente und damit das Überprüfen der gesetzten Ziele.</li>
</ul>

<p>Bei größeren DTDs oder DTD-Verbundsystemen ist es durchaus sinnvoll, die Pläne der Datenstrukturierung in einfacher und unorthodoxer Form zu visualisieren. Hierarchische Abhängigkeiten zwischen geplanten Datenelementen lassen sich z.B. in Form eines numerierten "Inhaltsverzeichnisses" abbilden, relationale Beziehungen zwischen Daten beispielsweise durch Pfeile.</p>

<p>Als maßgeblich für das Entwickeln von DTDs gelten heute die Publikationen von <var>Eve Maler</var> und <var>Jeanne El Andaloussi</var> (suchen Sie gegebenenfalls in einer Suchmaschine oder bei einem Buch-Service wie <img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<a target="_top" href="http://www.amazon.de/">Amazon</a> nach diesen Namen!).</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="bearbeitungsregeln.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="bearbeitungsregeln.htm">Bearbeitungsregeln für DTDs</a>
</td></tr>
<tr>
<td class="doc"><a href="../regeln/allgemein.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../regeln/allgemein.htm">Regeln beim Editieren von XML und Dateinamenkonventionen</a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">XML/DTDs</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Dokumenttyp-Definitionen (DTDs)</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
