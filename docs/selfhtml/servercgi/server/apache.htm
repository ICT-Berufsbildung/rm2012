<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<title>SELFHTML: Webserver/CGI / Webserver / Der Apache HTTP-Webserver</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Grundlegende Informationen zum Apache-Webserver.">
<meta name="keywords"       content="SELFHTML, CGI, Web-Server, Webserver, HTTP, personal server, Apache, httpd.conf">
<meta name="author"         content="Redaktion SELFHTML, selfhtml81@selfhtml.org">
<meta name="robots"         content="noindex, nofollow">
<meta name="DC.Publisher"   content="SELFHTML e. V.">
<meta name="DC.Date"        content="2005-11-02T22:58:48+01:00">
<meta name="DC.Identifier"  content="http://de.selfhtml.org/servercgi/server/apache.htm">
<meta name="DC.Language"    content="de">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.created" content="2001-10-27T08:00+01:00">
<meta name="SELF.Pagetype"  content="page">
<link rel="alternate" type="application/atom+xml" title="SELFHTML-Weblog (Atom, gesamt)" href="http://aktuell.de.selfhtml.org/weblog/atom-feed">
<link rel="alternate" type="application/rss+xml" title="SELFHTML-Weblog (RSS, Auszüge)" href="http://aktuell.de.selfhtml.org/weblog/rss-feed">
<link rel="shortcut icon" type="image/x-icon" href="../../src/favicon.ico">
<link rel="author" title="Impressum" href="../../editorial/impressum.htm">
<link rel="contents" title="Inhaltsverzeichnis" href="../../navigation/inhalt.htm">
<link rel="index" title="Stichwortverzeichnis" href="../../navigation/stichwort.htm">
<link rel="search" title="Suche" href="../../navigation/suche/index.htm">
<link rel="help" title="Hilfe" href="../../editorial/index.htm">
<link rel="copyright" title="Urheberrecht" href="../../editorial/copyright.htm">
<link rel="top" title="SELFHTML" href="../../index.htm">
<link rel="up" title="Webserver" href="index.htm">
<link rel="next" title="SSI - Server Side Includes" href="ssi.htm">
<link rel="prev" title="Webserver lokal auf einem PC einrichten" href="allgemein.htm">
<link rel="first" title="Webserver lokal auf einem PC einrichten" href="allgemein.htm">
<link rel="last" title="HTTP-Status-Codes" href="httpstatuscodes.htm">
</head>
<body>

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td colspan="2" class="nav"><a class="an" name="top"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Webserver/CGI</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Webserver</a></td>
</tr>
<tr>
<td class="doc" width="110"><a href="../../index.htm"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></a></td>
<td class="docbot" width="100%"><h1 class="ph1">Der Apache HTTP-Webserver</h1></td>
</tr>
<tr>
<td class="doctop">
<img src="../../src/dokx.gif" width="30" height="20" vspace="6" alt="Informationsseite">
</td>
<td valign="top" nowrap="nowrap">
<p>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#allgemein">Allgemeines</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#module">Die Apache-Module</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#konfiguration">Die Konfigurationsdatei httpd.conf</a><br>
<img src="../../src/down.gif" width="14" height="10" alt="nach unten">&nbsp;<a href="#infos">Weitere Informationen</a><br>
</p>
</td>
</tr><tr><td colspan="2" class="doc">&nbsp;<a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a>&nbsp;</td></tr>
</table>



<h2><a class="an" name="allgemein">Allgemeines</a></h2>

<p>Der heute (Anfang 2007) weltweit am häufigsten eingesetzte Webserver wurde im April 1995 erstmals in einer Version 0.6.2 publiziert. Er war das Ergebnis der Zusammenarbeit einer kleinen Entwicklergruppe, die sich das Ziel gesetzt hatte, einige bugfixes und Patches für eine bereits im <strong>NCSA</strong> (<strong>N</strong>ational <strong>C</strong>enter for <strong>S</strong>upercomputing <strong>A</strong>pplications) an der Universität von Illinois eingesetzte Software zusammenzutragen. Dieser ersten Sammlung von Patches verdankt die Software auch ihren Namen: a-patch-e. Die Assoziation, dass der Name des Servers vom Namen eines Indianerstammes abgeleitet sein könnte, wird dabei wohl ins Kalkül gezogen worden sein.</p>

<p>Die in den 90er Jahren des vergangenen Jahrhunderts einsetzende explosionsartige Entwicklung des Internet begünstigte die weitere Arbeit der Entwickler enorm und bot gleichzeitig Voraussetzungen dafür, dass der Bedarf für den Einsatz zuverlässiger Server-Software erheblich anstieg. Dazu kam, dass der Apache von Anfang an eine Open-Source-Entwicklung sein und kostenlos jedem zur Verfügung stehen sollte. Die Entwicklergemeinde vergrößerte sich rasch, sodass es schließlich 1999 zur Gründung der <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://www.apache.org/">Apache Software Foundation</a> kam. Die Entwicklungsarbeit wird beständig weitergeführt.</p>

<p>Der Apache enstammt der UNIX-Welt, allerdings gibt es längst Portierungen für andere Rechnerarchitekturen und Plattformen, darunter selbstverständlich auch für Windows-Systeme. Da Windows 95, 98 und Me keine Mehrbenutzerbetriebssyteme sind und somit keine unterschiedlichen Rechte für besondere Benutzer kennen, wird von der Apache Software Foundation von einem Einsatz des Apache auf solchen Systemen im <strong>öffentlichen</strong> Betrieb <img src="../../src/en.gif" width="16" height="10" border="0" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.0/platform/windows.html">abgeraten</a>. Müssen Sie für öffentliche Aufgaben ein Windows-System einsetzen, so benutzen Sie eines der etwas moderneren NT-basierten Systeme (Windows NT, 2000, XP oder 2003). Dazu kommt, dass Sie für Windows einen Apache der Version 2 einsetzen sollten, da dieser das entsprechende <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.0/mpm.html">Multiprozessing-Modul</a> (MPM) nutzt und damit deutlich stabiler, zuverlässiger und schneller läuft als der ältere Apache 1.3.x. Wenn Sie einen Webserver lediglich im <strong>privaten</strong> Bereich oder auf einem Einzelplatzrechner zum Testen Ihrer Scripts benötigen, können Sie auch eines der älteren Systeme sowie die ältere Apache-Version einsetzen, falls Ihnen nichts anderes zur Verfügung steht.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Wenn Sie versuchen, einen Apache 2.0.x oder 2.2.x auf Windows Vista zu installieren, kann es je nach der bei Ihnen installierten Systemvariante (Home, Basic, Enterprise oder Ultimate) zu unerwarteten Problemen kommen. Versuchen Sie <strong>vor</strong> der Installation, sich als Administrator anzumelden oder nutzen Sie die Option "als Administrator ausführen", dann sollten sich Probleme wie eine scheinbar nicht vorhandene Konfigurationsdatei oder die Meldung "kann nicht als Dienst eingerichtet werden" vermeiden lassen.</p>

<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="module">Die Apache-Module</a></h2>

<p>Für jede Plattform lassen sich sowohl bereits vorkompilierte Pakete (für Windows beispielsweise MSI-Installationspakete) wie auch der komplette Sourcecode downloaden, sodass jeder Benutzer selbst entscheiden kann, wie er sich "seinen" Apache kompilieren möchte. Das setzt allerdings bereits etwas Erfahrung im Umgang mit einem C-Compiler und Makefiles voraus. Aber gerade dadurch lassen sich auch nur bedingt Aussagen über eine "Standard"-Installation treffen. Der Server selbst ist in der Regel nur eine relativ kleine ausführbare Datei. Sie kann aber je nach Konfiguration eine Vielzahl von Modulen mit teilweise sehr umfangreichen weiteren Funktionen ansprechen - und es kann auch sein, dass Sie solche Module selbst gleich "fest" mit in die ausführbare Datei einbinden möchten. Dieser modulare Aufbau birgt enorme Vorteile in sich und hat sich möglicherweise nur deshalb durchgesetzt, weil der Apache von Anfang an eben nichts wesentlich anderes als eine Sammlung von Patches rund um eine zentrale ausführbare Datei war.</p>

<p>Das Modul-Konzept war von Anfang an Bestandteil der "Bauweise" des Apache und gilt als eine seiner großen Stärken. Dabei gibt es zur Zeit ein paar kleine Unterschiede der beiden "Zweige": die jüngere Apache-Version 2.x.x nutzt konsequent den Einsatz von <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/mpm.html">Multiprozessing-Modulen</a> (MPM), die speziell dafür entwickelt wurden, dass der Apache Eigenarten der Plattform, auf der er eingesetzt wird, berücksichtigen kann. Gleichzeitig steuern diese MPM eine Reihe <img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/mod/mpm_common.html">zentraler Anweisungen</a>, die nahezu immer in der Apache-Konfiguration benötigt werden. Die ältere Apache-Version 1.3.x ist noch nicht mit derselben Konsequenz modular aufgebaut. Sie ist heute noch auf sehr vielen Servern im Internet verbreitet, wird aber nach und nach von der jüngeren Version abgelöst werden.</p>

<p>Es gibt unterschiedliche Gruppen von Modulen: Basismodule (oder Kernmodule) und andere Module. Eine andere Gruppeneinteilung kann entsprechend dem Status vorgenommen werden - also entsprechend der Art, wie sie kompiliert werden: Multiprozessing-Module (MPM), Basismodule, Erweiterungsmodule, experimentelle und externe Module. Eine Besonderheit stellen die MPM dar, die es nur für Apache 2.x.x gibt (Apache 1.3.x folgt einem anderen, älteren Modulkonzept). Obwohl in den Sourcen mehrere solcher Module zur Verfügung stehen, wird immer nur genau eines benötigt, das auf die Einsatzplattform zugeschnitten ist. Auf einer Windows-Maschine kann daher immer nur <strong>mod_winnt</strong> eingesetzt werden. Das hat damit zu tun, dass Windows kein echtes Multiprozess-System ist und für den Apache immer nur zwei Prozesse gestartet werden können - der eigentliche Server-Prozess und ein "Child"-Prozess. Auf einer Linux-Maschine können dagegen unterschiedliche "Child"-Prozesse gleichzeitig nebeneinander laufen.</p>

<p>Zur Laufzeit des Servers stehen die Kernmodule (und die eventuell statisch einkompilierten Module) immer zur Verfügung. Es gibt derzeit nur drei Kernmodule, die aber enorme Bedeutung haben:</p>

<ul>
<li><strong>core</strong> (nur Apache 2.x.x) - lässt den Einsatz von Containern in der <var>httpd.conf</var> zu, das Ansprechen von Serververzeichnissen und Dateien, die Festlegung von ServerRoot und DocumentRoot, das Anlegen von Protokolldateien, das Ansprechen eines Ports, Aliasnamen... kurz: die wirklich wichtigen Funktionen, die man als Administrator auch in der <var>httpd.conf</var> festlegen möchte, werden damit überhaupt erst ermöglicht.</li>
<li><strong>http_core</strong> - ist für <code>KeepAlive</code> zuständig und damit für die Lebensdauer von HTTP-Verbindungen. In Apache 1.3.x für alle <strong>core</strong>-Anweisungen zuständig.</li>
<li><strong>mod_so</strong> - erlaubt den Zugriff auf andere Module, die mit der <code>LoadModule</code>-Anweisung als DSO Verwendung finden sollen</li>
<li>(+ MP-Modul ab Apache 2.0.x)</li>
</ul>

<p>Andere Module können entsprechend dem Konzept der "dynamic shared objects" (DSO) mit Hilfe der <code>LoadModule</code>-Anweisung in der <var>httpd.conf</var> dazugeladen werden. Einige dieser Module wird man in fast allen Fällen benutzen wollen, beispielsweise <strong>mod_alias</strong>, das solche wichtigen Befehle wie <code>ScriptAlias</code> konfiguriert, <strong>mod_access</strong>, das die Anweisung <code>Order Allow,Deny</code> konfiguriert oder <strong>mod_dir</strong>, mit dem ein <code>DirectoryIndex</code> erst ermöglicht wird. Wenn Sie wissen möchten, wie Ihr Apache kompiliert wurde, steht Ihnen dazu der Konsolenbefehl <code>apache -l</code> zur Verfügung (je nach installierter Version kann der Befehl auch <code>httpd -l</code> oder <code>apache2 -l</code> lauten). Auf einer Windows-Maschine mit installiertem Apache 2.0.59 oder 2.2.4 ergibt das beispielsweise folgende Anzeige:</p>

<pre>
 Compiled in modules:
    core.c
    mod_win32.c
    mpm_winnt.c
    http_core.c
    mod_so.c
</pre>

<p>Abhängig davon, wie der Apache konfiguriert wurde, kann man sich auch mit <code>server-info</code> als Bestandteil der aufgerufenen URL - in der Form <var>http://domain.tld/server-info</var> - wesentlich umfangreichere Informationen anzeigen lassen. Diese Liste enthält auch Angaben über diejenigen Module, die zur Server-Laufzeit mit Hilfe der <code>LoadModule</code>-Anweisung eingebunden werden und ist sehr nützlich, wenn man sich rasch darüber informieren möchte, welche Anweisungen in der <var>httpd.conf</var> überhaupt verwendet werden dürfen.</p>

<p>In der Apache-Online-Dokumentation gibt es eine bereits übersetzte <img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/mod/">Auflistung</a> aller möglichen Module. Die Seite mit den Erläuterungen zu <img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/mod/core.html">core</a> ist ebenfalls in deutscher Sprache verfügbar und sollte bei auftretenden Fragen oder Unklarheiten immer konsultiert werden.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Gegenüber Apache 2.0.x haben sich bei Apache 2.2.x Namen und Funktionsweisen einiger Module geändert.</p>


<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="konfiguration">Die Konfigurationsdatei httpd.conf</a></h2>

<p>Sobald der Apache startet, fragt er eine zentrale Konfigurationsdatei nach Anweisungen ab, wie er sich verhalten soll. Diese zentrale Konfigurationsdatei trägt in der Regel den Namen <var>httpd.conf</var>. Sie kann aber auch einen anderen Namen tragen, wenn der Webserver mit entsprechenden Anweisungen kompiliert wurde. Einige jüngere Linux-Distributionen verwenden in ihren distributionsspezifischen Paketen beispielsweise Namen wie "apache.conf".</p>

<p>Diese zentrale Konfigurationsdatei ist eine Textdatei, in der eine Reihe von Anweisungen notiert wird, an denen sich der Apache orientiert. Bei jeder Installation wird sie in einer Standard-Form angelegt und enthält zusätzlich zu den Anweisungen auch noch kurze erläuternde Kommentare (von einigen Linux-Distributionen wird die Konfigurationsdatei seit Apache 2.0.50 in mehrere kleinere Dateien aufgesplittet). Im wesentlichen enthält die <var>httpd.conf</var> drei größere Funktionsabschnitte, in denen die unbedingt nötigen Festlegungen stehen.</p>

<h3>Global Environment (Globale Umgebung)</h3>

<p>Unter "Globale Umgebung" werden die Bedingungen verstanden, unter denen der Apache Webserver arbeiten soll. Zu dieser Arbeitsumgebung gehören:</p>

<ul>
<li>Angaben zum Servertyp<br>
(wobei für den Einsatz auf einem Windows-Rechner ausschließlich der Typ "standalone" gewählt werden kann)</li>
<li>die Definition des Verzeichnisses bzw. Laufwerks auf dem Rechner, in dem sich die Programm-, Konfigurations- und Protokolldateien befinden</li>
<li>ein paar Festlegungen für Zugriffszeiten und -zahlen</li>
<li>die Liste der zur Laufzeit einzubindenden Module</li>
<li>Angabe der IP-Schnittstelle(n) und des/der zugewiesenen Ports (<strong>Apache 2.x.x</strong>)<br>
In der Regel Port 80, es kann sinnvoll sein, einen anderen Port für ein lokales Netzwerk zu wählen, um möglichen Konflikten auszuweichen. Dann sollte es einer der nicht für Standards vorgesehenen Ports über 1024 sein.</li>
</ul>

<p>Bei diesen Definitionen der Arbeitsumgebung gibt es noch nicht allzuviele Variationsmöglichkeiten. Wichtig ist die Liste der Module, die nicht ohne Grund zur globalen Umgebung zählen. Im Standardfall ist die Liste der zuladbaren Module erst einmal weitgehend deaktiviert. Es lohnt sich aber, die Dokumentation zu den Modulen gründlich nachzulesen und dann diejenigen Module zu aktivieren, mit denen man arbeiten möchte. Auch das Einbinden individuell erstellter oder aus dem Internet heruntergeladener weiterer Module ist hier möglich.</p>

<h3>"Main" server configuration (Hauptserver-Konfiguration)</h3>

<p>Nachdem die Arbeitsumgebung definiert worden ist, folgen als nächstes die Anweisungen zur Arbeitsweise. Arbeitsweise bedeutet dabei im wesentlichen:</p>

<ul>
<li>Festlegung des vom Server beanspruchten Ports (<strong>Apache 1.3.x</strong>)</li>
<li>Servername und Administrator-Adresse</li>
<li>Pfadangaben zu Dokument-, Benutzer- und Scriptverzeichnissen</li>
<li>Formatierung der Protokolldateien</li>
<li>Aufgabenzuweisung an die geladenen Module</li>
</ul>

<p>Während die Festlegung des Ports, die Namensgebung (ein Servername wird zwingend verlangt, sonst startet Apache nicht) sowie die Bestimmung der Pfade von Server-Verzeichnissen und die Inhaltsvorgabe für die Protokolldateien (Logs) in der Regel keine Probleme darstellen, liegt die Hauptarbeit eines Administrators wahrscheinlich darin, den Modulen die gewünschten Aufgaben zur Erledigung zuzuweisen. Ob diese Zuweisungen von Apache befolgt werden können, ist davon abhängig, ob das entsprechende Modul überhaupt geladen ist.</p>

<h3>Virtual Hosts (virtuelle Hosts)</h3>

<p>Der Begriff <strong>virtueller Host</strong> wurde eingeführt, um das Konzept zu kennzeichnen, mit dem auf ein und derselben Maschine mehrere unterschiedliche Webangebote verfügbar gemacht werden können. Der Apache gilt als einer der ersten Server überhaupt, die IP-basierte virtuelle Hosts direkt unterstützt haben (seit Version 1.1).</p>

<p>Es gibt grundsätzlich zwei Methoden, virtuelle Hosts einzurichten:<br>
- namensgestützte virtuelle Hosts<br>
- IP-gestützte virtuelle Hosts<br>
</p>

<p>IP-Adressen werden benötigt, damit die Datenpakete des Übertragungsprotokolls (TCP/IP) tatsächlich nur von dem Rechner (bzw. der Netzwerk-Schnittstelle) angenommen werden, dem eine solche individuelle Adresse zugeordnet ist. Dazu müssen Domainname und IP-Adresse der Registrierung entsprechen, die in einer Datenbank archiviert ist. Diese Aufgabe fällt dem Domain Name Service (DNS) zu. Nur wenn auf einem Rechner IP-Adresse und Domainname mit diesen DNS-Daten übereinstimmen, kann der Rechner, der über die gesuchte IP-Adresse und den Domainnamen verfügt, die Datenpakete auch erhalten und weiterbearbeiten.<br>
Namensgestützte virtuelle Hosts machen es möglich, mehrere unterschiedliche Domainnamen einer einzelnen IP-Adresse zuzuordnen. Der Webserver wird damit in die Lage versetzt, die Verwaltung der Domains auch auf unterschiedliche Art zu realisieren - beispielsweise könnte eine Domain für CGI-Scripts eingerichtet werden, eine andere dagegen keine solchen Scripts zulassen. Das Konzept für namensbasierte virtuelle Hosts ist relativ einfach und wird auch am häufigsten genutzt.<br>
IP-gestützte virtuelle Hosts erhalten unterschiedliche IP-Adressen. Die Zahl der verfügbaren IP-Adressen ist jedoch eng begrenzt, da den Netzwerk-Schnittstellen einer (physischen) Maschine ja immer nur eine individuelle IP-Adresse zugeordnet werden kann. Werden mehrere IP-Adressen benötigt, kann das mit einer Methode, die IP-Aliasing genannt wird, erreicht werden. Solche IP-Aliase können nun einer Domain zugewiesen werden, zusätzlich aber auch für weitere namensgestützte virtuelle Hosts Verwendung finden.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Ab Apache 2.2.2 wird von der Apache Software Foundation empfohlen, nicht mehr eine einzelne Konfigurationsdatei einzusetzen, sondern sie in mehrere kleinere Teile aufzutrennen. Eine Praxis, die bei Linux-Distributionen schon seit Apache 2.0.50 auf unterschiedliche Weise verfolgt wurde. Auf einem Windows-System finden Sie bei einer Standardinstallation jetzt ebenfalls mehrere Unterverzeichnisse im /conf-Verzeichnis, beispielsweise <var>default</var> und <var>extra</var>.</p>

<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h3><a class="an" name="container">Die Container mit den einzelnen Anweisungen</a></h3>

<p>Wenn man das erstemal einen Blick in die <var>httpd.conf</var> wagt, ist es durchaus möglich, dass ihr grundsätzlicher Aufbau an ein HTML-Dokument erinnert. Sie enthält eine Reihe von Eintragungen, die von den gewohnten <var>&lt;</var> spitzen Klammern <var>&gt;</var> umschlossen werden und wie "Tags" wirken. Selbstverständlich sind sie das nicht. Sondern es handelt sich um so genannte Container, in denen jeweils ganz bestimmte Anweisungen zusammengefasst werden.</p>

<p>Folgende Container sind derzeit möglich: <var>&lt;Directory&gt;, &lt;DirectoryMatch&gt;, &lt;Files&gt;, &lt;FilesMatch&gt;, &lt;IfDefine&gt;, &lt;IfModule&gt;, &lt;Location&gt;, &lt;LocationMatch&gt;, &lt;Proxy&gt;, &lt;ProxyMatch&gt;</var> und <var>&lt;VirtualHost&gt;</var>. Man kann sie nach zwei Gruppen ordnen: <var>&lt;IfDefine&gt;</var> und <var>&lt;IfModule&gt;</var> werden ausgewertet, sobald der Server selbst startet und müssen nicht bei Anfragen berücksichtigt werden. Darin enthaltene Anweisungen werden nur wirksam, wenn eine Bedingung zutrifft. Die anderen Container enthalten Anweisungen, mit denen Verzeichnisse angesprochen werden können und die das Verhalten bei Zugriffen auf bereitgestellten Webspace bestimmen. Sie werden bei Anfragen ausgewertet.</p>

<h4>&lt;IfDefine&gt; und &lt;IfModule&gt;</h4>

<p><var>&lt;IfDefine&gt;</var> reagiert auf Parameter, die bei Serverstart in der Befehlszeile eingegeben werden (können). Dabei gibt es zwei unterschiedliche Reaktionsweisen: es kann festgelegt werden, ob eine Bedingung zutrifft oder ob sie nicht zutrifft, abhängig davon werden die im Container enthaltenen Anweisungen ausgeführt - oder eben nicht ausgeführt. Die Startparameter selbst kann man auch in einem Startscript vorgeben. Im Standardfall wird <var>&lt;IfDefine&gt;</var> nicht benötigt und ist auch nicht in einer Standard-<var>httpd.conf</var> enthalten.<br>
<var>&lt;IfModule&gt;</var> werden Sie dagegen häufiger nutzen wollen, da mindestens die Festlegung für eines der Multi-Prozessing-Module (für Apache 2.x.x) benötigt wird sowie nahezu immer auch weitere Module angesprochen werden sollen. Die Module selbst stellen erst die benötigten Anweisungen bereit, es ist sicherer, modul-spezifische Anweisungen innerhalb eines <var>&lt;IfModule&gt;</var>-Containers zu notieren, da der Apache auf diese Anweisungen nur dann zugreift, wenn das entsprechende Modul tatsächlich geladen ist.</p>

<h4>&lt;Directory&gt; und &lt;DirectoryMatch&gt;</h4>

<p><var>&lt;Directory&gt;</var> wird eingesetzt, um Anweisungen zusammenzufassen, die nur für das genannte Verzeichnis und dessen Unterverzeichnisse gelten. Die Verzeichnisnamen werden unmittelbar im Container notiert. "Verzeichnisname" ist dabei entweder der vollständige Pfad zu einem Verzeichnis oder eine Zeichenkette mit Platzhaltern. In einer Zeichenkette mit Platzhaltern entspricht <kbd>?</kbd> einem einzelnen Zeichen und <kbd>*</kbd> einer Zeichenkette beliebiger Länge.<var>&lt;Directory&gt;</var>-Container sind so gut wie immer in einer <var>httpd.conf</var> enthalten.
<br><var>&lt;DirectoryMatch&gt;</var> erfüllt dieselben Aufgaben wie <var>&lt;Directory&gt;</var>, mit dem Unterschied, dass als "Verzeichnisname" hier ein Regulärer Ausdruck Verwendung findet und kein Verzeichnisname.</p>

<h4>&lt;Files&gt; und &lt;FilesMatch&gt;</h4>
<p>Der Container <var>&lt;Files&gt;</var> enthält Anweisungen, die nur für ganz bestimmte Dateien gültig werden sollen. Dieser Container wird beispielsweise benutzt, um <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="htaccess.htm">.htaccess-Dateien</a> vor unbefugten Zugriffen zu verbergen. Das Pendant <var>&lt;FilesMatch&gt;</var> erfüllt dieselbe Aufgabe, wiederum mit dem Unterschied, dass anstelle eines bestimmten Dateinamens ein Regulärer Ausdruck eingegeben werden kann, womit beispielsweise mehrere Dateinamen - eventuell Grafikformate - auf identische Weise behandelt werden können.</p>

<h4>&lt;Location&gt; und &lt;LocationMatch&gt;</h4>

<p>Der Container <var>&lt;Location&gt;</var> gilt für URLs. Das ist bisweilen nicht leicht verständlich, da ja der Apache in der Regel auf Anfragen reagiert, die ein Client (ein Browser) mit der Angabe einer URL an ihn schickt. Es wird jedoch klar, wenn man sich vor Augen hält, dass <var>&lt;Directory&gt;</var> und <var>&lt;Files&gt;</var> für Dateien gelten, die innerhalb von Serververzeichnissen liegen, <var>&lt;Location&gt;</var> dagegen Informationen abruft, die nicht zum Serverdateisystem gehören (müssen). Verdeutlichen kann man sich diesen Unterschied anhand der vorformulierten <var>&lt;Location&gt;</var>-Container für <strong>server-info</strong> und <strong>server-status</strong>. Auch hier gilt wieder, dass das Pendant <var>&lt;LocationMatch&gt;</var> eingesetzt wird, wenn Reguläre Ausdrücke eingesetzt werden sollen.</p>

<h4>&lt;Proxy&gt; und &lt;ProxyMatch&gt;</h4>

<p>Ein <var>&lt;Proxy&gt;</var>-Container kann nur eingesetzt werden, wenn zuvor das entsprechende Modul <strong>mod_proxy</strong> geladen wurde. Es gibt noch weitere Module für den Umgang mit Proxy-Inhalten, beispielsweise <strong>mod_proxy_ftp</strong>, mit dem der Apache in die Lage versetzt werden kann, FTP-Inhalte auszuliefern - sofern sie denn im Proxy-Cache gespeichert sind. Gelegentlich wird darauf hingewiesen, dass <var>&lt;Proxy&gt;</var> nicht genutzt werden sollte, wenn gleichzeitig SSL aktiviert ist. Auch hier findet das Pendant <var>&lt;ProxyMatch&gt;</var> dann Verwendung, wenn Reguläre Ausdrücke genutzt werden sollen.</p>

<h4>&lt;VirtualHost&gt;</h4>

<p>Dies ist der vielleicht am besten bekannte Container. Innerhalb von <var>&lt;VirtualHost&gt;</var>-Containern kann nahezu alles andere ebenfalls enthalten sein, was im Hauptabschnitt der <var>httpd.conf</var> (main server configuration) Verwendung finden darf.</p>

<h3 class="inf">Beachten Sie:</h3>

<p>Umfangreichere Informationen über die Container sind in der <img src="../../src/en.gif" width="16" height="10" border="0" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/sections.html">Apache-Dokumentation</a> zu finden.</p>

<p>Die Standard-Datei, die Sie während der Installation des Apache erhalten, sollten Sie unbedingt bearbeiten, da eine Reihe von Einstellungen, auf die Sie vielleicht Wert legen (z.B. die Erlaubnis zum Ausführen von Scripts), erst aktiviert werden muss. Sie haben weitgehende Freiheiten, aus der <var>httpd.conf</var> eventuell kleinere Dateien auszugliedern, die Sie dann mit <code>Include</code> in die <var>httpd.conf</var> wieder einbinden. Wenn Sie beispielsweise viele virtuelle Hosts zu betreuen haben, werden Sie mindestens dafür eine gesonderte Datei anlegen wollen - einfach deshalb, weil Sie damit einen besseren Überblick haben.</p>

<p>Aus Gründen des Überblicks sollten Sie grundsätzlich, noch <strong>bevor</strong> Sie irgendwelche Anpassungen vornehmen, eine Kopie Ihrer <var>httpd.conf</var> unter anderem Dateinamen und möglichst auch an einer anderen Stelle auf Ihrem Rechner abspeichern. Geht dann irgendetwas schief, können Sie sie zurückkopieren und haben wenigstens den Ausgangszustand wiederhergestellt. Haben Sie eine solche Kopie abgelegt, sollten Sie aus der <var>httpd.conf</var> alle Kommentare entfernen (da Sie sie ja bei Bedarf in Ihrer Kopie immer noch nachlesen können) sowie die Anweisungen streichen, bei denen Sie sicher sind, dass Sie sie nicht brauchen werden. Sie werden sehen, dass dann Ihre resultierende <var>httpd.conf</var> bereits eine relativ "handliche" Größe aufweist. Bei allen Fragen, die sich Ihnen dann eventuell stellen, lesen Sie bitte in der Apache-Dokumentation nach, die Sie auch auf Ihrem Rechner vorfinden.</p>



<p class="doc"><a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a><a href="#bottom"><img src="../../src/down.gif" width="14" height="10" border="0" alt="nach unten"></a></p>



<h2><a class="an" name="infos">Weitere Informationen</a></h2>

<p>Die <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a href ="http://www.apache.org/">Apache Software Foundation</a> pflegt eine umfangreiche Dokumentation, auf die Sie sicher zurückgreifen wollen, wenn Ihnen irgendetwas bei der Administration Ihres Apache nicht klar ist. Da sich die beiden Apache-Versionen (1.3.x und 2.x.x) in manchen Bereichen unterscheiden, ist auch die Dokumentation für beide "Zweige" getrennt verfügbar. Die <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs/">Apache-1.3.x-Dokumentation</a> gibt es nur in englischer Sprache. An der deutlich umfangreicheren <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.0/">Apache-2.0.x-Dokumentation</a> arbeitet eine Gruppe von Übersetzern, um sie in mehreren Sprachen anbieten zu können. Viele Teile sind bereits in deutscher Sprache nachlesbar. Dasselbe gilt für die <img src="../../src/en.gif" width="16" height="10" alt="englischsprachige Seite">&nbsp;<img src="../../src/de.gif" width="16" height="10" alt="deutschsprachige Seite">&nbsp;<a target="_top" href="http://httpd.apache.org/docs-2.2/">Apache-2.2.x-Dokumentation</a></p>

<h3 class="inf">Beachten Sie:</h3>

<p>Im Online-Angebot von SELFHTML aktuell finden Sie weitere Informationen zum Thema Webserver und Links zu anderen Quellen im Web. Folgende Inhalte kommen in Frage:</p>

<p>
<img src="../../src/serverkap.gif" width="15" height="13" alt="Online-Kapitel">&nbsp;<a target="_top" href="http://aktuell.de.selfhtml.org/artikel/server/">Artikel zur Serverkonfiguration</a><br>
</p>



<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" class="doc">
&nbsp;<a href="#top"><img src="../../src/up.gif" width="14" height="10" border="0" alt="nach oben"></a>
</td></tr>
<tr><td class="doc"><a href="ssi.htm"><img src="../../src/next.gif" width="10" height="10" border="0" hspace="10" alt="weiter"></a></td>
<td width="100%"><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="ssi.htm">SSI - Server Side Includes</a>
</td></tr>
<tr>
<td class="doc"><a href="allgemein.htm"><img src="../../src/prev.gif" width="10" height="10" border="0" hspace="10" alt="zurück"></a></td>
<td><img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="allgemein.htm">Webserver lokal auf einem PC einrichten </a>
</td>
</tr>
<tr><td colspan="2" class="doc">&nbsp;</td>
</tr>
<tr>
<td colspan="2" class="nav"><a class="an" name="bottom"><img src="../../src/refkap.gif" width="16" height="13" alt="Teil von"></a> <a href="../../index.htm">SELFHTML</a>/<a href="../../navigation/index.htm" target="_parent" class="navh">Navigationshilfen</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="../index.htm">Webserver/CGI</a> <img src="../../src/refkap.gif" width="16" height="13" alt="Teil von">&nbsp;<a href="index.htm">Webserver</a></td>
</tr>
</table>

<p>&copy; 2007 <img src="../../src/dok.gif" width="15" height="10" alt="Seite">&nbsp;<a href="../../editorial/impressum.htm">Impressum</a></p>

</body>
</html>
